{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/ApplicationContext与BeanFactory关系.png","path":"img/ApplicationContext与BeanFactory关系.png","modified":0,"renderable":0},{"_id":"source/img/Spring模块.png","path":"img/Spring模块.png","modified":0,"renderable":0},{"_id":"source/img/touxiang.jpg","path":"img/touxiang.jpg","modified":0,"renderable":0},{"_id":"source/img/责任链设计模式1.jpg","path":"img/责任链设计模式1.jpg","modified":0,"renderable":0},{"_id":"source/img/责任链设计模式2.jpg","path":"img/责任链设计模式2.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.jpg","path":"images/touxiang.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/visitor.jpg","path":"images/visitor.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/Aplayer-Controler.js","path":"js/src/Aplayer-Controler.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/particle.js","path":"js/src/particle.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/APlayer.min.js","path":"js/src/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/blogbk.jpg","path":"images/blogbk.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/SC01C25.jpg","path":"images/SC01C25.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/sidebar.jpg","path":"images/sidebar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.gif","path":"images/touxiang.gif","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"b2479de2db77f47fef51f6a3ae330ac88c0c3f50","modified":1534754753619},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1515509770000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1515509770000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1515509770000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1515509770000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1515509770000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1515509770000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1515509770000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1515509770000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1515509770000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1515509770000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1515509770000},{"_id":"themes/next/README.md","hash":"80fad363c52358e61a19f5cf1723e5c79200ee98","modified":1515509770000},{"_id":"themes/next/_config.yml","hash":"771c1792013d0951cccd2a6d3641b76d1e530df2","modified":1653477888612},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1515509770000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1515509770000},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1515509770000},{"_id":"source/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534668307569},{"_id":"source/img/ApplicationContext与BeanFactory关系.png","hash":"5bf22ea88395d2e32c528dd395e6abd91fde91e1","modified":1536233284344},{"_id":"source/img/Spring模块.png","hash":"0ffa4023525198dae3072ca19a362982ad002941","modified":1536226205032},{"_id":"source/img/touxiang.jpg","hash":"c1090eecf185f6597b701179911580348906d30f","modified":1534765878371},{"_id":"source/img/责任链设计模式1.jpg","hash":"93296f14ec6a627551bcd1a08f4569a1aafe2789","modified":1536756773662},{"_id":"source/img/责任链设计模式2.jpg","hash":"13b411a02ab009b66b9f94a8a047c2109fd2a745","modified":1536756797704},{"_id":"source/about/index.md","hash":"57b176fe4accdbc0201fd36cde26daef5d95237d","modified":1536806791319},{"_id":"source/tags/index.md","hash":"28eb9351ace75892bc1b4b697241a47ff082b82d","modified":1536806683885},{"_id":"source/photos/index.ejs","hash":"550e74d833430e4f62391468f10669975308c702","modified":1534668307566},{"_id":"source/photos/ins.css","hash":"2ba8d33e612ceec5224d3ef2f9809b86dc2a66e7","modified":1534668307566},{"_id":"source/photos/ins.js","hash":"2b147cfc39d7f91e592b1c2f4506e5a077843a97","modified":1534668307567},{"_id":"source/photos/ins.json","hash":"9778f5bfdc9f7de2b5e5e91140fa8b5f108c35b1","modified":1534668307568},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1515509770000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1515509770000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1515509770000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1515509770000},{"_id":"themes/next/layout/_layout.swig","hash":"741f922fd6fc8c396cd347a1fe07d70b0ad60b99","modified":1515509770000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1515509770000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1515509770000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1515509770000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1515509770000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1515509770000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1515509770000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1515509770000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1515509770000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1515509770000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1515509770000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1515509770000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1515509770000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1515509770000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1515509770000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1515509770000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1515509770000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1515509770000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1515509770000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1515509770000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1515509770000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1515509770000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1515509770000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1515509770000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1515509770000},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1515509770000},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1515509770000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1515509770000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1515509770000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1515509770000},{"_id":"themes/next/layout/_custom/myapcontroler.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535024349560},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"source/_posts/2018/Babel简单Js代码转换.md","hash":"4927fd338ab4c6088909945779f6e2bb7e754e8f","modified":1536802815233},{"_id":"source/_posts/2018/JavaScrpt解析ast.md","hash":"76b8175b4de8cb020312f70ebdd10d8c2b0d0924","modified":1535446911848},{"_id":"source/_posts/2018/Spring基础.md","hash":"12a83d27a3696727a53c513e10c6977fbb979420","modified":1536803015852},{"_id":"source/_posts/2018/Spring高级话题.md","hash":"dd2b74d9aafb28430351635dbc03b465439646a0","modified":1536239080526},{"_id":"source/_posts/2018/ThreadLocal.md","hash":"a78c319cfff38b39fba59900507ad892fad22a91","modified":1536802062642},{"_id":"source/_posts/2018/babel过滤URL.md","hash":"1187e16522968e1d3e00912f70db11c1374e235e","modified":1536807301852},{"_id":"source/_posts/2018/hello-world.md","hash":"626532ba1a12403e3fcc74f617e7e76fd024162a","modified":1534829587834},{"_id":"source/_posts/2018/jsoup.md","hash":"ada5a46cf69656d1e0de2986c7dd906f0bb16dd2","modified":1536818834466},{"_id":"source/_posts/2018/使用Logger进行日志处理.md","hash":"a45c3181f0ed170c26455193a5f49a06e1b5dc37","modified":1536802295517},{"_id":"source/_posts/2018/坤哥：相识度匹配.md","hash":"a841049ba1b1c3303342a3815231e6d4e7542472","modified":1536803843724},{"_id":"source/_posts/2018/自定义注解.md","hash":"19eb06f500ee17a39c1ba0d2b1ddc49f6be79ac0","modified":1536801961358},{"_id":"source/_posts/2018/责任链设计模式.md","hash":"79efb8773081cd60b41e9489bb0fe116d1a75203","modified":1536801917890},{"_id":"source/_posts/2018/震惊！外部类可以访问内部类private变量.md","hash":"db4c41e5af5d2d2ceb98d5d10ebc0f28a1b2bfe1","modified":1536821053493},{"_id":"source/_posts/待完成/Docker基础.md","hash":"9d1a8eb6c0e8d58d2b679a3ed8a855e0e37133e5","modified":1536224068834},{"_id":"source/_posts/待完成/Filter基础.md","hash":"f4ffe18d72d71ea02c3fdbee4b6c1bfa73d2b54d","modified":1536224130845},{"_id":"source/_posts/待完成/Hibernate基础.md","hash":"b2516a8048fa6b35b507041e48c783ea0a17ae4a","modified":1536224026881},{"_id":"source/_posts/待完成/Hibernate进阶.md","hash":"9ecf23b60df89697be64823d41b7304e21a134dc","modified":1536224044037},{"_id":"source/_posts/待完成/Linux基础.md","hash":"bb74150d3b891e466f70d92d1b5cfc69ffc84ebf","modified":1536224162363},{"_id":"source/_posts/待完成/MQ基础.md","hash":"72d86a3668207927e1a1a8dd8b547654dd7f434b","modified":1536224060120},{"_id":"source/_posts/待完成/MyBatis基础.md","hash":"684d656455eefa78ba0e1c2e8b756473b5b21d88","modified":1536223975449},{"_id":"source/_posts/待完成/MyBatis进阶.md","hash":"86b9e358f04f04ab297bd3fa7aaf23b01a3e92d9","modified":1536223992901},{"_id":"source/_posts/待完成/Redis基础.md","hash":"3dce27d1e8447c16aedabd6fe005fa64ae05599e","modified":1536224095915},{"_id":"source/_posts/待完成/SpringBoot基础.md","hash":"39d7346ca7854f593ce0be8fbccfb5fc5495cf6b","modified":1536803027512},{"_id":"source/_posts/待完成/SpringBoot的Web开发.md","hash":"e6ce765c16c7b65716143f70cdf68905717916a7","modified":1536223867090},{"_id":"source/_posts/待完成/SpringBoot核心.md","hash":"73cff1da57f572806c1349dc7ffed25f31515180","modified":1536223833903},{"_id":"source/_posts/待完成/SpringBoot的数据访问.md","hash":"26e849e33892b618c5187dd95b4e877ea058f401","modified":1536223877341},{"_id":"source/_posts/待完成/SpringMVC基础.md","hash":"b74046c9461a57ad758a0a755b788624cd583596","modified":1536223803476},{"_id":"source/_posts/待完成/Spring常用配置.md","hash":"bf30c537f2c791a1ca5069c398feaab2f9e28bf6","modified":1536223752805},{"_id":"source/_posts/待完成/设计模式概述.md","hash":"5edb2dedba4c624cdf2f17ab6aae8934ea23adba","modified":1534829306151},{"_id":"source/_posts/待完成/随笔记.md","hash":"cbfabad5d0d5be7898e77c31e3fe5f7cffd867f9","modified":1537838358971},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1515509770000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"4c518c51e43d50ca647ae5e6e32c5039a5e2878c","modified":1535092173969},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1515509770000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1515509770000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1515509770000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1515509770000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1515509770000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1515509770000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1515509770000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1515509770000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1515509770000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1515509770000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1bd203c8ffd1eda5431fcf25cde408cea5f88315","modified":1515509770000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1515509770000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1515509770000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1515509770000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1515509770000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1515509770000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1515509770000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1515509770000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1515509770000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1515509770000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1515509770000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1515509770000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1515509770000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1515509770000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1515509770000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1515509770000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1515509770000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1515509770000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1515509770000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1515509770000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1515509770000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1515509770000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1515509770000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1515509770000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"a8b1c59dc88279ccf6b7e5173611a10bf84bc4ba","modified":1515509770000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1515509770000},{"_id":"themes/next/source/images/avatar.jpg","hash":"46ab3cb78d36c75f6fe400e11ffd85f1a180f0cf","modified":1515509770000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1515509770000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1515509770000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1515509770000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1515509770000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1515509770000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1515509770000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1515509770000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"eb6df0bdbd30519691b8a085cce7d487a4eff3bb","modified":1534817557883},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"eb6df0bdbd30519691b8a085cce7d487a4eff3bb","modified":1534817557883},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515509770000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1515509770000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515509770000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1515509770000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1515509770000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1515509770000},{"_id":"themes/next/source/images/touxiang.jpg","hash":"c1090eecf185f6597b701179911580348906d30f","modified":1534765878371},{"_id":"themes/next/source/images/visitor.jpg","hash":"3bd90481a5d03772c3f036d6551f632423fce592","modified":1515509770000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515509770000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1515509770000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1515509770000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1515509770000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1515509770000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1515509770000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1515509770000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1515509770000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1515509770000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1515509770000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1515509770000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1515509770000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1515509770000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1515509770000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1515509770000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1515509770000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1515509770000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1515509770000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1515509770000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1515509770000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"2829d9f6fc2e1de5dfece0b18295e1f6f47e88cb","modified":1535108049737},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1515509770000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1515509770000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1515509770000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1515509770000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1515509770000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"6aa83f2c88ab9dada58d38426adcc226df90855e","modified":1515509770000},{"_id":"themes/next/source/js/src/Aplayer-Controler.js","hash":"5d05f973d703e07b814c875e95472cfac62d66a5","modified":1515509770000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1515509770000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1515509770000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1515509770000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1515509770000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1515509770000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1515509770000},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1515509770000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1515509770000},{"_id":"themes/next/source/js/src/particle.js","hash":"914c8e99af756e7004359aaa71fee4e59f214649","modified":1535077694456},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1515509770000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1515509770000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1515509770000},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1515509770000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1515509770000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"606fddf01f6357e42bd256f1fc19c4b09c8446bf","modified":1515509770000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1515509770000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1515509770000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1515509770000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1515509770000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1515509770000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1515509770000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1515509770000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1515509770000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1515509770000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1515509770000},{"_id":"themes/next/source/js/src/APlayer.min.js","hash":"a308d275df22a22edcc4877c5b2c34a9893d3fb3","modified":1515509770000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1515509770000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1515509770000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1515509770000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1515509770000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1515509770000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1515509770000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1515509770000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1515509770000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1515509770000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"a9eb78733642e9a808bb3224d59052a59bb1da77","modified":1535108760411},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"12221371d9bb50401ce75ce4dfb7396effb7cfb9","modified":1535108226117},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"e3b6fe5519832ebc3bdf4c3886768d28a9e1b79f","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a68c89230d91f879480fc4114d1463fb6688a72c","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"89a5e4ebb423176967cb88c01c060a5dddd5a113","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"42cdb2ab21dd4a7bf19012d31535721ec9155020","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1515509770000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1515509770000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1515509770000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1515509770000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1515509770000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1515509770000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1515509770000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1515509770000},{"_id":"themes/next/source/images/blogbk.jpg","hash":"27e01c4b8a2fe235f8acbfdd5421fd01e1bf7306","modified":1515509770000},{"_id":"themes/next/source/images/SC01C25.jpg","hash":"f2926c66d8f136cef7d41581ded256b0e8ff5561","modified":1515509770000},{"_id":"themes/next/source/images/sidebar.jpg","hash":"dd4349302a5ffb7d1153d0895ee43bb4d9ab530d","modified":1515509770000},{"_id":"themes/next/images/avatar.gif","hash":"7da503505ae95cd23e2210a960ae503e76cf5fc3","modified":1653477133001},{"_id":"public/photos/ins.css","hash":"8c20f68a514bb8ff9a04207cf2f7d245710973c9","modified":1653477768830},{"_id":"public/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653477768832},{"_id":"public/photos/ins.js","hash":"9af60b2fca06e387fdd801828d9b75625552d30a","modified":1653477768832},{"_id":"public/photos/ins.json","hash":"d88d83bffa2c27982362ec5bfe75726e0dea8475","modified":1653477768832},{"_id":"public/atom.xml","hash":"ee20d2fb606f5f65a536823ea2f53ec305eb4ad4","modified":1653477768832},{"_id":"public/content.json","hash":"12a6eddb5559c06c6f344f4b623f9191a32fc020","modified":1653477768832},{"_id":"public/photos/index.html","hash":"0c2296d2779dee9e35e2c9f2effe78c842dc7b2a","modified":1653477941025},{"_id":"public/about/index.html","hash":"f5432e2b4a5960f2f1ffc184155051985d23c660","modified":1653477941030},{"_id":"public/tags/index.html","hash":"1fd1f679cdb91cd4d35fd35c9141ab9c99cc9e74","modified":1653477941030},{"_id":"public/2022/05/25/2018/jsoup/index.html","hash":"48ee0e003e19bf3169c88e117933861db5a33e32","modified":1653477941030},{"_id":"public/2018/09/25/待完成/随笔记/index.html","hash":"8470d110e249a51ea76c5059a850f388af0da0ca","modified":1653477941030},{"_id":"public/2018/09/12/2018/责任链设计模式/index.html","hash":"1fd51dd50067f0284ecf8e647e4f60d36e3e987f","modified":1653477941030},{"_id":"public/2018/09/12/2018/震惊！外部类可以访问内部类private变量/index.html","hash":"e03f1cd14a4ef01f201200bff4099423640c4d0f","modified":1653477941031},{"_id":"public/2018/09/11/2018/babel过滤URL/index.html","hash":"5b361e73a0ee59263a88f711ab72413a38477cc0","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Linux基础/index.html","hash":"f4c07a219c2c99a26097da069eeeac4248bf566b","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Redis基础/index.html","hash":"e266b46ce3cbf8389f704b55b30b173e64892489","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Filter基础/index.html","hash":"6c34470d32b66cbae9d5ca869391f91e994ccc2f","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Docker基础/index.html","hash":"0720caab209694e26190331fe198136e55f3bcbb","modified":1653477941031},{"_id":"public/2018/09/06/待完成/MQ基础/index.html","hash":"2c27e8990921d20869705b74e57a253e1731b454","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Hibernate进阶/index.html","hash":"d24fb2ee31eb93e568245d78ada8bff8b1c840e7","modified":1653477941031},{"_id":"public/2018/09/06/待完成/Hibernate基础/index.html","hash":"bff032cad737541ce211b4c8f0475589773ca89d","modified":1653477941031},{"_id":"public/2018/09/06/待完成/MyBatis进阶/index.html","hash":"fe82bd66a9cd81900b6653690fc38915d177b26f","modified":1653477941031},{"_id":"public/2018/09/06/待完成/MyBatis基础/index.html","hash":"4123376b7281d041262161dd125e82ca83c3aa78","modified":1653477941031},{"_id":"public/2018/09/06/待完成/SpringBoot的数据访问/index.html","hash":"7c2559c15f4690d79b3d3ba0663de9ba1d2942eb","modified":1653477941032},{"_id":"public/2018/09/06/待完成/SpringBoot核心/index.html","hash":"7a45825e912056fc66dd905a289de202909447f2","modified":1653477941032},{"_id":"public/2018/09/06/待完成/SpringBoot的Web开发/index.html","hash":"8988b857646580362ded006a48e3494a61928c76","modified":1653477941032},{"_id":"public/2018/09/06/待完成/SpringBoot基础/index.html","hash":"e98843c63769cc2e2d13c0fbe987e836333e36ec","modified":1653477941032},{"_id":"public/2018/09/06/2018/Spring高级话题/index.html","hash":"3b123f1d8735f98986b78646a0e52d973b98480c","modified":1653477941032},{"_id":"public/2018/09/06/待完成/SpringMVC基础/index.html","hash":"65de92ce7e3aed932e864117b9a3e5fed84b1071","modified":1653477941032},{"_id":"public/2018/09/06/待完成/Spring常用配置/index.html","hash":"1851312874a629a66f2018a332c000cea046532d","modified":1653477941032},{"_id":"public/2018/09/04/2018/使用Logger进行日志处理/index.html","hash":"a9fb0f56cb9a49d5edaacc260689ff80fa100b9c","modified":1653477941032},{"_id":"public/2018/09/06/2018/Spring基础/index.html","hash":"a28716c78915d76b5458bd53371a41932b9d0216","modified":1653477941032},{"_id":"public/2018/08/30/2018/Babel简单Js代码转换/index.html","hash":"3a917d9000e780e8dc8df7b4b77c45f270b08c5f","modified":1653477941032},{"_id":"public/2018/08/25/2018/坤哥：相识度匹配/index.html","hash":"9f932c87a0d9bc1af4f1ccb6469e5190c716fd6b","modified":1653477941032},{"_id":"public/2018/08/28/2018/JavaScrpt解析ast/index.html","hash":"6b185715f71b4754054a6eec8b00e747b36484cf","modified":1653477941032},{"_id":"public/2018/08/20/2018/ThreadLocal/index.html","hash":"de2b6a8206d2fa0901c4d0507ee495dae09af363","modified":1653477941032},{"_id":"public/2018/08/20/2018/自定义注解/index.html","hash":"900efaadf34a822020ac32b2dd4ca844e568b63b","modified":1653477941032},{"_id":"public/2018/08/20/待完成/设计模式概述/index.html","hash":"da00bdcbd8eef25ef40c2f63c632771516067bfc","modified":1653477941032},{"_id":"public/index.html","hash":"d70818cbe14ae7c80d426b34cd13ad91ce41127a","modified":1653477941039},{"_id":"public/2018/04/21/2018/hello-world/index.html","hash":"22e8310803eece19491e1e16a98bdc25244b55df","modified":1653477941039},{"_id":"public/page/2/index.html","hash":"1e6f907a74e82d8d37927cb2c1e66f7ef397e740","modified":1653477941039},{"_id":"public/archives/index.html","hash":"730c0e5d3cf4fea0a2804b0f775b0c876d98d326","modified":1653477941039},{"_id":"public/page/3/index.html","hash":"5fe6301f60f27d32d9106c9cca0bc40d23234ada","modified":1653477941039},{"_id":"public/archives/2018/page/2/index.html","hash":"b4768125b27c6bd074e9e95ec0b85cda68e0be73","modified":1653477941039},{"_id":"public/archives/page/2/index.html","hash":"d8b337b8da04af99f9ca91e09a79979e215d771b","modified":1653477941039},{"_id":"public/archives/2018/index.html","hash":"b6eab97ec97c67b71fe6e90b06fff25de422ff96","modified":1653477941039},{"_id":"public/archives/2018/04/index.html","hash":"adda898d694baec9a62b50caddd358f622bd4757","modified":1653477941039},{"_id":"public/archives/2018/08/index.html","hash":"a8e67df448a83521076629505e1d633a6fe5f37a","modified":1653477941039},{"_id":"public/archives/2018/09/index.html","hash":"446dcc7f1cce7eecec40d2d64853495b7fb0b2d0","modified":1653477941039},{"_id":"public/archives/2022/index.html","hash":"86e50aa25fd120227bba8d605b6f197a6c4c22c9","modified":1653477941039},{"_id":"public/tags/nodejs/index.html","hash":"27985d0e87fe7a2d5da643c11531c08e14648e53","modified":1653477941039},{"_id":"public/archives/2022/05/index.html","hash":"24b18c3b392d127e5712f73e9a92a314b9b7d52f","modified":1653477941039},{"_id":"public/tags/设计模式/index.html","hash":"557203a6fc5f782aa93bd970b4ead372d02cea6f","modified":1653477941039},{"_id":"public/tags/spring/index.html","hash":"7e8b8c862542ccfecb6dfd48d3adcb7bb8aafadf","modified":1653477941039},{"_id":"public/tags/Java基础/index.html","hash":"c441d58c85388608b3c4d4c97c77cd78ce859b9b","modified":1653477941039},{"_id":"public/tags/随笔记/index.html","hash":"8069811881945d84b945c1ee770db0d14274ce95","modified":1653477941039},{"_id":"themes/next/source/images/touxiang.gif","hash":"7da503505ae95cd23e2210a960ae503e76cf5fc3","modified":1653477133001},{"_id":"public/images/touxiang.gif","hash":"7da503505ae95cd23e2210a960ae503e76cf5fc3","modified":1653477941042}],"Category":[],"Data":[],"Page":[{"_content":"","source":"photos/lazyload.min.js","raw":"","date":"2022-05-25T03:00:48.029Z","updated":"2018-08-19T08:45:07.569Z","path":"photos/lazyload.min.js","layout":"false","title":"","comments":1,"_id":"cl3lhi16d00003wj427mfzgwr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我","date":"2018-09-13T02:46:13.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-09-13 10:46:13\n---\n","updated":"2018-09-13T02:46:31.319Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl3lhi1a400013wj4u57n9qsv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-09-13T02:43:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-13 10:43:56\ntype: \"tags\"\n---\n","updated":"2018-09-13T02:44:43.885Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl3lhi1a600023wj40lr2jhon","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","source":"photos/ins.css","raw":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","date":"2022-05-25T03:01:02.993Z","updated":"2018-08-19T08:45:07.566Z","path":"photos/ins.css","layout":"false","title":"","comments":1,"_id":"cl3lhi1a800033wj4ayw9bhdq","content":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","site":{"data":{}},"excerpt":"","more":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}"},{"layout":"post","slug":"photos","title":"相册","noDate":"true","comments":0,"_content":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\">Ins</a>\n\t<a class=\"photos-btn\" target=\"_blank\" href=\"http://litten.me/gallery/\">摄影</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","source":"photos/index.ejs","raw":"---\nlayout: post\nslug: \"photos\"\ntitle: \"相册\"\nnoDate: \"true\"\ncomments: \"false\"\n---\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\">Ins</a>\n\t<a class=\"photos-btn\" target=\"_blank\" href=\"http://litten.me/gallery/\">摄影</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","date":"2022-05-25T03:01:02.992Z","updated":"2018-08-19T08:45:07.566Z","path":"photos/index.html","_id":"cl3lhi1aa00043wj41aummqnp","content":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">Ins</a>\n\t<a class=\"photos-btn\" target=\"_blank\" href=\"http://litten.me/gallery/\">摄影</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","site":{"data":{}},"excerpt":"","more":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">Ins</a>\n\t<a class=\"photos-btn\" target=\"_blank\" href=\"http://litten.me/gallery/\">摄影</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n"},{"_content":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'http://litten.me/ins-min/' + data.link[i] + '.min.jpg';\n          var src = 'http://litten.me/ins/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","source":"photos/ins.js","raw":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'http://litten.me/ins-min/' + data.link[i] + '.min.jpg';\n          var src = 'http://litten.me/ins/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","date":"2022-05-25T03:01:02.994Z","updated":"2018-08-19T08:45:07.567Z","path":"photos/ins.js","layout":"false","title":"","comments":1,"_id":"cl3lhi1ab00053wj4q179it45","content":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'http://litten.me/ins-min/' + data.link[i] + '.min.jpg';\n          var src = 'http://litten.me/ins/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","site":{"data":{}},"excerpt":"","more":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'http://litten.me/ins-min/' + data.link[i] + '.min.jpg';\n          var src = 'http://litten.me/ins/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './ins.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);"},{"_content":"{\n\t\"list\": [{\n\t\t\"date\": \"2017-07\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 7,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BW_0-LNAEQy\", \"BWw_lTjAWvP\", \"BWl0n7ggC8d\", \"BWbyVtmgZA0\", \"BWPEL03A6QN\", \"BWJyvn_A8k1\", \"BWEqgtvgzyu\"],\n\t\t\t\"text\": [\"那天拍这张照片，是看到一个小女孩，借了妈妈的手机，边拍边赞叹“好美丽的颜色啊”。但照片最大的谎言就是定格，人们觉得美好是永恒的，至少不太会想时间之外的事情。\\n事实上这种植物一旦攀上柱子，就疯子一般往上爬，为了给顶端的小苗供给养分，下面的叶子会慢慢掉光。立交桥好高呀，小苗爬不上去，累了也枯萎了。最后只剩下光秃秃的丑陋藤条。\\n不过我还是希望小女孩过几天再看到它时，只是轻轻说“啊原来是这样”，而不是和我一样觉得它很丑。\", \"倦\", \"最光明的那个早上\", \"光芒万丈\", \"接连的雨，让高架上的三角梅窜得好高。高于路灯高于建筑物高于一切。不过它们的命运就是被剪掉，然后继续做一棵安分守己的好花\", \"天桥上汽车奔驰，天桥下静默花开。这是两个世界。\", \"用流行的话来讲，深圳现在的天气就是“一言不合就下雨”。但是天空从来就没有言语呀，也从来没有凑合谁的心意。不说话，不取悦，就很酷。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-06\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BV6WiUxgHp0\", \"BVrnb0GAIbo\", \"BVq6fMHAV8i\", \"BVUXrYtFwlA\", \"BVHdxQsFpYS\", \"BVE4dC6l-tK\", \"BVCbPn6lOqn\"],\n\t\t\t\"text\": [\"午睡\", \"分享一个甜甜圈\", \"分享一个失败的对焦\", \"雨后\", \"腾讯云\", \"黄昏的公园深处\", \"从今天开始，决定数一下一年有多少个多云的日子。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-05\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BUqBlIWFF_f\", \"BUlWsL0F5kE\", \"BUgrXBVlaJR\", \"BUdT28JFYpP\", \"BUYZzrJFfdJ\", \"BUO7nZZlWf0\", \"BUEZNOKFUK0\", \"BUB8VemFJEE\", \"BUA8KqRlF3n\", \"BT_4mkYFxc5\", \"BT_eImQF9sY\", \"BT-fITqlTiO\", \"BT27_ryFIr_\", \"BT0azZAFBIs\"],\n\t\t\t\"text\": [\"森林之晨\", \"Hello, _____\", \"水中豆\", \"雨中的公交车窗外\", \"飞机飞过天空\", \"西塘总的来说，还是挺好。就满大街唱着《成都》和《一瞬间》，感觉不是很懂…\", \"可能南浔真的是去过小镇的一个特例。没有太多的迷之传说去渲染，它就在这，一言不发的等你。兜兜转转又回到了百间楼，挨家问有人吗，随便帮再做个炒绣花锦吧，吃完这个菜我就走。\", \"看了一下午的燕子\", \"燕子飞过百间楼\", \"夜色里迷了路\", \"雨中漫步\", \"可能是一种“一出行铁定下雨”的体质\", \"生如夏花。整个四月都过得比较丧，想了下唯一开心的事情就是朴树的专辑了。\", \"五月\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-04\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BTvD8fCFOpY\", \"BTbS_uKF5Xx\", \"BTYKbXMFoUM\", \"BSc5TamlT16\", \"BSbA96PFiWC\", \"BSTZP6-gSaD\"],\n\t\t\t\"text\": [\"多久没去看一场日出\", \"阳光已经铺满下班的街道\", \"午睡\", \"与你跋山涉水\", \"清明晚宴，以及一个迟下楼的我\", \"一个突如其来的雨天\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-03\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BSLeDr7gDu9\", \"BSIUnyfAdQY\", \"BSAjHqkgtr9\", \"BR-0YW4gfC9\", \"BRk5uUzlAe2\", \"BRXafqQgsSY\", \"BRS_5qFA9dW\", \"BRIjntvFr5d\"],\n\t\t\t\"text\": [\"蜘蛛与落日\", \"春林初盛\", \"日光倾城\", \"夜空中最亮的路灯\", \"二月底就开始构思要拍一组日系，每天端着相机来上班，然而是连续半个月的阴雨。今天终于天放晴了，相机却没了电。\", \"车窗里雾气，车窗外水滴。想起小时候作文，写为什么喜欢雨天，因为晴天你会纠结要不要出去玩，雨天就不用想，踏实呆家里好了。但那是小时候，现在也踏实了，就是下不下雨都要去上班啊…\", \"街拍 | 七点半\", \"“又是一轮月高悬 云端那边的天 两颗星座遥望夜空 永远不能相逢”\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-02\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BRBWMaAl2h2\", \"BQfmYX5gfiy\", \"BQU0S39AetF\", \"BQFkKYIASOp\", \"BQAdVx5AOLy\"],\n\t\t\t\"text\": [\"深圳的高架有很多三角梅，这种花的优点和缺点都是太倔强\", \"最近重新把球拍拿了起来。还是会很怀念，高中那时的球馆，阳光也是这样斜斜照进来。球滚到再远的角落，还是能捡起来；人走出了球馆，可能再也回不来。不过，只要你等，也总有陌生人推开门说：加我一个。\", \"深圳\", \"离家前心血来潮，突然想再刷一遍《白鹿原》，就把书给捎上了。列车经过山洞，窗外是明灭的光影，第一次觉得黑娃横腰打白嘉轩的那一棍子这么魔幻…好像会有迷之bgm响起，佐助说我要毁了木叶\", \"近乡情怯。情怯，多好的词语\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-01\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 1,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BPwIWSXgQ_L\", \"BPoXK-sgC6M\", \"BPMTnMTAH_Y\", \"BPKrtVMgo9j\", \"BPAVAW5gFc7\"],\n\t\t\t\"text\": [\"城市住久了，第一次决定在乡村过年。白天开心农场，晚上拍星星，过上了谈笑无鸿儒往来有白丁的生活…\", \"稻草人的早晨\", \"列车继续加速度，水珠在最后的时光里尽情飞驰\", \"一个等车的人都没有。上一次看到这副光景，是2009年10月5日的凌晨3点半，湘潭至武汉\", \"“人呢？”“买菜去了呗，真慢”——所谓冬日的阳光\"],\n\t\t\t\"type\": [\"image\", \"image\", \"video\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BOsC8obAOwI\", \"BOpI4qsAi6c\", \"BOjCbzZAhQy\", \"BOUysuPgbXG\", \"BOTVNfYgjRt\", \"BOMjl4LATC-\", \"BOAF_bbA9H0\", \"BN9ZdHuAqL1\", \"BN30BiDAVGo\", \"BN2CjzagYQK\", \"BNyLQGUgdma\", \"BNwOJYlgAOL\", \"BNtsL5QgEts\", \"BNn5V7oA_nc\"],\n\t\t\t\"text\": [\"每年这个时候都要趴在这座天桥，拍一张照。这个世界似乎没变，但又在喧哗和前行。这年成长了挺多，也学会看淡一些事情。\\n可能是代码写多了，感觉世界的逻辑有时很简单，事情无非是let，变化历历，或者是const，永恒安息。如果一开始就想清楚，留不住的就随风去，不会变的就钉到骨子里。那你说多轻松。\", \"去看雪？\", \"“大楼诗人”\", \"又是一年岁末时\", \"say hi\", \"现在的每个日落，都会有光正巧从窗帘缝隙钻过，平行照射到我的电脑屏幕。这个时刻就感觉特别神圣和中二。披上了迷之神眷色彩，讲不好我的工位就是个宇宙中心，太阳在绕着代码转\", \"末班车\", \"树影，好似一只黄鹂和蜣螂\", \"街拍 | 晴天\", \"“望”\", \"午睡\", \"“黄昏之时”\", \"枯萎的植物，最后的光\", \"街拍 | 也许是深圳最后的夏日\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BNUaqEagioX\", \"BNTHIbUgigX\", \"BNRr9zBg0fu\", \"BNQHWSwA1Gy\", \"BNPbdVIg6gT\", \"BNOpXsKgU53\", \"BNBrozHAAV7\", \"BM8hsf-grvj\", \"BM8WO8xglvC\", \"BMy1VT3grFk\", \"BMrSxSNgpIN\", \"BMedxcZA0_g\", \"BMQLQvogqn7\"],\n\t\t\t\"text\": [\"“我是谁我爱谁我要谁我去哪”\", \"天都峰顶转一圈，站的地方巴掌大其实很慌…\", \"下了一夜雨，晚上没睡好，脑子里老想着天都峰关闭的事情。但风云变幻就在一瞬间，冥冥中必有回响，突如其来的晴天太过惊喜。峰顶走起\", \"上年没见着的雾凇突然出现，愿望兑现的感觉\", \"“不看岳”\", \"黄山行\", \"宿舍楼\", \"华科的秋天好像一条安静河流，慢慢扩散，了无声息，异常缓慢，又很具体。反正，时间还有很多，请随意\", \"又回我科，我科这个季节怎么拍都好看\", \"今夜月亮\", \"想过去改变，想过要离开，想过拍拍裤管就去远方。然后又想是不是先做出点事情，后来又突然有了点责任，再后来发现自己可以影响一些人… 它没有扼杀选择，反而让更多条路铺在我面前。所以，生日快乐，18岁。\", \"街拍 | 面对面\", \"一叶知秋\"],\n\t\t\t\"type\": [\"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BL_WXdxAM1Y\", \"BL6dTmIgecl\", \"BLv6COag1M6\", \"BLlf8WWgHcJ\", \"BLfzJ7gjj-8\", \"BLbaFJDAJ1i\", \"BLVHTFJgfg-\", \"BLTvxMWgKUn\", \"BLTd_nVAFQi\", \"BLP2UMKAGcn\", \"BLJIJCegCT3\", \"BLDZyq2g7Zr\", \"BLDSZ6pAsAZ\"],\n\t\t\t\"text\": [\"这年头不做作的民谣已经很少了……\", \"很久没去看那群留守的孩子了。他们还是很容易对每个人卸下心防，情绪会很强烈，所以开心时笑得特别大声，这让我想到悲伤会不会也成正比。不敢想。这世上，不一定所有问题都要去思考去直面，因为时间能帮你们解决很多问题。起码，在一起玩的时间。\", \"深圳雨，台风。小时候问大人，为什么我的风筝飞不起来？他们说要等大风。所以我期待着台风天。等了半年，台风来了，我却只能呆在窗户里往外看，也开始理解这场空欢喜。后来发现台风不单是种天气，还可以是一件事或一个人\", \"鸽子再也看不到无名山的高，你也不再是安和桥下清澈的水\", \"降低了预期，觉得滕王阁还不错。路遇一位玩摄影的大爷，教了许多东西，也听他说了许多往事。其实人得不得意都要尽欢，白不白头都要有那么一点青云之志\", \"东四变成了超市\\n东三变成了清真\\n神剪阁还在\\n绝望坡的小吃多到绝望\\n球场都翻修了\\n计科有钱了(辅导员说的)\\nofo小黄车已占领校园\\n学弟学妹主要玩lol和王者荣耀\\n光谷门对面依旧有鸡蛋灌饼和麻辣烫\\n韵苑食堂还是不怎么好吃\\n沁苑的猫又生了许多娃…\\n\\n来去匆匆，一些照片在：http://120.24.181.238/gallery/\", \"要是一个地方能称作图书馆，不单单是因为图书，还因为它收藏了太多的心事。\\n一语一念，虽不可借阅，愿永不过期。\", \"《深夜食堂》\", \"《返校日》\", \"旧时作\", \"和奶奶在一起。把轮椅推到广场下面玩，突然问我：你们厂生产什么？我：很难说，网络你知道吗… 奶奶：哦，卖绳子的啊\", \"19年前的我，就已经学会了爱恨分明……\", \"回老家，今天正好是“圩日”。村民一家老小，从竹林深处的罗江村出发，走过这条小桥，赶往市集。买到中意的衣服，或者零食，这就是完美的一天\"],\n\t\t\t\"type\": [\"video\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-09\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BK-l0eHgWep\", \"BK3W05HgBqP\", \"BK0nQcSARek\", \"BKx6pvkg5HE\", \"BKfNILQgNAO\", \"BKdn7vEAJJW\", \"BKcdEbPAWzk\", \"BKcCulagAx1\", \"BKazUfGAFlb\", \"BKayutggosw\", \"BKTJUOdgkLm\", \"BKIiijpAvmT\"],\n\t\t\t\"text\": [\"街拍 | 回望\", \"街拍 | 深拷贝…\", \"街拍 | 拷贝\", \"街拍 | 擦肩而过\", \"苗族妹子上来敬酒。以为只是普通米酒，一饮而尽，后来才跟我说有70度。那还怎样办？不走了。\", \"满城星星点点的灯火，当作你心心念念的生日蜡烛吧。生日快乐，永远单纯。\", \"以大为美的苗族银饰，近看却有许多复杂的细节\", \"迷了路找不见甲秀楼位置。干脆坐下来吃一碗哨脆面，听到对面歌舞升平，寻路过去果然找到了。道理就是，有地标的地方就有广场，有广场的地方就有广场舞。感谢大妈，感谢广场舞。\", \"眼中仿佛藏了一个宇宙\", \"曾经想仗剑走天涯\", \"…\", \"hello，好久不见\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/12317949_812027942276002_800384968_n.jpg\"],\n\t\t\t\"link\": [\"-wSMLcI7sl\"],\n\t\t\t\"text\": [\"秦教练教学得很好，三小时已可征服中级场。滑雪真是项迷人的活动，还没回去就约好了下次再来\"],\n\t\t\t\"type\": [\"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s640x640/sh0.08/e35/12269862_894338194013437_1805169379_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s640x640/sh0.08/e35/12276891_172191463131445_911534090_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/12237527_913338585386151_2037194016_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11934646_1088170014540783_209449183_n.jpg\"],\n\t\t\t\"link\": [\"-tqoLXo7v-\", \"-qKfKxo7nw\", \"-nE5BQo7uP\", \"9qjBpWI7lk\"],\n\t\t\t\"text\": [\"雪上鸦飞\", \"行走于结了冰的松花江上，遇到一群放生的人。佛经飘扬，鱼虾入河，河面转瞬又恢复了平静。而后在饭店，服务员说我们的鱼，就来自这松花江里。\\n\\n佛的安排奇妙又令人啼笑，鱼让俩群不同的人都收获了快乐？那么我想，鱼就是佛\", \"月上枝头\", \"在天黑后的日光岩顶呆了很久，一个人看一座岛，孤单也自由。后来遇到一位姑娘，我们一同下山。带着她逛遍整条龙头路找吃的，但她什么也不愿吃，问她，她说，想吃酸辣土豆丝。\\n\\n只有笑着承认，真是意料之外的答案。我出来玩，就是为了吃平时吃不到的东西，她则是觉得家乡的菜最熟悉，在哪都是愿意吃的。\\n\\n好吧，陪你吃。因为，离开武汉这么久，我也挺想念这道菜。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12145229_1722399741326075_2063247708_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12080493_892409564169375_1626542651_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/11849199_203248513340142_1615092499_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/12132912_162625974083441_1400003063_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12135478_1700175696879683_933151519_n.jpg\"],\n\t\t\t\"link\": [\"9VYE8YI7sk\", \"9BkX3xo7od\", \"8-Ba4MI7lt\", \"88Neujo7r2\", \"8uKqhDo7vp\"],\n\t\t\t\"text\": [\"在路上\", \"11点的时候，不想睡，借一只手电，一人夜游古村。这事情很刺激，转角遇到的神像，榕树的垂枝，摇曳的灯笼，自己投射到土楼的巨大影子，莫名的恐惧自心底升起。然而后来又不怕了，却总是想起以前去的思溪源村…with my friends\", \"古城的砖瓦年代久了，就很容易长出猫来\", \"以前吉他老师说，对于一首天空之城，听过与弹过是完全不一样的。弹过后才知道，从开始的吉他2品就一直在递增，仿佛自身也在飞翔，云层渐开，空城显现，情绪是那么容易被调动。然而我的水平只够感动自己，要抓紧时间努力学习了。不说了，玩游戏去了\", \"海上日出\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"video\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-9\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s640x640/sh0.08/e35/11875445_885316994870904_706284789_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s640x640/sh0.08/e35/11352715_138879086461968_2066668148_n.jpg\"],\n\t\t\t\"link\": [\"8NKC9RI7oZ\", \"8DOh_to7p0\"],\n\t\t\t\"text\": [\"沙滩总有数不完的沙子，数不完的故事。在这突然想起那本还没看完的《岛上书店》，是时候继续做些什么了\", \"陌上花开\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-6\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11429225_720390118073037_768409912_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11420780_1012574008772885_1569805305_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11252784_879698105429690_2109453469_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11267410_925161560884785_371811288_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11375982_491190547696110_2013240096_n.jpg\"],\n\t\t\t\"link\": [\"4T1Lfgo7gX\", \"3-mmN3o7mn\", \"3uts9do7jI\", \"3iK7kwI7j1\", \"3glBKbI7jm\"],\n\t\t\t\"text\": [\"大雨之后\", \"一脸无辜的王尼玛大哥，从肚腩来看，果然是正品？\", \"感觉迷上风筝了。有次做梦，想到一根根拉伸向上的线，像是在钓空中的鱼。而一个技术娴熟的“渔夫”，收杆时是这么干净利落。\", \"起飞\", \"小萝莉不愿回家，跟奶奶说：“再让我玩会，明天要学钢琴，后天要学跳舞，就来不了这儿玩了。”\"],\n\t\t\t\"type\": [\"image\", \"image\", \"video\", \"video\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-5\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/11252751_1444216632541093_1558227860_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11226595_701075516681953_1354085958_n.jpg\"],\n\t\t\t\"link\": [\"24-dd6o7uB\", \"2uQeuaI7nv\"],\n\t\t\t\"text\": [\"风雨欲来\", \"野生海带\"],\n\t\t\t\"type\": [\"image\", \"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-4\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11142212_609961145801361_1913577076_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11049421_1375007652828983_401355534_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11137852_1649834698581861_1050691792_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11055751_1573536912901494_1683773508_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11055897_1407191599597961_1763496348_n.jpg\"],\n\t\t\t\"link\": [\"1IUZByo7vP\", \"1ISKRxo7r8\", \"1GPBzpo7qW\", \"1FtGO3I7kN\", \"1C03iPI7hZ\"],\n\t\t\t\"text\": [\"要回去啦，再见北流河\", \"灵芝get√\", \"这里的清明是个很重要的节日，子孙们都会回来，跋山涉水，竹排渡江，荒山寻路，凭集体的记忆寻找列祖列宗的宝地，寄哀思，也求福德。一路上可以听他们唠叨旧事，也有超级靠谱的风水科普\", \"为了部落\", \"在清明的山路遇到了天然松香\"],\n\t\t\t\"type\": [\"video\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-3\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11123665_1542600796003839_1576473443_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008101_1593505510894691_369067449_n.jpg\"],\n\t\t\t\"link\": [\"04_8fwo7gL\", \"zzfe7Oo7uc\"],\n\t\t\t\"text\": [\"如果你飞得像月亮这么高，就不会搁浅在树上\", \"喜欢这个季节的天空，你找个草坪一躺，飞机，风筝，鸟儿就都在上边，天气好时还能看到白天的月亮\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-2\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10958252_1405701033068537_2023890854_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10832246_413065338853260_183697882_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10268927_436139166536328_1377561628_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008343_410508022446936_713236389_n.jpg\"],\n\t\t\t\"link\": [\"zcWez6I7uo\", \"zRPazvI7ol\", \"zPN2LtI7sT\", \"zKrDWlo7gZ\"],\n\t\t\t\"text\": [\"很多东西随着慢慢长大，变得不像小时候那样盼望热切，比如巧克力麦当劳薯片雪糕。只有对担子粉的爱永远不变的说…\", \"据说是一年一度考验演技的时候…\", \"锈迹斑斑的香炉\", \"回老家了，小时候跟我打过玻璃珠的小伙伴们呢？你们一个在北京，一个在安徽，一个在澳洲，一个我都不知道了…但你们看到玻璃珠的时候，要想起我来啊\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-1\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 1,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10932550_620643038062978_1729442807_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/891532_1563899373855738_1180535181_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10005439_338105566394046_854247264_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10903312_693622147425934_1766884651_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10914460_1546003772305181_1301162053_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10903277_832760670116494_255352239_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/924083_1539057536347062_2062767438_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10890944_765121966897759_2039585477_n.jpg\"],\n\t\t\t\"link\": [\"yb8uaCI7tt\", \"yKBopho7mX\", \"yAOcawI7pA\", \"x5U25kI7sN\", \"x1TTZUo7gW\", \"xeGbWuo7if\", \"xXr70fI7iD\", \"xUB4dOI7g1\"],\n\t\t\t\"text\": [\"草地上遗落的鞋子\", \"有位很久没联系的朋友寄来明信片，说：我很少看到海，正如你没见过几次雪\", \"深夜总是灵感乍现的最佳时期，只是几个设计方案都没法使自己满意。累了打开窗看到天上有个大月亮，只想用图章工具把它干掉。\", \"面朝大海冬暖花开\", \"分享日常不正常生活照一张\", \"其实我想，那些古老的渔民们，每天看着海岸线的日落日出，肯定是有人想过地球是圆的。而“想法”与“证明”之间，却跨越了一整条麦哲伦航道\", \"鱼山鱼海中，只有你，肯安静的趴在65厘米厚的亚克力板子上与我合影，大丑鱼\", \"新年单人旅行走起。其实从九洲港码头开始，珠海并没有给人很惊喜的感觉，包括盛名之下的沿海风光与渔女雕塑。倒是交通不通畅，从轮渡到公交都给我带来了许多麻烦。直到，晚上吃烤生蚝的第一口，我又觉得什么事情都是可以原谅的……\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10899183_999582293404177_745539859_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10894909_702627706517406_1277557620_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10831989_483313928477468_40906631_n.jpg\"],\n\t\t\t\"link\": [\"xRWN47I7pW\", \"xO3qREI7iW\", \"wEQykeo7tU\"],\n\t\t\t\"text\": [\"2014年最后的阳光\", \"最后一节吉他课结束后，马路上那风一直吹，才感觉南方的冬天终于是来了。其实吉他在冬天会有许多神奇的事情。比如琴弦如肌肉一样因冷而紧绷，发出比以往沉闷的低语；而空旷的大教室里，如有其他同伴拨响和弦，手中本已按灭的琴弦又会因共鸣微微颤动。像有生命一样。\", \"有棵丑树，我经常去看，又胖又歪，秃得可笑。在变冷的一天，它突然就开花了。冬天的花我知道得很少，南方没有梅花，那就是异木棉了\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10784965_1518537748403855_176956695_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10735195_1505939246340704_1984926778_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10747711_429336373885590_422028037_n.jpg\"],\n\t\t\t\"link\": [\"vP2ywuo7pq\", \"vA68BLo7tN\", \"u7zEVxo7vw\"],\n\t\t\t\"text\": [\"通灵之术！\", \"现场气氛果然不一样，马上就可以看到小伞在大哥胯下疯狂输出…是时候来首选一记薇恩了\", \"有朋友跟我说，挪威的森林根本看不下去；又有朋友说，看这书一发不可收拾。差别好大呀！我倒觉得有个简单的方法：翻到开篇的这几个字，如果心中一紧，那就说明这本书适合你，否则请弃之\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10735112_730529873702428_413107753_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10725177_573652486072155_1401604216_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10724868_302191016652312_2097904817_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10731727_461314204008708_386749273_n.jpg\"],\n\t\t\t\"link\": [\"uu70zJo7qb\", \"uQnvluo7sK\", \"uLi56Wo7oO\", \"uEv-tCo7rJ\"],\n\t\t\t\"text\": [\"天下的小饼干遇到我，貌似就只有一种下场！！\", \"一个人，一支口琴，一片海，一瓶酒\", \"《论夜归，打的，以及发票的正确用法》\", \"童年真好。我以后一定不要跟孩子说：希望你快高长大这种傻话…\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-9\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10616983_1382591478697855_2107473552_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925287_1464119273867077_427071626_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925284_1534308033454310_855505111_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10666267_1550871771803214_2074300649_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693244_734401199942901_1572709880_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693771_1517437541834868_665867908_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693822_497709657032441_1125408654_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10683941_796597910390683_12441123_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10661142_164227523747936_1526737465_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10661182_550889531706942_2043749716_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10520334_1523531751215211_1344090061_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693390_547748238660649_761529890_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693650_837768039589771_1793184733_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/914812_1529561143923493_1662159287_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10644019_368509079979549_2085033896_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10684161_918887498139099_2081383304_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10683828_327931784041264_894089329_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10666028_872988212713750_1345360858_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10665501_1452353738387652_2075798065_n.jpg\"],\n\t\t\t\"link\": [\"tXuIHso7qK\", \"tJjQlAo7kH\", \"tDYyUeo7oX\", \"tCBULHo7sW\", \"tB_Xmao7qG\", \"s8cKzLI7pM\", \"s6-lOFo7ip\", \"s5GifkI7q7\", \"s3uZcmo7uj\", \"s2bb5io7p-\", \"s2P72tI7o6\", \"s2FPpGI7o_\", \"s1LPQPo7v8\", \"szZP5Io7lY\", \"sr9rtNo7lM\", \"sr7gXKI7h_\", \"srG7fjo7sV\", \"spAnrio7oh\", \"sj4BGgI7t_\"],\n\t\t\t\"text\": [\"我的好朋友——超级高冷超级磨人的丝瓜\", \"沉眠的店主失眠的狗。想起大学的最后时光，宿舍24小时都有人醒着，自由的人生，自由的酒和曲终人散，大家通常没有另一半，没有钱，没有忧愁，爽成狗\", \"如果他是程序员…\\nvar date = lifetime;\\rif(rotate(mountain, water, stupa)){ /*return nextLifetime;*/ return meetyou(journey);\\r}\", \"听着山寨的民谣电子乐，看着美好的姑娘。功德无量。\", \"弥里塘太宁静。在这我一直想起每一个被深圳车水马龙声吵醒的早晨，真是光辉的岁月\", \"进藏。天空挂满着云，黑的白的都有。云朵转眼飘散，它却依然是蓝色。\", \"“音浪太强不晃会被撞到地上…”\", \"陌生的朋友，愿下次再能与你们相聚在丽江love wine & half。我无法融解你悲观现实的想法，你也无法说服我旅行并不是逃避。但这都很有意思。只是想起以前有个人叫我不能喝太多的酒，一想到这个呀我就越喝越多\", \"玉龙雪山\", \"以前想去丽江，但去过的人都灌输着你也许会失望的观念，因而甚至不敢动身。这是一种“怕”。有时候真得自己去看看才会了然。第一天在丽江，民谣吉他缓缓流过商业化的街道，原来没有惊喜，也没有失望，一切刚刚好。\", \"我注定要回到老路上\", \"彩云之南\", \"云南，向往已久的地方\", \"QQ同时在线人数破2亿纪念，作为一颗小小螺丝钉，名字正好镶到企鹅的大嘴巴上。这时觉得有一丝光荣，一种努力被实化的错觉；然后又有点不舒服，感觉此时的自己，和名字身边的人一样。可我想要的就是不一样。\", \"陪伴一定得是件漫长的事呵。和奶奶在一起的中秋节。\", \"中秋和家人一起去看孔明灯，热闹而安逸，这是小城市的美好。\", \"老家的葡萄藤，从我初中时就挂在这，再见已是十一年\", \"家里橄榄熟了，盐渍，暴晒，蘸蜜，简直人间美味!\", \"在一场太阳雨里回到家中\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"video\", \"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-8\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 8,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10654876_610857929023752_364709543_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10644013_777642448965989_544517718_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/924456_1471485796442896_1699836323_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10607913_692632367472666_1829853902_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10611052_1466241683635233_830264506_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10617144_829548960388746_1611410337_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10453953_542161702576881_1621059386_n.jpg\"],\n\t\t\t\"link\": [\"sXa9g6I7jB\", \"sPt4u4I7kA\", \"sC18G0o7qb\", \"sAMmEWI7oC\", \"rzSow4o7lH\", \"ro28LPI7oc\", \"rR37wLo7iu\"],\n\t\t\t\"text\": [\"在书店的晚上终于把新专反复听完。太柔了…打一星两星的人肯定是真爱粉，这点有人敢怀疑？我不是，打四星！停不下来，直到书店响起:深圳即将入眠。但22点还是深圳的早晨呀\", \"慢三的华尔兹，大篇幅的爵士即兴。感觉生活得太浮躁。也太安逸。\", \"好久没看话剧，这部果然没让人失望。导演太会讲故事了，1024个赞\", \"纵有一万种悲伤的美丽，也比不过这段。\", \"在书城里看到的《后会无期》分镜图。电影那么美，分镜是这样，这就是现实~\", \"如果你从北京来看我，我会很感动;如果你像光，从太阳那头过来，我不以为然。因为光到地球只要8.3分钟。我们经常错用代价来衡量情感\", \"相聚总有时:)\"],\n\t\t\t\"type\": [\"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-7\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 7,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925559_1482425071996009_1940959046_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10554006_501929086608023_917623457_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10576105_624878090953161_638111947_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10570119_332808380211109_125412512_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/926536_828142997203682_1319760676_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/923702_252705761596555_721784545_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10549755_708603639175850_2095584541_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/928307_1442957109299429_297849354_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10488451_303926969784787_1278259348_n.jpg\"],\n\t\t\t\"link\": [\"q5e2KpI7qn\", \"qyXXpNI7q5\", \"qxfUe0I7lp\", \"qq9usdo7hr\", \"qn4WCIo7hi\", \"ql0brho7vN\", \"qkiaYDo7t9\", \"qURC9fI7r-\", \"p4A8IuI7py\"],\n\t\t\t\"text\": [\"随便走走，发现世界还是很美好的。当拥有美好事物时，经常习惯性的熟视无睹;当努力抓住你想要的东西时，它又可能瞬间破碎。但依旧需要不妥协。\", \"荔枝——我心目中的水果之王（有之一）\", \"高中时代最新款的mp4，现已成了老古董\", \"台风来临时，刚好会是暑假。但我已没有暑假。\", \"看着一场雨由远及近的淋湿院子，太漂亮\", \"归来却空空的行囊  那故乡的云  那故乡的风  啦啦啦啦啦 啦啦啦。\", \"在今年第一个狂风大作的早上，回家去\", \"98年，世界杯第一次在我脑中留下记忆，和爸，围着那台很小的tcl。今天，爸还打电话给我，让我别看太晚影响到明天工作，但我知道他自己也会去看的。是的，我们爱足球，今生今世\", \"这几天深圳的天空很美，无论晴雨\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-6\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10362316_1434933843444633_1187384207_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10471930_507725875994902_393186392_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10454011_484872768311603_738380027_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/923661_248502122024084_2086692261_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10424605_774238262594769_78480252_n.jpg\"],\n\t\t\t\"link\": [\"p06uEZI7tG\", \"pytFNpo7sD\", \"poMFteI7q0\", \"pMt5tgI7vj\", \"o3eroFo7gK\"],\n\t\t\t\"text\": [\"“往事依稀浑似梦，都随风雨到心头”——梅表姐\", \"navy blue\", \"今天我遇到一朵枯玫瑰。她只是枯萎，从未凋零。\", \"上届卫冕冠军被打成筛子的…是热火…\", \"我和大神的差距——web工程师的自我修养\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-5\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/e15/10387796_255697041300477_753213015_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10005623_779769878723970_627922376_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10358172_1495900567292387_640174442_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10369281_674379822637848_233362820_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/928251_430572373746575_786910314_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10358301_256481271142988_1088114034_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10296597_1413560715589179_392570057_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10299642_561366610636165_721929935_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10268965_1446530205590326_114108738_n.jpg\"],\n\t\t\t\"link\": [\"op03boo7lW\", \"ops-ZUI7t-\", \"ofqhBpI7mQ\", \"odP0cno7ue\", \"oLX-4GI7ne\", \"oBl6WtI7qC\", \"nvPChzI7vU\", \"ngAyz8o7qj\", \"ndTggdI7jn\"],\n\t\t\t\"text\": [\"突然发现我还是挺喜欢大晴天的\", \"单人旅行走起！开心\", \"不久就可以吃了\", \"黄昏时分\", \"大雨倾城\", \"今天路过公园，一朵玉兰掉在身边。想起小时候陪伴我的三棵树，两棵木棉，一棵玉兰。当然玉兰这名字是后来才知道的，记忆里的那朵永远叫做香花。三年级的某天放学，这三棵树一并倒下了。\", \"雨中深大。雨季再来不再来。\", \"say hey to may\", \"故事中的小黄花\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-4\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10261258_711820055527911_220271949_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10249356_695726313802446_881680057_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268929_597082527053970_1060360934_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268941_490697914386538_1148834228_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10254195_545488182236276_1930978882_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/917572_539124756205696_1549712749_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/927273_657564254280429_578859844_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175316_650834874981595_1358429831_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/926422_245144379006241_1254093305_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/891289_302574849898688_205313988_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175309_510867459023322_1700312549_n.jpg\"],\n\t\t\t\"link\": [\"nOGNjUI7op\", \"nGJfYAo7lW\", \"nATIxlI7tR\", \"mxsNwto7pQ\", \"mm7JTUI7p0\", \"mhER0lo7oe\", \"mfvVUYI7hu\", \"mdF-nNo7pE\", \"mcVLQzo7nl\", \"mb5cFho7sd\", \"maqYInI7if\"],\n\t\t\t\"text\": [\"谢谢亲们的蛋糕和礼物;谢谢我们始终用“同学”来称呼彼此。\", \"处女座老榕树\", \"放风筝的人们\", \"现在我的状态，像极了一只被推上战场僵尸\", \"这几天我耳边是都是这样的话语:1、“就是敲敲键盘，挺清闲的哈！”2、“别太挑剔，给个一两千就先做着”3、“什么？你那一碗粉要十二块钱？！”我回深圳了，几天的清静生活，谢谢乡亲们的招待。\", \"good luck\", \"瓦上花开\", \"好吧，这是一艘船\", \"石表山，思罗河，四年后的清明我又来到了这儿\", \"清明，一路向西\", \"清明一回到家，老妈就开始炫耀她试验种的豆芽。愿君多采撷，此物最好吃？\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-3\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10012487_604746702952671_676907736_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/1171265_389602547845527_1588547561_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11376491_1614984048759908_413209146_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11251074_365441270314698_1015057085_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11380079_1581430378786145_504181803_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11330604_837683999618217_506172540_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11273047_110162449318540_1639646034_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11375356_908792249164254_112740693_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11357539_388432694679963_1281450994_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11311124_1611430865770700_1482115931_n.jpg\"],\n\t\t\t\"link\": [\"mIgOdio7jT\", \"mIAS5lo7hb\", \"lrhVmio7lF\", \"lmADv6I7rU\", \"lhPFVeI7g6\", \"lcyrKSI7h_\", \"lSda6Ko7nG\", \"lSSxd8I7kB\", \"lK0xswI7s6\", \"lA4KaBI7go\"],\n\t\t\t\"text\": [\"转角遇到戏台，耳熟却不知道是哪一出了。想起爷爷以前的二胡与杨琴，自己精削细磨的琴竹，还有他组织的“菊山楼”粤剧队，真是一晃好些年。今年清明，一定回去。\", \"这本书超赞！好书好书好书\", \"四五点写程序太累，就不写了。不告诉任何人，跑到这个立交桥底，我已来过好几回。这里有一棵白色的紫荆花，满墙爬山虎，和刚放学的小朋友，出去，右拐，再右拐，转角可以遇到你，我的肉夹馍…\", \"越来越认生了，到步行街买衣服，找到比较适合的，却因为店员太过热情…跑了出来。闹市中居然藏有一古庙，还是这里自在，漫天神佛只是笑笑，不理物我，无论喜悲。对了我来这干嘛\", \"爬山的好处:强身健体，磨砺意志，开阔胸怀…坏处是:没有wifi。\", \"又见回南天\", \"老妈说，今天要我送个礼物！离家万里，只好迅速开发出这个app，摇后就会播放我唱的真的爱你。可惜她说摇后没反应，后来才知道，她拿的ipad在摇…但我是真的爱你\", \"今天下雨，的士司机都不肯理我。头上路灯光芒遥不可及，脚下路面棱角冰冷鲜明\", \"起风吧，明天。喜欢偏冷的日子，假如是春天，假如是风大，太完美了\", \"腾讯的凌晨四点半。第一次在此过夜，听着耳熟不能详的歌，看着平静不微笑的人。然后记起，家里打来被我按掉的电话，忘了回\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-2\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/1737225_591794970889160_1849235580_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/1741200_451260698337036_577792061_n.jpg\"],\n\t\t\t\"link\": [\"kv3jNgI7sw\", \"kr8sW8I7nR\"],\n\t\t\t\"text\": [\"“不能吃太胖喔，会被杀掉的！”\", \"今晚，已经看到两个小女生在问，这里有《九云梦》吗？\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}]\n}","source":"photos/ins.json","raw":"{\n\t\"list\": [{\n\t\t\"date\": \"2017-07\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 7,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BW_0-LNAEQy\", \"BWw_lTjAWvP\", \"BWl0n7ggC8d\", \"BWbyVtmgZA0\", \"BWPEL03A6QN\", \"BWJyvn_A8k1\", \"BWEqgtvgzyu\"],\n\t\t\t\"text\": [\"那天拍这张照片，是看到一个小女孩，借了妈妈的手机，边拍边赞叹“好美丽的颜色啊”。但照片最大的谎言就是定格，人们觉得美好是永恒的，至少不太会想时间之外的事情。\\n事实上这种植物一旦攀上柱子，就疯子一般往上爬，为了给顶端的小苗供给养分，下面的叶子会慢慢掉光。立交桥好高呀，小苗爬不上去，累了也枯萎了。最后只剩下光秃秃的丑陋藤条。\\n不过我还是希望小女孩过几天再看到它时，只是轻轻说“啊原来是这样”，而不是和我一样觉得它很丑。\", \"倦\", \"最光明的那个早上\", \"光芒万丈\", \"接连的雨，让高架上的三角梅窜得好高。高于路灯高于建筑物高于一切。不过它们的命运就是被剪掉，然后继续做一棵安分守己的好花\", \"天桥上汽车奔驰，天桥下静默花开。这是两个世界。\", \"用流行的话来讲，深圳现在的天气就是“一言不合就下雨”。但是天空从来就没有言语呀，也从来没有凑合谁的心意。不说话，不取悦，就很酷。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-06\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BV6WiUxgHp0\", \"BVrnb0GAIbo\", \"BVq6fMHAV8i\", \"BVUXrYtFwlA\", \"BVHdxQsFpYS\", \"BVE4dC6l-tK\", \"BVCbPn6lOqn\"],\n\t\t\t\"text\": [\"午睡\", \"分享一个甜甜圈\", \"分享一个失败的对焦\", \"雨后\", \"腾讯云\", \"黄昏的公园深处\", \"从今天开始，决定数一下一年有多少个多云的日子。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-05\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BUqBlIWFF_f\", \"BUlWsL0F5kE\", \"BUgrXBVlaJR\", \"BUdT28JFYpP\", \"BUYZzrJFfdJ\", \"BUO7nZZlWf0\", \"BUEZNOKFUK0\", \"BUB8VemFJEE\", \"BUA8KqRlF3n\", \"BT_4mkYFxc5\", \"BT_eImQF9sY\", \"BT-fITqlTiO\", \"BT27_ryFIr_\", \"BT0azZAFBIs\"],\n\t\t\t\"text\": [\"森林之晨\", \"Hello, _____\", \"水中豆\", \"雨中的公交车窗外\", \"飞机飞过天空\", \"西塘总的来说，还是挺好。就满大街唱着《成都》和《一瞬间》，感觉不是很懂…\", \"可能南浔真的是去过小镇的一个特例。没有太多的迷之传说去渲染，它就在这，一言不发的等你。兜兜转转又回到了百间楼，挨家问有人吗，随便帮再做个炒绣花锦吧，吃完这个菜我就走。\", \"看了一下午的燕子\", \"燕子飞过百间楼\", \"夜色里迷了路\", \"雨中漫步\", \"可能是一种“一出行铁定下雨”的体质\", \"生如夏花。整个四月都过得比较丧，想了下唯一开心的事情就是朴树的专辑了。\", \"五月\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-04\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BTvD8fCFOpY\", \"BTbS_uKF5Xx\", \"BTYKbXMFoUM\", \"BSc5TamlT16\", \"BSbA96PFiWC\", \"BSTZP6-gSaD\"],\n\t\t\t\"text\": [\"多久没去看一场日出\", \"阳光已经铺满下班的街道\", \"午睡\", \"与你跋山涉水\", \"清明晚宴，以及一个迟下楼的我\", \"一个突如其来的雨天\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-03\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BSLeDr7gDu9\", \"BSIUnyfAdQY\", \"BSAjHqkgtr9\", \"BR-0YW4gfC9\", \"BRk5uUzlAe2\", \"BRXafqQgsSY\", \"BRS_5qFA9dW\", \"BRIjntvFr5d\"],\n\t\t\t\"text\": [\"蜘蛛与落日\", \"春林初盛\", \"日光倾城\", \"夜空中最亮的路灯\", \"二月底就开始构思要拍一组日系，每天端着相机来上班，然而是连续半个月的阴雨。今天终于天放晴了，相机却没了电。\", \"车窗里雾气，车窗外水滴。想起小时候作文，写为什么喜欢雨天，因为晴天你会纠结要不要出去玩，雨天就不用想，踏实呆家里好了。但那是小时候，现在也踏实了，就是下不下雨都要去上班啊…\", \"街拍 | 七点半\", \"“又是一轮月高悬 云端那边的天 两颗星座遥望夜空 永远不能相逢”\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-02\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BRBWMaAl2h2\", \"BQfmYX5gfiy\", \"BQU0S39AetF\", \"BQFkKYIASOp\", \"BQAdVx5AOLy\"],\n\t\t\t\"text\": [\"深圳的高架有很多三角梅，这种花的优点和缺点都是太倔强\", \"最近重新把球拍拿了起来。还是会很怀念，高中那时的球馆，阳光也是这样斜斜照进来。球滚到再远的角落，还是能捡起来；人走出了球馆，可能再也回不来。不过，只要你等，也总有陌生人推开门说：加我一个。\", \"深圳\", \"离家前心血来潮，突然想再刷一遍《白鹿原》，就把书给捎上了。列车经过山洞，窗外是明灭的光影，第一次觉得黑娃横腰打白嘉轩的那一棍子这么魔幻…好像会有迷之bgm响起，佐助说我要毁了木叶\", \"近乡情怯。情怯，多好的词语\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2017-01\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2017,\n\t\t\t\"month\": 1,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BPwIWSXgQ_L\", \"BPoXK-sgC6M\", \"BPMTnMTAH_Y\", \"BPKrtVMgo9j\", \"BPAVAW5gFc7\"],\n\t\t\t\"text\": [\"城市住久了，第一次决定在乡村过年。白天开心农场，晚上拍星星，过上了谈笑无鸿儒往来有白丁的生活…\", \"稻草人的早晨\", \"列车继续加速度，水珠在最后的时光里尽情飞驰\", \"一个等车的人都没有。上一次看到这副光景，是2009年10月5日的凌晨3点半，湘潭至武汉\", \"“人呢？”“买菜去了呗，真慢”——所谓冬日的阳光\"],\n\t\t\t\"type\": [\"image\", \"image\", \"video\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BOsC8obAOwI\", \"BOpI4qsAi6c\", \"BOjCbzZAhQy\", \"BOUysuPgbXG\", \"BOTVNfYgjRt\", \"BOMjl4LATC-\", \"BOAF_bbA9H0\", \"BN9ZdHuAqL1\", \"BN30BiDAVGo\", \"BN2CjzagYQK\", \"BNyLQGUgdma\", \"BNwOJYlgAOL\", \"BNtsL5QgEts\", \"BNn5V7oA_nc\"],\n\t\t\t\"text\": [\"每年这个时候都要趴在这座天桥，拍一张照。这个世界似乎没变，但又在喧哗和前行。这年成长了挺多，也学会看淡一些事情。\\n可能是代码写多了，感觉世界的逻辑有时很简单，事情无非是let，变化历历，或者是const，永恒安息。如果一开始就想清楚，留不住的就随风去，不会变的就钉到骨子里。那你说多轻松。\", \"去看雪？\", \"“大楼诗人”\", \"又是一年岁末时\", \"say hi\", \"现在的每个日落，都会有光正巧从窗帘缝隙钻过，平行照射到我的电脑屏幕。这个时刻就感觉特别神圣和中二。披上了迷之神眷色彩，讲不好我的工位就是个宇宙中心，太阳在绕着代码转\", \"末班车\", \"树影，好似一只黄鹂和蜣螂\", \"街拍 | 晴天\", \"“望”\", \"午睡\", \"“黄昏之时”\", \"枯萎的植物，最后的光\", \"街拍 | 也许是深圳最后的夏日\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BNUaqEagioX\", \"BNTHIbUgigX\", \"BNRr9zBg0fu\", \"BNQHWSwA1Gy\", \"BNPbdVIg6gT\", \"BNOpXsKgU53\", \"BNBrozHAAV7\", \"BM8hsf-grvj\", \"BM8WO8xglvC\", \"BMy1VT3grFk\", \"BMrSxSNgpIN\", \"BMedxcZA0_g\", \"BMQLQvogqn7\"],\n\t\t\t\"text\": [\"“我是谁我爱谁我要谁我去哪”\", \"天都峰顶转一圈，站的地方巴掌大其实很慌…\", \"下了一夜雨，晚上没睡好，脑子里老想着天都峰关闭的事情。但风云变幻就在一瞬间，冥冥中必有回响，突如其来的晴天太过惊喜。峰顶走起\", \"上年没见着的雾凇突然出现，愿望兑现的感觉\", \"“不看岳”\", \"黄山行\", \"宿舍楼\", \"华科的秋天好像一条安静河流，慢慢扩散，了无声息，异常缓慢，又很具体。反正，时间还有很多，请随意\", \"又回我科，我科这个季节怎么拍都好看\", \"今夜月亮\", \"想过去改变，想过要离开，想过拍拍裤管就去远方。然后又想是不是先做出点事情，后来又突然有了点责任，再后来发现自己可以影响一些人… 它没有扼杀选择，反而让更多条路铺在我面前。所以，生日快乐，18岁。\", \"街拍 | 面对面\", \"一叶知秋\"],\n\t\t\t\"type\": [\"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BL_WXdxAM1Y\", \"BL6dTmIgecl\", \"BLv6COag1M6\", \"BLlf8WWgHcJ\", \"BLfzJ7gjj-8\", \"BLbaFJDAJ1i\", \"BLVHTFJgfg-\", \"BLTvxMWgKUn\", \"BLTd_nVAFQi\", \"BLP2UMKAGcn\", \"BLJIJCegCT3\", \"BLDZyq2g7Zr\", \"BLDSZ6pAsAZ\"],\n\t\t\t\"text\": [\"这年头不做作的民谣已经很少了……\", \"很久没去看那群留守的孩子了。他们还是很容易对每个人卸下心防，情绪会很强烈，所以开心时笑得特别大声，这让我想到悲伤会不会也成正比。不敢想。这世上，不一定所有问题都要去思考去直面，因为时间能帮你们解决很多问题。起码，在一起玩的时间。\", \"深圳雨，台风。小时候问大人，为什么我的风筝飞不起来？他们说要等大风。所以我期待着台风天。等了半年，台风来了，我却只能呆在窗户里往外看，也开始理解这场空欢喜。后来发现台风不单是种天气，还可以是一件事或一个人\", \"鸽子再也看不到无名山的高，你也不再是安和桥下清澈的水\", \"降低了预期，觉得滕王阁还不错。路遇一位玩摄影的大爷，教了许多东西，也听他说了许多往事。其实人得不得意都要尽欢，白不白头都要有那么一点青云之志\", \"东四变成了超市\\n东三变成了清真\\n神剪阁还在\\n绝望坡的小吃多到绝望\\n球场都翻修了\\n计科有钱了(辅导员说的)\\nofo小黄车已占领校园\\n学弟学妹主要玩lol和王者荣耀\\n光谷门对面依旧有鸡蛋灌饼和麻辣烫\\n韵苑食堂还是不怎么好吃\\n沁苑的猫又生了许多娃…\\n\\n来去匆匆，一些照片在：http://120.24.181.238/gallery/\", \"要是一个地方能称作图书馆，不单单是因为图书，还因为它收藏了太多的心事。\\n一语一念，虽不可借阅，愿永不过期。\", \"《深夜食堂》\", \"《返校日》\", \"旧时作\", \"和奶奶在一起。把轮椅推到广场下面玩，突然问我：你们厂生产什么？我：很难说，网络你知道吗… 奶奶：哦，卖绳子的啊\", \"19年前的我，就已经学会了爱恨分明……\", \"回老家，今天正好是“圩日”。村民一家老小，从竹林深处的罗江村出发，走过这条小桥，赶往市集。买到中意的衣服，或者零食，这就是完美的一天\"],\n\t\t\t\"type\": [\"video\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2016-09\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2016,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\t\t\t\"link\": [\"BK-l0eHgWep\", \"BK3W05HgBqP\", \"BK0nQcSARek\", \"BKx6pvkg5HE\", \"BKfNILQgNAO\", \"BKdn7vEAJJW\", \"BKcdEbPAWzk\", \"BKcCulagAx1\", \"BKazUfGAFlb\", \"BKayutggosw\", \"BKTJUOdgkLm\", \"BKIiijpAvmT\"],\n\t\t\t\"text\": [\"街拍 | 回望\", \"街拍 | 深拷贝…\", \"街拍 | 拷贝\", \"街拍 | 擦肩而过\", \"苗族妹子上来敬酒。以为只是普通米酒，一饮而尽，后来才跟我说有70度。那还怎样办？不走了。\", \"满城星星点点的灯火，当作你心心念念的生日蜡烛吧。生日快乐，永远单纯。\", \"以大为美的苗族银饰，近看却有许多复杂的细节\", \"迷了路找不见甲秀楼位置。干脆坐下来吃一碗哨脆面，听到对面歌舞升平，寻路过去果然找到了。道理就是，有地标的地方就有广场，有广场的地方就有广场舞。感谢大妈，感谢广场舞。\", \"眼中仿佛藏了一个宇宙\", \"曾经想仗剑走天涯\", \"…\", \"hello，好久不见\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/12317949_812027942276002_800384968_n.jpg\"],\n\t\t\t\"link\": [\"-wSMLcI7sl\"],\n\t\t\t\"text\": [\"秦教练教学得很好，三小时已可征服中级场。滑雪真是项迷人的活动，还没回去就约好了下次再来\"],\n\t\t\t\"type\": [\"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s640x640/sh0.08/e35/12269862_894338194013437_1805169379_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s640x640/sh0.08/e35/12276891_172191463131445_911534090_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/12237527_913338585386151_2037194016_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11934646_1088170014540783_209449183_n.jpg\"],\n\t\t\t\"link\": [\"-tqoLXo7v-\", \"-qKfKxo7nw\", \"-nE5BQo7uP\", \"9qjBpWI7lk\"],\n\t\t\t\"text\": [\"雪上鸦飞\", \"行走于结了冰的松花江上，遇到一群放生的人。佛经飘扬，鱼虾入河，河面转瞬又恢复了平静。而后在饭店，服务员说我们的鱼，就来自这松花江里。\\n\\n佛的安排奇妙又令人啼笑，鱼让俩群不同的人都收获了快乐？那么我想，鱼就是佛\", \"月上枝头\", \"在天黑后的日光岩顶呆了很久，一个人看一座岛，孤单也自由。后来遇到一位姑娘，我们一同下山。带着她逛遍整条龙头路找吃的，但她什么也不愿吃，问她，她说，想吃酸辣土豆丝。\\n\\n只有笑着承认，真是意料之外的答案。我出来玩，就是为了吃平时吃不到的东西，她则是觉得家乡的菜最熟悉，在哪都是愿意吃的。\\n\\n好吧，陪你吃。因为，离开武汉这么久，我也挺想念这道菜。\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12145229_1722399741326075_2063247708_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12080493_892409564169375_1626542651_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/11849199_203248513340142_1615092499_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/12132912_162625974083441_1400003063_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12135478_1700175696879683_933151519_n.jpg\"],\n\t\t\t\"link\": [\"9VYE8YI7sk\", \"9BkX3xo7od\", \"8-Ba4MI7lt\", \"88Neujo7r2\", \"8uKqhDo7vp\"],\n\t\t\t\"text\": [\"在路上\", \"11点的时候，不想睡，借一只手电，一人夜游古村。这事情很刺激，转角遇到的神像，榕树的垂枝，摇曳的灯笼，自己投射到土楼的巨大影子，莫名的恐惧自心底升起。然而后来又不怕了，却总是想起以前去的思溪源村…with my friends\", \"古城的砖瓦年代久了，就很容易长出猫来\", \"以前吉他老师说，对于一首天空之城，听过与弹过是完全不一样的。弹过后才知道，从开始的吉他2品就一直在递增，仿佛自身也在飞翔，云层渐开，空城显现，情绪是那么容易被调动。然而我的水平只够感动自己，要抓紧时间努力学习了。不说了，玩游戏去了\", \"海上日出\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"video\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-9\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s640x640/sh0.08/e35/11875445_885316994870904_706284789_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s640x640/sh0.08/e35/11352715_138879086461968_2066668148_n.jpg\"],\n\t\t\t\"link\": [\"8NKC9RI7oZ\", \"8DOh_to7p0\"],\n\t\t\t\"text\": [\"沙滩总有数不完的沙子，数不完的故事。在这突然想起那本还没看完的《岛上书店》，是时候继续做些什么了\", \"陌上花开\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-6\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11429225_720390118073037_768409912_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11420780_1012574008772885_1569805305_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11252784_879698105429690_2109453469_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11267410_925161560884785_371811288_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11375982_491190547696110_2013240096_n.jpg\"],\n\t\t\t\"link\": [\"4T1Lfgo7gX\", \"3-mmN3o7mn\", \"3uts9do7jI\", \"3iK7kwI7j1\", \"3glBKbI7jm\"],\n\t\t\t\"text\": [\"大雨之后\", \"一脸无辜的王尼玛大哥，从肚腩来看，果然是正品？\", \"感觉迷上风筝了。有次做梦，想到一根根拉伸向上的线，像是在钓空中的鱼。而一个技术娴熟的“渔夫”，收杆时是这么干净利落。\", \"起飞\", \"小萝莉不愿回家，跟奶奶说：“再让我玩会，明天要学钢琴，后天要学跳舞，就来不了这儿玩了。”\"],\n\t\t\t\"type\": [\"image\", \"image\", \"video\", \"video\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-5\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/11252751_1444216632541093_1558227860_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11226595_701075516681953_1354085958_n.jpg\"],\n\t\t\t\"link\": [\"24-dd6o7uB\", \"2uQeuaI7nv\"],\n\t\t\t\"text\": [\"风雨欲来\", \"野生海带\"],\n\t\t\t\"type\": [\"image\", \"video\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-4\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11142212_609961145801361_1913577076_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11049421_1375007652828983_401355534_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11137852_1649834698581861_1050691792_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11055751_1573536912901494_1683773508_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11055897_1407191599597961_1763496348_n.jpg\"],\n\t\t\t\"link\": [\"1IUZByo7vP\", \"1ISKRxo7r8\", \"1GPBzpo7qW\", \"1FtGO3I7kN\", \"1C03iPI7hZ\"],\n\t\t\t\"text\": [\"要回去啦，再见北流河\", \"灵芝get√\", \"这里的清明是个很重要的节日，子孙们都会回来，跋山涉水，竹排渡江，荒山寻路，凭集体的记忆寻找列祖列宗的宝地，寄哀思，也求福德。一路上可以听他们唠叨旧事，也有超级靠谱的风水科普\", \"为了部落\", \"在清明的山路遇到了天然松香\"],\n\t\t\t\"type\": [\"video\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-3\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11123665_1542600796003839_1576473443_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008101_1593505510894691_369067449_n.jpg\"],\n\t\t\t\"link\": [\"04_8fwo7gL\", \"zzfe7Oo7uc\"],\n\t\t\t\"text\": [\"如果你飞得像月亮这么高，就不会搁浅在树上\", \"喜欢这个季节的天空，你找个草坪一躺，飞机，风筝，鸟儿就都在上边，天气好时还能看到白天的月亮\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-2\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10958252_1405701033068537_2023890854_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10832246_413065338853260_183697882_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10268927_436139166536328_1377561628_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008343_410508022446936_713236389_n.jpg\"],\n\t\t\t\"link\": [\"zcWez6I7uo\", \"zRPazvI7ol\", \"zPN2LtI7sT\", \"zKrDWlo7gZ\"],\n\t\t\t\"text\": [\"很多东西随着慢慢长大，变得不像小时候那样盼望热切，比如巧克力麦当劳薯片雪糕。只有对担子粉的爱永远不变的说…\", \"据说是一年一度考验演技的时候…\", \"锈迹斑斑的香炉\", \"回老家了，小时候跟我打过玻璃珠的小伙伴们呢？你们一个在北京，一个在安徽，一个在澳洲，一个我都不知道了…但你们看到玻璃珠的时候，要想起我来啊\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2015-1\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2015,\n\t\t\t\"month\": 1,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10932550_620643038062978_1729442807_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/891532_1563899373855738_1180535181_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10005439_338105566394046_854247264_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10903312_693622147425934_1766884651_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10914460_1546003772305181_1301162053_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10903277_832760670116494_255352239_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/924083_1539057536347062_2062767438_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10890944_765121966897759_2039585477_n.jpg\"],\n\t\t\t\"link\": [\"yb8uaCI7tt\", \"yKBopho7mX\", \"yAOcawI7pA\", \"x5U25kI7sN\", \"x1TTZUo7gW\", \"xeGbWuo7if\", \"xXr70fI7iD\", \"xUB4dOI7g1\"],\n\t\t\t\"text\": [\"草地上遗落的鞋子\", \"有位很久没联系的朋友寄来明信片，说：我很少看到海，正如你没见过几次雪\", \"深夜总是灵感乍现的最佳时期，只是几个设计方案都没法使自己满意。累了打开窗看到天上有个大月亮，只想用图章工具把它干掉。\", \"面朝大海冬暖花开\", \"分享日常不正常生活照一张\", \"其实我想，那些古老的渔民们，每天看着海岸线的日落日出，肯定是有人想过地球是圆的。而“想法”与“证明”之间，却跨越了一整条麦哲伦航道\", \"鱼山鱼海中，只有你，肯安静的趴在65厘米厚的亚克力板子上与我合影，大丑鱼\", \"新年单人旅行走起。其实从九洲港码头开始，珠海并没有给人很惊喜的感觉，包括盛名之下的沿海风光与渔女雕塑。倒是交通不通畅，从轮渡到公交都给我带来了许多麻烦。直到，晚上吃烤生蚝的第一口，我又觉得什么事情都是可以原谅的……\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-12\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 12,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10899183_999582293404177_745539859_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10894909_702627706517406_1277557620_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10831989_483313928477468_40906631_n.jpg\"],\n\t\t\t\"link\": [\"xRWN47I7pW\", \"xO3qREI7iW\", \"wEQykeo7tU\"],\n\t\t\t\"text\": [\"2014年最后的阳光\", \"最后一节吉他课结束后，马路上那风一直吹，才感觉南方的冬天终于是来了。其实吉他在冬天会有许多神奇的事情。比如琴弦如肌肉一样因冷而紧绷，发出比以往沉闷的低语；而空旷的大教室里，如有其他同伴拨响和弦，手中本已按灭的琴弦又会因共鸣微微颤动。像有生命一样。\", \"有棵丑树，我经常去看，又胖又歪，秃得可笑。在变冷的一天，它突然就开花了。冬天的花我知道得很少，南方没有梅花，那就是异木棉了\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-11\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 11,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10784965_1518537748403855_176956695_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10735195_1505939246340704_1984926778_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10747711_429336373885590_422028037_n.jpg\"],\n\t\t\t\"link\": [\"vP2ywuo7pq\", \"vA68BLo7tN\", \"u7zEVxo7vw\"],\n\t\t\t\"text\": [\"通灵之术！\", \"现场气氛果然不一样，马上就可以看到小伞在大哥胯下疯狂输出…是时候来首选一记薇恩了\", \"有朋友跟我说，挪威的森林根本看不下去；又有朋友说，看这书一发不可收拾。差别好大呀！我倒觉得有个简单的方法：翻到开篇的这几个字，如果心中一紧，那就说明这本书适合你，否则请弃之\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-10\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 10,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10735112_730529873702428_413107753_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10725177_573652486072155_1401604216_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10724868_302191016652312_2097904817_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10731727_461314204008708_386749273_n.jpg\"],\n\t\t\t\"link\": [\"uu70zJo7qb\", \"uQnvluo7sK\", \"uLi56Wo7oO\", \"uEv-tCo7rJ\"],\n\t\t\t\"text\": [\"天下的小饼干遇到我，貌似就只有一种下场！！\", \"一个人，一支口琴，一片海，一瓶酒\", \"《论夜归，打的，以及发票的正确用法》\", \"童年真好。我以后一定不要跟孩子说：希望你快高长大这种傻话…\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-9\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 9,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10616983_1382591478697855_2107473552_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925287_1464119273867077_427071626_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925284_1534308033454310_855505111_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10666267_1550871771803214_2074300649_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693244_734401199942901_1572709880_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693771_1517437541834868_665867908_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693822_497709657032441_1125408654_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10683941_796597910390683_12441123_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10661142_164227523747936_1526737465_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10661182_550889531706942_2043749716_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10520334_1523531751215211_1344090061_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693390_547748238660649_761529890_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693650_837768039589771_1793184733_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/914812_1529561143923493_1662159287_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10644019_368509079979549_2085033896_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10684161_918887498139099_2081383304_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10683828_327931784041264_894089329_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10666028_872988212713750_1345360858_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10665501_1452353738387652_2075798065_n.jpg\"],\n\t\t\t\"link\": [\"tXuIHso7qK\", \"tJjQlAo7kH\", \"tDYyUeo7oX\", \"tCBULHo7sW\", \"tB_Xmao7qG\", \"s8cKzLI7pM\", \"s6-lOFo7ip\", \"s5GifkI7q7\", \"s3uZcmo7uj\", \"s2bb5io7p-\", \"s2P72tI7o6\", \"s2FPpGI7o_\", \"s1LPQPo7v8\", \"szZP5Io7lY\", \"sr9rtNo7lM\", \"sr7gXKI7h_\", \"srG7fjo7sV\", \"spAnrio7oh\", \"sj4BGgI7t_\"],\n\t\t\t\"text\": [\"我的好朋友——超级高冷超级磨人的丝瓜\", \"沉眠的店主失眠的狗。想起大学的最后时光，宿舍24小时都有人醒着，自由的人生，自由的酒和曲终人散，大家通常没有另一半，没有钱，没有忧愁，爽成狗\", \"如果他是程序员…\\nvar date = lifetime;\\rif(rotate(mountain, water, stupa)){ /*return nextLifetime;*/ return meetyou(journey);\\r}\", \"听着山寨的民谣电子乐，看着美好的姑娘。功德无量。\", \"弥里塘太宁静。在这我一直想起每一个被深圳车水马龙声吵醒的早晨，真是光辉的岁月\", \"进藏。天空挂满着云，黑的白的都有。云朵转眼飘散，它却依然是蓝色。\", \"“音浪太强不晃会被撞到地上…”\", \"陌生的朋友，愿下次再能与你们相聚在丽江love wine & half。我无法融解你悲观现实的想法，你也无法说服我旅行并不是逃避。但这都很有意思。只是想起以前有个人叫我不能喝太多的酒，一想到这个呀我就越喝越多\", \"玉龙雪山\", \"以前想去丽江，但去过的人都灌输着你也许会失望的观念，因而甚至不敢动身。这是一种“怕”。有时候真得自己去看看才会了然。第一天在丽江，民谣吉他缓缓流过商业化的街道，原来没有惊喜，也没有失望，一切刚刚好。\", \"我注定要回到老路上\", \"彩云之南\", \"云南，向往已久的地方\", \"QQ同时在线人数破2亿纪念，作为一颗小小螺丝钉，名字正好镶到企鹅的大嘴巴上。这时觉得有一丝光荣，一种努力被实化的错觉；然后又有点不舒服，感觉此时的自己，和名字身边的人一样。可我想要的就是不一样。\", \"陪伴一定得是件漫长的事呵。和奶奶在一起的中秋节。\", \"中秋和家人一起去看孔明灯，热闹而安逸，这是小城市的美好。\", \"老家的葡萄藤，从我初中时就挂在这，再见已是十一年\", \"家里橄榄熟了，盐渍，暴晒，蘸蜜，简直人间美味!\", \"在一场太阳雨里回到家中\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"video\", \"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"video\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-8\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 8,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10654876_610857929023752_364709543_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10644013_777642448965989_544517718_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/924456_1471485796442896_1699836323_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10607913_692632367472666_1829853902_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10611052_1466241683635233_830264506_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10617144_829548960388746_1611410337_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10453953_542161702576881_1621059386_n.jpg\"],\n\t\t\t\"link\": [\"sXa9g6I7jB\", \"sPt4u4I7kA\", \"sC18G0o7qb\", \"sAMmEWI7oC\", \"rzSow4o7lH\", \"ro28LPI7oc\", \"rR37wLo7iu\"],\n\t\t\t\"text\": [\"在书店的晚上终于把新专反复听完。太柔了…打一星两星的人肯定是真爱粉，这点有人敢怀疑？我不是，打四星！停不下来，直到书店响起:深圳即将入眠。但22点还是深圳的早晨呀\", \"慢三的华尔兹，大篇幅的爵士即兴。感觉生活得太浮躁。也太安逸。\", \"好久没看话剧，这部果然没让人失望。导演太会讲故事了，1024个赞\", \"纵有一万种悲伤的美丽，也比不过这段。\", \"在书城里看到的《后会无期》分镜图。电影那么美，分镜是这样，这就是现实~\", \"如果你从北京来看我，我会很感动;如果你像光，从太阳那头过来，我不以为然。因为光到地球只要8.3分钟。我们经常错用代价来衡量情感\", \"相聚总有时:)\"],\n\t\t\t\"type\": [\"image\", \"video\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-7\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 7,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925559_1482425071996009_1940959046_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10554006_501929086608023_917623457_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10576105_624878090953161_638111947_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10570119_332808380211109_125412512_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/926536_828142997203682_1319760676_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/923702_252705761596555_721784545_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10549755_708603639175850_2095584541_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/928307_1442957109299429_297849354_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10488451_303926969784787_1278259348_n.jpg\"],\n\t\t\t\"link\": [\"q5e2KpI7qn\", \"qyXXpNI7q5\", \"qxfUe0I7lp\", \"qq9usdo7hr\", \"qn4WCIo7hi\", \"ql0brho7vN\", \"qkiaYDo7t9\", \"qURC9fI7r-\", \"p4A8IuI7py\"],\n\t\t\t\"text\": [\"随便走走，发现世界还是很美好的。当拥有美好事物时，经常习惯性的熟视无睹;当努力抓住你想要的东西时，它又可能瞬间破碎。但依旧需要不妥协。\", \"荔枝——我心目中的水果之王（有之一）\", \"高中时代最新款的mp4，现已成了老古董\", \"台风来临时，刚好会是暑假。但我已没有暑假。\", \"看着一场雨由远及近的淋湿院子，太漂亮\", \"归来却空空的行囊  那故乡的云  那故乡的风  啦啦啦啦啦 啦啦啦。\", \"在今年第一个狂风大作的早上，回家去\", \"98年，世界杯第一次在我脑中留下记忆，和爸，围着那台很小的tcl。今天，爸还打电话给我，让我别看太晚影响到明天工作，但我知道他自己也会去看的。是的，我们爱足球，今生今世\", \"这几天深圳的天空很美，无论晴雨\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-6\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 6,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10362316_1434933843444633_1187384207_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10471930_507725875994902_393186392_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10454011_484872768311603_738380027_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/923661_248502122024084_2086692261_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10424605_774238262594769_78480252_n.jpg\"],\n\t\t\t\"link\": [\"p06uEZI7tG\", \"pytFNpo7sD\", \"poMFteI7q0\", \"pMt5tgI7vj\", \"o3eroFo7gK\"],\n\t\t\t\"text\": [\"“往事依稀浑似梦，都随风雨到心头”——梅表姐\", \"navy blue\", \"今天我遇到一朵枯玫瑰。她只是枯萎，从未凋零。\", \"上届卫冕冠军被打成筛子的…是热火…\", \"我和大神的差距——web工程师的自我修养\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-5\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 5,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/e15/10387796_255697041300477_753213015_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10005623_779769878723970_627922376_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10358172_1495900567292387_640174442_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10369281_674379822637848_233362820_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/928251_430572373746575_786910314_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10358301_256481271142988_1088114034_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10296597_1413560715589179_392570057_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10299642_561366610636165_721929935_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10268965_1446530205590326_114108738_n.jpg\"],\n\t\t\t\"link\": [\"op03boo7lW\", \"ops-ZUI7t-\", \"ofqhBpI7mQ\", \"odP0cno7ue\", \"oLX-4GI7ne\", \"oBl6WtI7qC\", \"nvPChzI7vU\", \"ngAyz8o7qj\", \"ndTggdI7jn\"],\n\t\t\t\"text\": [\"突然发现我还是挺喜欢大晴天的\", \"单人旅行走起！开心\", \"不久就可以吃了\", \"黄昏时分\", \"大雨倾城\", \"今天路过公园，一朵玉兰掉在身边。想起小时候陪伴我的三棵树，两棵木棉，一棵玉兰。当然玉兰这名字是后来才知道的，记忆里的那朵永远叫做香花。三年级的某天放学，这三棵树一并倒下了。\", \"雨中深大。雨季再来不再来。\", \"say hey to may\", \"故事中的小黄花\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-4\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 4,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10261258_711820055527911_220271949_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10249356_695726313802446_881680057_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268929_597082527053970_1060360934_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268941_490697914386538_1148834228_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10254195_545488182236276_1930978882_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/917572_539124756205696_1549712749_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/927273_657564254280429_578859844_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175316_650834874981595_1358429831_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/926422_245144379006241_1254093305_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/891289_302574849898688_205313988_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175309_510867459023322_1700312549_n.jpg\"],\n\t\t\t\"link\": [\"nOGNjUI7op\", \"nGJfYAo7lW\", \"nATIxlI7tR\", \"mxsNwto7pQ\", \"mm7JTUI7p0\", \"mhER0lo7oe\", \"mfvVUYI7hu\", \"mdF-nNo7pE\", \"mcVLQzo7nl\", \"mb5cFho7sd\", \"maqYInI7if\"],\n\t\t\t\"text\": [\"谢谢亲们的蛋糕和礼物;谢谢我们始终用“同学”来称呼彼此。\", \"处女座老榕树\", \"放风筝的人们\", \"现在我的状态，像极了一只被推上战场僵尸\", \"这几天我耳边是都是这样的话语:1、“就是敲敲键盘，挺清闲的哈！”2、“别太挑剔，给个一两千就先做着”3、“什么？你那一碗粉要十二块钱？！”我回深圳了，几天的清静生活，谢谢乡亲们的招待。\", \"good luck\", \"瓦上花开\", \"好吧，这是一艘船\", \"石表山，思罗河，四年后的清明我又来到了这儿\", \"清明，一路向西\", \"清明一回到家，老妈就开始炫耀她试验种的豆芽。愿君多采撷，此物最好吃？\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-3\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 3,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10012487_604746702952671_676907736_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/1171265_389602547845527_1588547561_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11376491_1614984048759908_413209146_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11251074_365441270314698_1015057085_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11380079_1581430378786145_504181803_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11330604_837683999618217_506172540_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11273047_110162449318540_1639646034_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11375356_908792249164254_112740693_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11357539_388432694679963_1281450994_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11311124_1611430865770700_1482115931_n.jpg\"],\n\t\t\t\"link\": [\"mIgOdio7jT\", \"mIAS5lo7hb\", \"lrhVmio7lF\", \"lmADv6I7rU\", \"lhPFVeI7g6\", \"lcyrKSI7h_\", \"lSda6Ko7nG\", \"lSSxd8I7kB\", \"lK0xswI7s6\", \"lA4KaBI7go\"],\n\t\t\t\"text\": [\"转角遇到戏台，耳熟却不知道是哪一出了。想起爷爷以前的二胡与杨琴，自己精削细磨的琴竹，还有他组织的“菊山楼”粤剧队，真是一晃好些年。今年清明，一定回去。\", \"这本书超赞！好书好书好书\", \"四五点写程序太累，就不写了。不告诉任何人，跑到这个立交桥底，我已来过好几回。这里有一棵白色的紫荆花，满墙爬山虎，和刚放学的小朋友，出去，右拐，再右拐，转角可以遇到你，我的肉夹馍…\", \"越来越认生了，到步行街买衣服，找到比较适合的，却因为店员太过热情…跑了出来。闹市中居然藏有一古庙，还是这里自在，漫天神佛只是笑笑，不理物我，无论喜悲。对了我来这干嘛\", \"爬山的好处:强身健体，磨砺意志，开阔胸怀…坏处是:没有wifi。\", \"又见回南天\", \"老妈说，今天要我送个礼物！离家万里，只好迅速开发出这个app，摇后就会播放我唱的真的爱你。可惜她说摇后没反应，后来才知道，她拿的ipad在摇…但我是真的爱你\", \"今天下雨，的士司机都不肯理我。头上路灯光芒遥不可及，脚下路面棱角冰冷鲜明\", \"起风吧，明天。喜欢偏冷的日子，假如是春天，假如是风大，太完美了\", \"腾讯的凌晨四点半。第一次在此过夜，听着耳熟不能详的歌，看着平静不微笑的人。然后记起，家里打来被我按掉的电话，忘了回\"],\n\t\t\t\"type\": [\"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\", \"image\"]\n\t\t}\n\t}, {\n\t\t\"date\": \"2014-2\",\n\t\t\"arr\": {\n\t\t\t\"year\": 2014,\n\t\t\t\"month\": 2,\n\t\t\t\"src\": [\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/1737225_591794970889160_1849235580_n.jpg\", \"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/1741200_451260698337036_577792061_n.jpg\"],\n\t\t\t\"link\": [\"kv3jNgI7sw\", \"kr8sW8I7nR\"],\n\t\t\t\"text\": [\"“不能吃太胖喔，会被杀掉的！”\", \"今晚，已经看到两个小女生在问，这里有《九云梦》吗？\"],\n\t\t\t\"type\": [\"image\", \"image\"]\n\t\t}\n\t}]\n}","date":"2022-05-25T03:01:02.995Z","updated":"2018-08-19T08:45:07.568Z","path":"photos/ins.json","layout":"false","title":"","comments":1,"_id":"cl3lhi1ac00063wj42ukfhg9a","content":"{\"list\":[{\"date\":\"2017-07\",\"arr\":{\"year\":2017,\"month\":7,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BW_0-LNAEQy\",\"BWw_lTjAWvP\",\"BWl0n7ggC8d\",\"BWbyVtmgZA0\",\"BWPEL03A6QN\",\"BWJyvn_A8k1\",\"BWEqgtvgzyu\"],\"text\":[\"那天拍这张照片，是看到一个小女孩，借了妈妈的手机，边拍边赞叹“好美丽的颜色啊”。但照片最大的谎言就是定格，人们觉得美好是永恒的，至少不太会想时间之外的事情。\\n事实上这种植物一旦攀上柱子，就疯子一般往上爬，为了给顶端的小苗供给养分，下面的叶子会慢慢掉光。立交桥好高呀，小苗爬不上去，累了也枯萎了。最后只剩下光秃秃的丑陋藤条。\\n不过我还是希望小女孩过几天再看到它时，只是轻轻说“啊原来是这样”，而不是和我一样觉得它很丑。\",\"倦\",\"最光明的那个早上\",\"光芒万丈\",\"接连的雨，让高架上的三角梅窜得好高。高于路灯高于建筑物高于一切。不过它们的命运就是被剪掉，然后继续做一棵安分守己的好花\",\"天桥上汽车奔驰，天桥下静默花开。这是两个世界。\",\"用流行的话来讲，深圳现在的天气就是“一言不合就下雨”。但是天空从来就没有言语呀，也从来没有凑合谁的心意。不说话，不取悦，就很酷。\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-06\",\"arr\":{\"year\":2017,\"month\":6,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BV6WiUxgHp0\",\"BVrnb0GAIbo\",\"BVq6fMHAV8i\",\"BVUXrYtFwlA\",\"BVHdxQsFpYS\",\"BVE4dC6l-tK\",\"BVCbPn6lOqn\"],\"text\":[\"午睡\",\"分享一个甜甜圈\",\"分享一个失败的对焦\",\"雨后\",\"腾讯云\",\"黄昏的公园深处\",\"从今天开始，决定数一下一年有多少个多云的日子。\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-05\",\"arr\":{\"year\":2017,\"month\":5,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BUqBlIWFF_f\",\"BUlWsL0F5kE\",\"BUgrXBVlaJR\",\"BUdT28JFYpP\",\"BUYZzrJFfdJ\",\"BUO7nZZlWf0\",\"BUEZNOKFUK0\",\"BUB8VemFJEE\",\"BUA8KqRlF3n\",\"BT_4mkYFxc5\",\"BT_eImQF9sY\",\"BT-fITqlTiO\",\"BT27_ryFIr_\",\"BT0azZAFBIs\"],\"text\":[\"森林之晨\",\"Hello, _____\",\"水中豆\",\"雨中的公交车窗外\",\"飞机飞过天空\",\"西塘总的来说，还是挺好。就满大街唱着《成都》和《一瞬间》，感觉不是很懂…\",\"可能南浔真的是去过小镇的一个特例。没有太多的迷之传说去渲染，它就在这，一言不发的等你。兜兜转转又回到了百间楼，挨家问有人吗，随便帮再做个炒绣花锦吧，吃完这个菜我就走。\",\"看了一下午的燕子\",\"燕子飞过百间楼\",\"夜色里迷了路\",\"雨中漫步\",\"可能是一种“一出行铁定下雨”的体质\",\"生如夏花。整个四月都过得比较丧，想了下唯一开心的事情就是朴树的专辑了。\",\"五月\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"image\"]}},{\"date\":\"2017-04\",\"arr\":{\"year\":2017,\"month\":4,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BTvD8fCFOpY\",\"BTbS_uKF5Xx\",\"BTYKbXMFoUM\",\"BSc5TamlT16\",\"BSbA96PFiWC\",\"BSTZP6-gSaD\"],\"text\":[\"多久没去看一场日出\",\"阳光已经铺满下班的街道\",\"午睡\",\"与你跋山涉水\",\"清明晚宴，以及一个迟下楼的我\",\"一个突如其来的雨天\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-03\",\"arr\":{\"year\":2017,\"month\":3,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BSLeDr7gDu9\",\"BSIUnyfAdQY\",\"BSAjHqkgtr9\",\"BR-0YW4gfC9\",\"BRk5uUzlAe2\",\"BRXafqQgsSY\",\"BRS_5qFA9dW\",\"BRIjntvFr5d\"],\"text\":[\"蜘蛛与落日\",\"春林初盛\",\"日光倾城\",\"夜空中最亮的路灯\",\"二月底就开始构思要拍一组日系，每天端着相机来上班，然而是连续半个月的阴雨。今天终于天放晴了，相机却没了电。\",\"车窗里雾气，车窗外水滴。想起小时候作文，写为什么喜欢雨天，因为晴天你会纠结要不要出去玩，雨天就不用想，踏实呆家里好了。但那是小时候，现在也踏实了，就是下不下雨都要去上班啊…\",\"街拍 | 七点半\",\"“又是一轮月高悬 云端那边的天 两颗星座遥望夜空 永远不能相逢”\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-02\",\"arr\":{\"year\":2017,\"month\":2,\"src\":[\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BRBWMaAl2h2\",\"BQfmYX5gfiy\",\"BQU0S39AetF\",\"BQFkKYIASOp\",\"BQAdVx5AOLy\"],\"text\":[\"深圳的高架有很多三角梅，这种花的优点和缺点都是太倔强\",\"最近重新把球拍拿了起来。还是会很怀念，高中那时的球馆，阳光也是这样斜斜照进来。球滚到再远的角落，还是能捡起来；人走出了球馆，可能再也回不来。不过，只要你等，也总有陌生人推开门说：加我一个。\",\"深圳\",\"离家前心血来潮，突然想再刷一遍《白鹿原》，就把书给捎上了。列车经过山洞，窗外是明灭的光影，第一次觉得黑娃横腰打白嘉轩的那一棍子这么魔幻…好像会有迷之bgm响起，佐助说我要毁了木叶\",\"近乡情怯。情怯，多好的词语\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-01\",\"arr\":{\"year\":2017,\"month\":1,\"src\":[\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BPwIWSXgQ_L\",\"BPoXK-sgC6M\",\"BPMTnMTAH_Y\",\"BPKrtVMgo9j\",\"BPAVAW5gFc7\"],\"text\":[\"城市住久了，第一次决定在乡村过年。白天开心农场，晚上拍星星，过上了谈笑无鸿儒往来有白丁的生活…\",\"稻草人的早晨\",\"列车继续加速度，水珠在最后的时光里尽情飞驰\",\"一个等车的人都没有。上一次看到这副光景，是2009年10月5日的凌晨3点半，湘潭至武汉\",\"“人呢？”“买菜去了呗，真慢”——所谓冬日的阳光\"],\"type\":[\"image\",\"image\",\"video\",\"image\",\"image\"]}},{\"date\":\"2016-12\",\"arr\":{\"year\":2016,\"month\":12,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BOsC8obAOwI\",\"BOpI4qsAi6c\",\"BOjCbzZAhQy\",\"BOUysuPgbXG\",\"BOTVNfYgjRt\",\"BOMjl4LATC-\",\"BOAF_bbA9H0\",\"BN9ZdHuAqL1\",\"BN30BiDAVGo\",\"BN2CjzagYQK\",\"BNyLQGUgdma\",\"BNwOJYlgAOL\",\"BNtsL5QgEts\",\"BNn5V7oA_nc\"],\"text\":[\"每年这个时候都要趴在这座天桥，拍一张照。这个世界似乎没变，但又在喧哗和前行。这年成长了挺多，也学会看淡一些事情。\\n可能是代码写多了，感觉世界的逻辑有时很简单，事情无非是let，变化历历，或者是const，永恒安息。如果一开始就想清楚，留不住的就随风去，不会变的就钉到骨子里。那你说多轻松。\",\"去看雪？\",\"“大楼诗人”\",\"又是一年岁末时\",\"say hi\",\"现在的每个日落，都会有光正巧从窗帘缝隙钻过，平行照射到我的电脑屏幕。这个时刻就感觉特别神圣和中二。披上了迷之神眷色彩，讲不好我的工位就是个宇宙中心，太阳在绕着代码转\",\"末班车\",\"树影，好似一只黄鹂和蜣螂\",\"街拍 | 晴天\",\"“望”\",\"午睡\",\"“黄昏之时”\",\"枯萎的植物，最后的光\",\"街拍 | 也许是深圳最后的夏日\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-11\",\"arr\":{\"year\":2016,\"month\":11,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BNUaqEagioX\",\"BNTHIbUgigX\",\"BNRr9zBg0fu\",\"BNQHWSwA1Gy\",\"BNPbdVIg6gT\",\"BNOpXsKgU53\",\"BNBrozHAAV7\",\"BM8hsf-grvj\",\"BM8WO8xglvC\",\"BMy1VT3grFk\",\"BMrSxSNgpIN\",\"BMedxcZA0_g\",\"BMQLQvogqn7\"],\"text\":[\"“我是谁我爱谁我要谁我去哪”\",\"天都峰顶转一圈，站的地方巴掌大其实很慌…\",\"下了一夜雨，晚上没睡好，脑子里老想着天都峰关闭的事情。但风云变幻就在一瞬间，冥冥中必有回响，突如其来的晴天太过惊喜。峰顶走起\",\"上年没见着的雾凇突然出现，愿望兑现的感觉\",\"“不看岳”\",\"黄山行\",\"宿舍楼\",\"华科的秋天好像一条安静河流，慢慢扩散，了无声息，异常缓慢，又很具体。反正，时间还有很多，请随意\",\"又回我科，我科这个季节怎么拍都好看\",\"今夜月亮\",\"想过去改变，想过要离开，想过拍拍裤管就去远方。然后又想是不是先做出点事情，后来又突然有了点责任，再后来发现自己可以影响一些人… 它没有扼杀选择，反而让更多条路铺在我面前。所以，生日快乐，18岁。\",\"街拍 | 面对面\",\"一叶知秋\"],\"type\":[\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-10\",\"arr\":{\"year\":2016,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BL_WXdxAM1Y\",\"BL6dTmIgecl\",\"BLv6COag1M6\",\"BLlf8WWgHcJ\",\"BLfzJ7gjj-8\",\"BLbaFJDAJ1i\",\"BLVHTFJgfg-\",\"BLTvxMWgKUn\",\"BLTd_nVAFQi\",\"BLP2UMKAGcn\",\"BLJIJCegCT3\",\"BLDZyq2g7Zr\",\"BLDSZ6pAsAZ\"],\"text\":[\"这年头不做作的民谣已经很少了……\",\"很久没去看那群留守的孩子了。他们还是很容易对每个人卸下心防，情绪会很强烈，所以开心时笑得特别大声，这让我想到悲伤会不会也成正比。不敢想。这世上，不一定所有问题都要去思考去直面，因为时间能帮你们解决很多问题。起码，在一起玩的时间。\",\"深圳雨，台风。小时候问大人，为什么我的风筝飞不起来？他们说要等大风。所以我期待着台风天。等了半年，台风来了，我却只能呆在窗户里往外看，也开始理解这场空欢喜。后来发现台风不单是种天气，还可以是一件事或一个人\",\"鸽子再也看不到无名山的高，你也不再是安和桥下清澈的水\",\"降低了预期，觉得滕王阁还不错。路遇一位玩摄影的大爷，教了许多东西，也听他说了许多往事。其实人得不得意都要尽欢，白不白头都要有那么一点青云之志\",\"东四变成了超市\\n东三变成了清真\\n神剪阁还在\\n绝望坡的小吃多到绝望\\n球场都翻修了\\n计科有钱了(辅导员说的)\\nofo小黄车已占领校园\\n学弟学妹主要玩lol和王者荣耀\\n光谷门对面依旧有鸡蛋灌饼和麻辣烫\\n韵苑食堂还是不怎么好吃\\n沁苑的猫又生了许多娃…\\n\\n来去匆匆，一些照片在：http://120.24.181.238/gallery/\",\"要是一个地方能称作图书馆，不单单是因为图书，还因为它收藏了太多的心事。\\n一语一念，虽不可借阅，愿永不过期。\",\"《深夜食堂》\",\"《返校日》\",\"旧时作\",\"和奶奶在一起。把轮椅推到广场下面玩，突然问我：你们厂生产什么？我：很难说，网络你知道吗… 奶奶：哦，卖绳子的啊\",\"19年前的我，就已经学会了爱恨分明……\",\"回老家，今天正好是“圩日”。村民一家老小，从竹林深处的罗江村出发，走过这条小桥，赶往市集。买到中意的衣服，或者零食，这就是完美的一天\"],\"type\":[\"video\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-09\",\"arr\":{\"year\":2016,\"month\":9,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BK-l0eHgWep\",\"BK3W05HgBqP\",\"BK0nQcSARek\",\"BKx6pvkg5HE\",\"BKfNILQgNAO\",\"BKdn7vEAJJW\",\"BKcdEbPAWzk\",\"BKcCulagAx1\",\"BKazUfGAFlb\",\"BKayutggosw\",\"BKTJUOdgkLm\",\"BKIiijpAvmT\"],\"text\":[\"街拍 | 回望\",\"街拍 | 深拷贝…\",\"街拍 | 拷贝\",\"街拍 | 擦肩而过\",\"苗族妹子上来敬酒。以为只是普通米酒，一饮而尽，后来才跟我说有70度。那还怎样办？不走了。\",\"满城星星点点的灯火，当作你心心念念的生日蜡烛吧。生日快乐，永远单纯。\",\"以大为美的苗族银饰，近看却有许多复杂的细节\",\"迷了路找不见甲秀楼位置。干脆坐下来吃一碗哨脆面，听到对面歌舞升平，寻路过去果然找到了。道理就是，有地标的地方就有广场，有广场的地方就有广场舞。感谢大妈，感谢广场舞。\",\"眼中仿佛藏了一个宇宙\",\"曾经想仗剑走天涯\",\"…\",\"hello，好久不见\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-12\",\"arr\":{\"year\":2015,\"month\":12,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/12317949_812027942276002_800384968_n.jpg\"],\"link\":[\"-wSMLcI7sl\"],\"text\":[\"秦教练教学得很好，三小时已可征服中级场。滑雪真是项迷人的活动，还没回去就约好了下次再来\"],\"type\":[\"video\"]}},{\"date\":\"2015-11\",\"arr\":{\"year\":2015,\"month\":11,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s640x640/sh0.08/e35/12269862_894338194013437_1805169379_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s640x640/sh0.08/e35/12276891_172191463131445_911534090_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/12237527_913338585386151_2037194016_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11934646_1088170014540783_209449183_n.jpg\"],\"link\":[\"-tqoLXo7v-\",\"-qKfKxo7nw\",\"-nE5BQo7uP\",\"9qjBpWI7lk\"],\"text\":[\"雪上鸦飞\",\"行走于结了冰的松花江上，遇到一群放生的人。佛经飘扬，鱼虾入河，河面转瞬又恢复了平静。而后在饭店，服务员说我们的鱼，就来自这松花江里。\\n\\n佛的安排奇妙又令人啼笑，鱼让俩群不同的人都收获了快乐？那么我想，鱼就是佛\",\"月上枝头\",\"在天黑后的日光岩顶呆了很久，一个人看一座岛，孤单也自由。后来遇到一位姑娘，我们一同下山。带着她逛遍整条龙头路找吃的，但她什么也不愿吃，问她，她说，想吃酸辣土豆丝。\\n\\n只有笑着承认，真是意料之外的答案。我出来玩，就是为了吃平时吃不到的东西，她则是觉得家乡的菜最熟悉，在哪都是愿意吃的。\\n\\n好吧，陪你吃。因为，离开武汉这么久，我也挺想念这道菜。\"],\"type\":[\"image\",\"image\",\"image\",\"video\"]}},{\"date\":\"2015-10\",\"arr\":{\"year\":2015,\"month\":10,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12145229_1722399741326075_2063247708_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12080493_892409564169375_1626542651_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/11849199_203248513340142_1615092499_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/12132912_162625974083441_1400003063_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12135478_1700175696879683_933151519_n.jpg\"],\"link\":[\"9VYE8YI7sk\",\"9BkX3xo7od\",\"8-Ba4MI7lt\",\"88Neujo7r2\",\"8uKqhDo7vp\"],\"text\":[\"在路上\",\"11点的时候，不想睡，借一只手电，一人夜游古村。这事情很刺激，转角遇到的神像，榕树的垂枝，摇曳的灯笼，自己投射到土楼的巨大影子，莫名的恐惧自心底升起。然而后来又不怕了，却总是想起以前去的思溪源村…with my friends\",\"古城的砖瓦年代久了，就很容易长出猫来\",\"以前吉他老师说，对于一首天空之城，听过与弹过是完全不一样的。弹过后才知道，从开始的吉他2品就一直在递增，仿佛自身也在飞翔，云层渐开，空城显现，情绪是那么容易被调动。然而我的水平只够感动自己，要抓紧时间努力学习了。不说了，玩游戏去了\",\"海上日出\"],\"type\":[\"image\",\"image\",\"image\",\"video\",\"image\"]}},{\"date\":\"2015-9\",\"arr\":{\"year\":2015,\"month\":9,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s640x640/sh0.08/e35/11875445_885316994870904_706284789_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s640x640/sh0.08/e35/11352715_138879086461968_2066668148_n.jpg\"],\"link\":[\"8NKC9RI7oZ\",\"8DOh_to7p0\"],\"text\":[\"沙滩总有数不完的沙子，数不完的故事。在这突然想起那本还没看完的《岛上书店》，是时候继续做些什么了\",\"陌上花开\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2015-6\",\"arr\":{\"year\":2015,\"month\":6,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11429225_720390118073037_768409912_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11420780_1012574008772885_1569805305_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11252784_879698105429690_2109453469_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11267410_925161560884785_371811288_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11375982_491190547696110_2013240096_n.jpg\"],\"link\":[\"4T1Lfgo7gX\",\"3-mmN3o7mn\",\"3uts9do7jI\",\"3iK7kwI7j1\",\"3glBKbI7jm\"],\"text\":[\"大雨之后\",\"一脸无辜的王尼玛大哥，从肚腩来看，果然是正品？\",\"感觉迷上风筝了。有次做梦，想到一根根拉伸向上的线，像是在钓空中的鱼。而一个技术娴熟的“渔夫”，收杆时是这么干净利落。\",\"起飞\",\"小萝莉不愿回家，跟奶奶说：“再让我玩会，明天要学钢琴，后天要学跳舞，就来不了这儿玩了。”\"],\"type\":[\"image\",\"image\",\"video\",\"video\",\"image\"]}},{\"date\":\"2015-5\",\"arr\":{\"year\":2015,\"month\":5,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/11252751_1444216632541093_1558227860_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11226595_701075516681953_1354085958_n.jpg\"],\"link\":[\"24-dd6o7uB\",\"2uQeuaI7nv\"],\"text\":[\"风雨欲来\",\"野生海带\"],\"type\":[\"image\",\"video\"]}},{\"date\":\"2015-4\",\"arr\":{\"year\":2015,\"month\":4,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11142212_609961145801361_1913577076_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11049421_1375007652828983_401355534_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11137852_1649834698581861_1050691792_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11055751_1573536912901494_1683773508_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11055897_1407191599597961_1763496348_n.jpg\"],\"link\":[\"1IUZByo7vP\",\"1ISKRxo7r8\",\"1GPBzpo7qW\",\"1FtGO3I7kN\",\"1C03iPI7hZ\"],\"text\":[\"要回去啦，再见北流河\",\"灵芝get√\",\"这里的清明是个很重要的节日，子孙们都会回来，跋山涉水，竹排渡江，荒山寻路，凭集体的记忆寻找列祖列宗的宝地，寄哀思，也求福德。一路上可以听他们唠叨旧事，也有超级靠谱的风水科普\",\"为了部落\",\"在清明的山路遇到了天然松香\"],\"type\":[\"video\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-3\",\"arr\":{\"year\":2015,\"month\":3,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11123665_1542600796003839_1576473443_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008101_1593505510894691_369067449_n.jpg\"],\"link\":[\"04_8fwo7gL\",\"zzfe7Oo7uc\"],\"text\":[\"如果你飞得像月亮这么高，就不会搁浅在树上\",\"喜欢这个季节的天空，你找个草坪一躺，飞机，风筝，鸟儿就都在上边，天气好时还能看到白天的月亮\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2015-2\",\"arr\":{\"year\":2015,\"month\":2,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10958252_1405701033068537_2023890854_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10832246_413065338853260_183697882_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10268927_436139166536328_1377561628_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008343_410508022446936_713236389_n.jpg\"],\"link\":[\"zcWez6I7uo\",\"zRPazvI7ol\",\"zPN2LtI7sT\",\"zKrDWlo7gZ\"],\"text\":[\"很多东西随着慢慢长大，变得不像小时候那样盼望热切，比如巧克力麦当劳薯片雪糕。只有对担子粉的爱永远不变的说…\",\"据说是一年一度考验演技的时候…\",\"锈迹斑斑的香炉\",\"回老家了，小时候跟我打过玻璃珠的小伙伴们呢？你们一个在北京，一个在安徽，一个在澳洲，一个我都不知道了…但你们看到玻璃珠的时候，要想起我来啊\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-1\",\"arr\":{\"year\":2015,\"month\":1,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10932550_620643038062978_1729442807_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/891532_1563899373855738_1180535181_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10005439_338105566394046_854247264_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10903312_693622147425934_1766884651_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10914460_1546003772305181_1301162053_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10903277_832760670116494_255352239_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/924083_1539057536347062_2062767438_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10890944_765121966897759_2039585477_n.jpg\"],\"link\":[\"yb8uaCI7tt\",\"yKBopho7mX\",\"yAOcawI7pA\",\"x5U25kI7sN\",\"x1TTZUo7gW\",\"xeGbWuo7if\",\"xXr70fI7iD\",\"xUB4dOI7g1\"],\"text\":[\"草地上遗落的鞋子\",\"有位很久没联系的朋友寄来明信片，说：我很少看到海，正如你没见过几次雪\",\"深夜总是灵感乍现的最佳时期，只是几个设计方案都没法使自己满意。累了打开窗看到天上有个大月亮，只想用图章工具把它干掉。\",\"面朝大海冬暖花开\",\"分享日常不正常生活照一张\",\"其实我想，那些古老的渔民们，每天看着海岸线的日落日出，肯定是有人想过地球是圆的。而“想法”与“证明”之间，却跨越了一整条麦哲伦航道\",\"鱼山鱼海中，只有你，肯安静的趴在65厘米厚的亚克力板子上与我合影，大丑鱼\",\"新年单人旅行走起。其实从九洲港码头开始，珠海并没有给人很惊喜的感觉，包括盛名之下的沿海风光与渔女雕塑。倒是交通不通畅，从轮渡到公交都给我带来了许多麻烦。直到，晚上吃烤生蚝的第一口，我又觉得什么事情都是可以原谅的……\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-12\",\"arr\":{\"year\":2014,\"month\":12,\"src\":[\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10899183_999582293404177_745539859_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10894909_702627706517406_1277557620_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10831989_483313928477468_40906631_n.jpg\"],\"link\":[\"xRWN47I7pW\",\"xO3qREI7iW\",\"wEQykeo7tU\"],\"text\":[\"2014年最后的阳光\",\"最后一节吉他课结束后，马路上那风一直吹，才感觉南方的冬天终于是来了。其实吉他在冬天会有许多神奇的事情。比如琴弦如肌肉一样因冷而紧绷，发出比以往沉闷的低语；而空旷的大教室里，如有其他同伴拨响和弦，手中本已按灭的琴弦又会因共鸣微微颤动。像有生命一样。\",\"有棵丑树，我经常去看，又胖又歪，秃得可笑。在变冷的一天，它突然就开花了。冬天的花我知道得很少，南方没有梅花，那就是异木棉了\"],\"type\":[\"image\",\"image\",\"image\"]}},{\"date\":\"2014-11\",\"arr\":{\"year\":2014,\"month\":11,\"src\":[\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10784965_1518537748403855_176956695_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10735195_1505939246340704_1984926778_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10747711_429336373885590_422028037_n.jpg\"],\"link\":[\"vP2ywuo7pq\",\"vA68BLo7tN\",\"u7zEVxo7vw\"],\"text\":[\"通灵之术！\",\"现场气氛果然不一样，马上就可以看到小伞在大哥胯下疯狂输出…是时候来首选一记薇恩了\",\"有朋友跟我说，挪威的森林根本看不下去；又有朋友说，看这书一发不可收拾。差别好大呀！我倒觉得有个简单的方法：翻到开篇的这几个字，如果心中一紧，那就说明这本书适合你，否则请弃之\"],\"type\":[\"image\",\"image\",\"image\"]}},{\"date\":\"2014-10\",\"arr\":{\"year\":2014,\"month\":10,\"src\":[\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10735112_730529873702428_413107753_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10725177_573652486072155_1401604216_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10724868_302191016652312_2097904817_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10731727_461314204008708_386749273_n.jpg\"],\"link\":[\"uu70zJo7qb\",\"uQnvluo7sK\",\"uLi56Wo7oO\",\"uEv-tCo7rJ\"],\"text\":[\"天下的小饼干遇到我，貌似就只有一种下场！！\",\"一个人，一支口琴，一片海，一瓶酒\",\"《论夜归，打的，以及发票的正确用法》\",\"童年真好。我以后一定不要跟孩子说：希望你快高长大这种傻话…\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-9\",\"arr\":{\"year\":2014,\"month\":9,\"src\":[\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10616983_1382591478697855_2107473552_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925287_1464119273867077_427071626_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925284_1534308033454310_855505111_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10666267_1550871771803214_2074300649_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693244_734401199942901_1572709880_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693771_1517437541834868_665867908_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693822_497709657032441_1125408654_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10683941_796597910390683_12441123_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10661142_164227523747936_1526737465_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10661182_550889531706942_2043749716_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10520334_1523531751215211_1344090061_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693390_547748238660649_761529890_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693650_837768039589771_1793184733_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/914812_1529561143923493_1662159287_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10644019_368509079979549_2085033896_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10684161_918887498139099_2081383304_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10683828_327931784041264_894089329_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10666028_872988212713750_1345360858_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10665501_1452353738387652_2075798065_n.jpg\"],\"link\":[\"tXuIHso7qK\",\"tJjQlAo7kH\",\"tDYyUeo7oX\",\"tCBULHo7sW\",\"tB_Xmao7qG\",\"s8cKzLI7pM\",\"s6-lOFo7ip\",\"s5GifkI7q7\",\"s3uZcmo7uj\",\"s2bb5io7p-\",\"s2P72tI7o6\",\"s2FPpGI7o_\",\"s1LPQPo7v8\",\"szZP5Io7lY\",\"sr9rtNo7lM\",\"sr7gXKI7h_\",\"srG7fjo7sV\",\"spAnrio7oh\",\"sj4BGgI7t_\"],\"text\":[\"我的好朋友——超级高冷超级磨人的丝瓜\",\"沉眠的店主失眠的狗。想起大学的最后时光，宿舍24小时都有人醒着，自由的人生，自由的酒和曲终人散，大家通常没有另一半，没有钱，没有忧愁，爽成狗\",\"如果他是程序员…\\nvar date = lifetime;\\rif(rotate(mountain, water, stupa)){ /*return nextLifetime;*/ return meetyou(journey);\\r}\",\"听着山寨的民谣电子乐，看着美好的姑娘。功德无量。\",\"弥里塘太宁静。在这我一直想起每一个被深圳车水马龙声吵醒的早晨，真是光辉的岁月\",\"进藏。天空挂满着云，黑的白的都有。云朵转眼飘散，它却依然是蓝色。\",\"“音浪太强不晃会被撞到地上…”\",\"陌生的朋友，愿下次再能与你们相聚在丽江love wine & half。我无法融解你悲观现实的想法，你也无法说服我旅行并不是逃避。但这都很有意思。只是想起以前有个人叫我不能喝太多的酒，一想到这个呀我就越喝越多\",\"玉龙雪山\",\"以前想去丽江，但去过的人都灌输着你也许会失望的观念，因而甚至不敢动身。这是一种“怕”。有时候真得自己去看看才会了然。第一天在丽江，民谣吉他缓缓流过商业化的街道，原来没有惊喜，也没有失望，一切刚刚好。\",\"我注定要回到老路上\",\"彩云之南\",\"云南，向往已久的地方\",\"QQ同时在线人数破2亿纪念，作为一颗小小螺丝钉，名字正好镶到企鹅的大嘴巴上。这时觉得有一丝光荣，一种努力被实化的错觉；然后又有点不舒服，感觉此时的自己，和名字身边的人一样。可我想要的就是不一样。\",\"陪伴一定得是件漫长的事呵。和奶奶在一起的中秋节。\",\"中秋和家人一起去看孔明灯，热闹而安逸，这是小城市的美好。\",\"老家的葡萄藤，从我初中时就挂在这，再见已是十一年\",\"家里橄榄熟了，盐渍，暴晒，蘸蜜，简直人间美味!\",\"在一场太阳雨里回到家中\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"video\",\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-8\",\"arr\":{\"year\":2014,\"month\":8,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10654876_610857929023752_364709543_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10644013_777642448965989_544517718_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/924456_1471485796442896_1699836323_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10607913_692632367472666_1829853902_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10611052_1466241683635233_830264506_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10617144_829548960388746_1611410337_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10453953_542161702576881_1621059386_n.jpg\"],\"link\":[\"sXa9g6I7jB\",\"sPt4u4I7kA\",\"sC18G0o7qb\",\"sAMmEWI7oC\",\"rzSow4o7lH\",\"ro28LPI7oc\",\"rR37wLo7iu\"],\"text\":[\"在书店的晚上终于把新专反复听完。太柔了…打一星两星的人肯定是真爱粉，这点有人敢怀疑？我不是，打四星！停不下来，直到书店响起:深圳即将入眠。但22点还是深圳的早晨呀\",\"慢三的华尔兹，大篇幅的爵士即兴。感觉生活得太浮躁。也太安逸。\",\"好久没看话剧，这部果然没让人失望。导演太会讲故事了，1024个赞\",\"纵有一万种悲伤的美丽，也比不过这段。\",\"在书城里看到的《后会无期》分镜图。电影那么美，分镜是这样，这就是现实~\",\"如果你从北京来看我，我会很感动;如果你像光，从太阳那头过来，我不以为然。因为光到地球只要8.3分钟。我们经常错用代价来衡量情感\",\"相聚总有时:)\"],\"type\":[\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-7\",\"arr\":{\"year\":2014,\"month\":7,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925559_1482425071996009_1940959046_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10554006_501929086608023_917623457_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10576105_624878090953161_638111947_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10570119_332808380211109_125412512_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/926536_828142997203682_1319760676_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/923702_252705761596555_721784545_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10549755_708603639175850_2095584541_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/928307_1442957109299429_297849354_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10488451_303926969784787_1278259348_n.jpg\"],\"link\":[\"q5e2KpI7qn\",\"qyXXpNI7q5\",\"qxfUe0I7lp\",\"qq9usdo7hr\",\"qn4WCIo7hi\",\"ql0brho7vN\",\"qkiaYDo7t9\",\"qURC9fI7r-\",\"p4A8IuI7py\"],\"text\":[\"随便走走，发现世界还是很美好的。当拥有美好事物时，经常习惯性的熟视无睹;当努力抓住你想要的东西时，它又可能瞬间破碎。但依旧需要不妥协。\",\"荔枝——我心目中的水果之王（有之一）\",\"高中时代最新款的mp4，现已成了老古董\",\"台风来临时，刚好会是暑假。但我已没有暑假。\",\"看着一场雨由远及近的淋湿院子，太漂亮\",\"归来却空空的行囊  那故乡的云  那故乡的风  啦啦啦啦啦 啦啦啦。\",\"在今年第一个狂风大作的早上，回家去\",\"98年，世界杯第一次在我脑中留下记忆，和爸，围着那台很小的tcl。今天，爸还打电话给我，让我别看太晚影响到明天工作，但我知道他自己也会去看的。是的，我们爱足球，今生今世\",\"这几天深圳的天空很美，无论晴雨\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-6\",\"arr\":{\"year\":2014,\"month\":6,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10362316_1434933843444633_1187384207_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10471930_507725875994902_393186392_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10454011_484872768311603_738380027_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/923661_248502122024084_2086692261_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10424605_774238262594769_78480252_n.jpg\"],\"link\":[\"p06uEZI7tG\",\"pytFNpo7sD\",\"poMFteI7q0\",\"pMt5tgI7vj\",\"o3eroFo7gK\"],\"text\":[\"“往事依稀浑似梦，都随风雨到心头”——梅表姐\",\"navy blue\",\"今天我遇到一朵枯玫瑰。她只是枯萎，从未凋零。\",\"上届卫冕冠军被打成筛子的…是热火…\",\"我和大神的差距——web工程师的自我修养\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-5\",\"arr\":{\"year\":2014,\"month\":5,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/e15/10387796_255697041300477_753213015_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10005623_779769878723970_627922376_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10358172_1495900567292387_640174442_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10369281_674379822637848_233362820_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/928251_430572373746575_786910314_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10358301_256481271142988_1088114034_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10296597_1413560715589179_392570057_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10299642_561366610636165_721929935_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10268965_1446530205590326_114108738_n.jpg\"],\"link\":[\"op03boo7lW\",\"ops-ZUI7t-\",\"ofqhBpI7mQ\",\"odP0cno7ue\",\"oLX-4GI7ne\",\"oBl6WtI7qC\",\"nvPChzI7vU\",\"ngAyz8o7qj\",\"ndTggdI7jn\"],\"text\":[\"突然发现我还是挺喜欢大晴天的\",\"单人旅行走起！开心\",\"不久就可以吃了\",\"黄昏时分\",\"大雨倾城\",\"今天路过公园，一朵玉兰掉在身边。想起小时候陪伴我的三棵树，两棵木棉，一棵玉兰。当然玉兰这名字是后来才知道的，记忆里的那朵永远叫做香花。三年级的某天放学，这三棵树一并倒下了。\",\"雨中深大。雨季再来不再来。\",\"say hey to may\",\"故事中的小黄花\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-4\",\"arr\":{\"year\":2014,\"month\":4,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10261258_711820055527911_220271949_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10249356_695726313802446_881680057_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268929_597082527053970_1060360934_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268941_490697914386538_1148834228_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10254195_545488182236276_1930978882_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/917572_539124756205696_1549712749_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/927273_657564254280429_578859844_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175316_650834874981595_1358429831_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/926422_245144379006241_1254093305_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/891289_302574849898688_205313988_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175309_510867459023322_1700312549_n.jpg\"],\"link\":[\"nOGNjUI7op\",\"nGJfYAo7lW\",\"nATIxlI7tR\",\"mxsNwto7pQ\",\"mm7JTUI7p0\",\"mhER0lo7oe\",\"mfvVUYI7hu\",\"mdF-nNo7pE\",\"mcVLQzo7nl\",\"mb5cFho7sd\",\"maqYInI7if\"],\"text\":[\"谢谢亲们的蛋糕和礼物;谢谢我们始终用“同学”来称呼彼此。\",\"处女座老榕树\",\"放风筝的人们\",\"现在我的状态，像极了一只被推上战场僵尸\",\"这几天我耳边是都是这样的话语:1、“就是敲敲键盘，挺清闲的哈！”2、“别太挑剔，给个一两千就先做着”3、“什么？你那一碗粉要十二块钱？！”我回深圳了，几天的清静生活，谢谢乡亲们的招待。\",\"good luck\",\"瓦上花开\",\"好吧，这是一艘船\",\"石表山，思罗河，四年后的清明我又来到了这儿\",\"清明，一路向西\",\"清明一回到家，老妈就开始炫耀她试验种的豆芽。愿君多采撷，此物最好吃？\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-3\",\"arr\":{\"year\":2014,\"month\":3,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10012487_604746702952671_676907736_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/1171265_389602547845527_1588547561_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11376491_1614984048759908_413209146_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11251074_365441270314698_1015057085_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11380079_1581430378786145_504181803_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11330604_837683999618217_506172540_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11273047_110162449318540_1639646034_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11375356_908792249164254_112740693_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11357539_388432694679963_1281450994_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11311124_1611430865770700_1482115931_n.jpg\"],\"link\":[\"mIgOdio7jT\",\"mIAS5lo7hb\",\"lrhVmio7lF\",\"lmADv6I7rU\",\"lhPFVeI7g6\",\"lcyrKSI7h_\",\"lSda6Ko7nG\",\"lSSxd8I7kB\",\"lK0xswI7s6\",\"lA4KaBI7go\"],\"text\":[\"转角遇到戏台，耳熟却不知道是哪一出了。想起爷爷以前的二胡与杨琴，自己精削细磨的琴竹，还有他组织的“菊山楼”粤剧队，真是一晃好些年。今年清明，一定回去。\",\"这本书超赞！好书好书好书\",\"四五点写程序太累，就不写了。不告诉任何人，跑到这个立交桥底，我已来过好几回。这里有一棵白色的紫荆花，满墙爬山虎，和刚放学的小朋友，出去，右拐，再右拐，转角可以遇到你，我的肉夹馍…\",\"越来越认生了，到步行街买衣服，找到比较适合的，却因为店员太过热情…跑了出来。闹市中居然藏有一古庙，还是这里自在，漫天神佛只是笑笑，不理物我，无论喜悲。对了我来这干嘛\",\"爬山的好处:强身健体，磨砺意志，开阔胸怀…坏处是:没有wifi。\",\"又见回南天\",\"老妈说，今天要我送个礼物！离家万里，只好迅速开发出这个app，摇后就会播放我唱的真的爱你。可惜她说摇后没反应，后来才知道，她拿的ipad在摇…但我是真的爱你\",\"今天下雨，的士司机都不肯理我。头上路灯光芒遥不可及，脚下路面棱角冰冷鲜明\",\"起风吧，明天。喜欢偏冷的日子，假如是春天，假如是风大，太完美了\",\"腾讯的凌晨四点半。第一次在此过夜，听着耳熟不能详的歌，看着平静不微笑的人。然后记起，家里打来被我按掉的电话，忘了回\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-2\",\"arr\":{\"year\":2014,\"month\":2,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/1737225_591794970889160_1849235580_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/1741200_451260698337036_577792061_n.jpg\"],\"link\":[\"kv3jNgI7sw\",\"kr8sW8I7nR\"],\"text\":[\"“不能吃太胖喔，会被杀掉的！”\",\"今晚，已经看到两个小女生在问，这里有《九云梦》吗？\"],\"type\":[\"image\",\"image\"]}}]}","site":{"data":{}},"excerpt":"","more":"{\"list\":[{\"date\":\"2017-07\",\"arr\":{\"year\":2017,\"month\":7,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BW_0-LNAEQy\",\"BWw_lTjAWvP\",\"BWl0n7ggC8d\",\"BWbyVtmgZA0\",\"BWPEL03A6QN\",\"BWJyvn_A8k1\",\"BWEqgtvgzyu\"],\"text\":[\"那天拍这张照片，是看到一个小女孩，借了妈妈的手机，边拍边赞叹“好美丽的颜色啊”。但照片最大的谎言就是定格，人们觉得美好是永恒的，至少不太会想时间之外的事情。\\n事实上这种植物一旦攀上柱子，就疯子一般往上爬，为了给顶端的小苗供给养分，下面的叶子会慢慢掉光。立交桥好高呀，小苗爬不上去，累了也枯萎了。最后只剩下光秃秃的丑陋藤条。\\n不过我还是希望小女孩过几天再看到它时，只是轻轻说“啊原来是这样”，而不是和我一样觉得它很丑。\",\"倦\",\"最光明的那个早上\",\"光芒万丈\",\"接连的雨，让高架上的三角梅窜得好高。高于路灯高于建筑物高于一切。不过它们的命运就是被剪掉，然后继续做一棵安分守己的好花\",\"天桥上汽车奔驰，天桥下静默花开。这是两个世界。\",\"用流行的话来讲，深圳现在的天气就是“一言不合就下雨”。但是天空从来就没有言语呀，也从来没有凑合谁的心意。不说话，不取悦，就很酷。\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-06\",\"arr\":{\"year\":2017,\"month\":6,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BV6WiUxgHp0\",\"BVrnb0GAIbo\",\"BVq6fMHAV8i\",\"BVUXrYtFwlA\",\"BVHdxQsFpYS\",\"BVE4dC6l-tK\",\"BVCbPn6lOqn\"],\"text\":[\"午睡\",\"分享一个甜甜圈\",\"分享一个失败的对焦\",\"雨后\",\"腾讯云\",\"黄昏的公园深处\",\"从今天开始，决定数一下一年有多少个多云的日子。\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-05\",\"arr\":{\"year\":2017,\"month\":5,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BUqBlIWFF_f\",\"BUlWsL0F5kE\",\"BUgrXBVlaJR\",\"BUdT28JFYpP\",\"BUYZzrJFfdJ\",\"BUO7nZZlWf0\",\"BUEZNOKFUK0\",\"BUB8VemFJEE\",\"BUA8KqRlF3n\",\"BT_4mkYFxc5\",\"BT_eImQF9sY\",\"BT-fITqlTiO\",\"BT27_ryFIr_\",\"BT0azZAFBIs\"],\"text\":[\"森林之晨\",\"Hello, _____\",\"水中豆\",\"雨中的公交车窗外\",\"飞机飞过天空\",\"西塘总的来说，还是挺好。就满大街唱着《成都》和《一瞬间》，感觉不是很懂…\",\"可能南浔真的是去过小镇的一个特例。没有太多的迷之传说去渲染，它就在这，一言不发的等你。兜兜转转又回到了百间楼，挨家问有人吗，随便帮再做个炒绣花锦吧，吃完这个菜我就走。\",\"看了一下午的燕子\",\"燕子飞过百间楼\",\"夜色里迷了路\",\"雨中漫步\",\"可能是一种“一出行铁定下雨”的体质\",\"生如夏花。整个四月都过得比较丧，想了下唯一开心的事情就是朴树的专辑了。\",\"五月\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"image\"]}},{\"date\":\"2017-04\",\"arr\":{\"year\":2017,\"month\":4,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BTvD8fCFOpY\",\"BTbS_uKF5Xx\",\"BTYKbXMFoUM\",\"BSc5TamlT16\",\"BSbA96PFiWC\",\"BSTZP6-gSaD\"],\"text\":[\"多久没去看一场日出\",\"阳光已经铺满下班的街道\",\"午睡\",\"与你跋山涉水\",\"清明晚宴，以及一个迟下楼的我\",\"一个突如其来的雨天\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-03\",\"arr\":{\"year\":2017,\"month\":3,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BSLeDr7gDu9\",\"BSIUnyfAdQY\",\"BSAjHqkgtr9\",\"BR-0YW4gfC9\",\"BRk5uUzlAe2\",\"BRXafqQgsSY\",\"BRS_5qFA9dW\",\"BRIjntvFr5d\"],\"text\":[\"蜘蛛与落日\",\"春林初盛\",\"日光倾城\",\"夜空中最亮的路灯\",\"二月底就开始构思要拍一组日系，每天端着相机来上班，然而是连续半个月的阴雨。今天终于天放晴了，相机却没了电。\",\"车窗里雾气，车窗外水滴。想起小时候作文，写为什么喜欢雨天，因为晴天你会纠结要不要出去玩，雨天就不用想，踏实呆家里好了。但那是小时候，现在也踏实了，就是下不下雨都要去上班啊…\",\"街拍 | 七点半\",\"“又是一轮月高悬 云端那边的天 两颗星座遥望夜空 永远不能相逢”\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-02\",\"arr\":{\"year\":2017,\"month\":2,\"src\":[\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BRBWMaAl2h2\",\"BQfmYX5gfiy\",\"BQU0S39AetF\",\"BQFkKYIASOp\",\"BQAdVx5AOLy\"],\"text\":[\"深圳的高架有很多三角梅，这种花的优点和缺点都是太倔强\",\"最近重新把球拍拿了起来。还是会很怀念，高中那时的球馆，阳光也是这样斜斜照进来。球滚到再远的角落，还是能捡起来；人走出了球馆，可能再也回不来。不过，只要你等，也总有陌生人推开门说：加我一个。\",\"深圳\",\"离家前心血来潮，突然想再刷一遍《白鹿原》，就把书给捎上了。列车经过山洞，窗外是明灭的光影，第一次觉得黑娃横腰打白嘉轩的那一棍子这么魔幻…好像会有迷之bgm响起，佐助说我要毁了木叶\",\"近乡情怯。情怯，多好的词语\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2017-01\",\"arr\":{\"year\":2017,\"month\":1,\"src\":[\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BPwIWSXgQ_L\",\"BPoXK-sgC6M\",\"BPMTnMTAH_Y\",\"BPKrtVMgo9j\",\"BPAVAW5gFc7\"],\"text\":[\"城市住久了，第一次决定在乡村过年。白天开心农场，晚上拍星星，过上了谈笑无鸿儒往来有白丁的生活…\",\"稻草人的早晨\",\"列车继续加速度，水珠在最后的时光里尽情飞驰\",\"一个等车的人都没有。上一次看到这副光景，是2009年10月5日的凌晨3点半，湘潭至武汉\",\"“人呢？”“买菜去了呗，真慢”——所谓冬日的阳光\"],\"type\":[\"image\",\"image\",\"video\",\"image\",\"image\"]}},{\"date\":\"2016-12\",\"arr\":{\"year\":2016,\"month\":12,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BOsC8obAOwI\",\"BOpI4qsAi6c\",\"BOjCbzZAhQy\",\"BOUysuPgbXG\",\"BOTVNfYgjRt\",\"BOMjl4LATC-\",\"BOAF_bbA9H0\",\"BN9ZdHuAqL1\",\"BN30BiDAVGo\",\"BN2CjzagYQK\",\"BNyLQGUgdma\",\"BNwOJYlgAOL\",\"BNtsL5QgEts\",\"BNn5V7oA_nc\"],\"text\":[\"每年这个时候都要趴在这座天桥，拍一张照。这个世界似乎没变，但又在喧哗和前行。这年成长了挺多，也学会看淡一些事情。\\n可能是代码写多了，感觉世界的逻辑有时很简单，事情无非是let，变化历历，或者是const，永恒安息。如果一开始就想清楚，留不住的就随风去，不会变的就钉到骨子里。那你说多轻松。\",\"去看雪？\",\"“大楼诗人”\",\"又是一年岁末时\",\"say hi\",\"现在的每个日落，都会有光正巧从窗帘缝隙钻过，平行照射到我的电脑屏幕。这个时刻就感觉特别神圣和中二。披上了迷之神眷色彩，讲不好我的工位就是个宇宙中心，太阳在绕着代码转\",\"末班车\",\"树影，好似一只黄鹂和蜣螂\",\"街拍 | 晴天\",\"“望”\",\"午睡\",\"“黄昏之时”\",\"枯萎的植物，最后的光\",\"街拍 | 也许是深圳最后的夏日\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-11\",\"arr\":{\"year\":2016,\"month\":11,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BNUaqEagioX\",\"BNTHIbUgigX\",\"BNRr9zBg0fu\",\"BNQHWSwA1Gy\",\"BNPbdVIg6gT\",\"BNOpXsKgU53\",\"BNBrozHAAV7\",\"BM8hsf-grvj\",\"BM8WO8xglvC\",\"BMy1VT3grFk\",\"BMrSxSNgpIN\",\"BMedxcZA0_g\",\"BMQLQvogqn7\"],\"text\":[\"“我是谁我爱谁我要谁我去哪”\",\"天都峰顶转一圈，站的地方巴掌大其实很慌…\",\"下了一夜雨，晚上没睡好，脑子里老想着天都峰关闭的事情。但风云变幻就在一瞬间，冥冥中必有回响，突如其来的晴天太过惊喜。峰顶走起\",\"上年没见着的雾凇突然出现，愿望兑现的感觉\",\"“不看岳”\",\"黄山行\",\"宿舍楼\",\"华科的秋天好像一条安静河流，慢慢扩散，了无声息，异常缓慢，又很具体。反正，时间还有很多，请随意\",\"又回我科，我科这个季节怎么拍都好看\",\"今夜月亮\",\"想过去改变，想过要离开，想过拍拍裤管就去远方。然后又想是不是先做出点事情，后来又突然有了点责任，再后来发现自己可以影响一些人… 它没有扼杀选择，反而让更多条路铺在我面前。所以，生日快乐，18岁。\",\"街拍 | 面对面\",\"一叶知秋\"],\"type\":[\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-10\",\"arr\":{\"year\":2016,\"month\":10,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BL_WXdxAM1Y\",\"BL6dTmIgecl\",\"BLv6COag1M6\",\"BLlf8WWgHcJ\",\"BLfzJ7gjj-8\",\"BLbaFJDAJ1i\",\"BLVHTFJgfg-\",\"BLTvxMWgKUn\",\"BLTd_nVAFQi\",\"BLP2UMKAGcn\",\"BLJIJCegCT3\",\"BLDZyq2g7Zr\",\"BLDSZ6pAsAZ\"],\"text\":[\"这年头不做作的民谣已经很少了……\",\"很久没去看那群留守的孩子了。他们还是很容易对每个人卸下心防，情绪会很强烈，所以开心时笑得特别大声，这让我想到悲伤会不会也成正比。不敢想。这世上，不一定所有问题都要去思考去直面，因为时间能帮你们解决很多问题。起码，在一起玩的时间。\",\"深圳雨，台风。小时候问大人，为什么我的风筝飞不起来？他们说要等大风。所以我期待着台风天。等了半年，台风来了，我却只能呆在窗户里往外看，也开始理解这场空欢喜。后来发现台风不单是种天气，还可以是一件事或一个人\",\"鸽子再也看不到无名山的高，你也不再是安和桥下清澈的水\",\"降低了预期，觉得滕王阁还不错。路遇一位玩摄影的大爷，教了许多东西，也听他说了许多往事。其实人得不得意都要尽欢，白不白头都要有那么一点青云之志\",\"东四变成了超市\\n东三变成了清真\\n神剪阁还在\\n绝望坡的小吃多到绝望\\n球场都翻修了\\n计科有钱了(辅导员说的)\\nofo小黄车已占领校园\\n学弟学妹主要玩lol和王者荣耀\\n光谷门对面依旧有鸡蛋灌饼和麻辣烫\\n韵苑食堂还是不怎么好吃\\n沁苑的猫又生了许多娃…\\n\\n来去匆匆，一些照片在：http://120.24.181.238/gallery/\",\"要是一个地方能称作图书馆，不单单是因为图书，还因为它收藏了太多的心事。\\n一语一念，虽不可借阅，愿永不过期。\",\"《深夜食堂》\",\"《返校日》\",\"旧时作\",\"和奶奶在一起。把轮椅推到广场下面玩，突然问我：你们厂生产什么？我：很难说，网络你知道吗… 奶奶：哦，卖绳子的啊\",\"19年前的我，就已经学会了爱恨分明……\",\"回老家，今天正好是“圩日”。村民一家老小，从竹林深处的罗江村出发，走过这条小桥，赶往市集。买到中意的衣服，或者零食，这就是完美的一天\"],\"type\":[\"video\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2016-09\",\"arr\":{\"year\":2016,\"month\":9,\"src\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"link\":[\"BK-l0eHgWep\",\"BK3W05HgBqP\",\"BK0nQcSARek\",\"BKx6pvkg5HE\",\"BKfNILQgNAO\",\"BKdn7vEAJJW\",\"BKcdEbPAWzk\",\"BKcCulagAx1\",\"BKazUfGAFlb\",\"BKayutggosw\",\"BKTJUOdgkLm\",\"BKIiijpAvmT\"],\"text\":[\"街拍 | 回望\",\"街拍 | 深拷贝…\",\"街拍 | 拷贝\",\"街拍 | 擦肩而过\",\"苗族妹子上来敬酒。以为只是普通米酒，一饮而尽，后来才跟我说有70度。那还怎样办？不走了。\",\"满城星星点点的灯火，当作你心心念念的生日蜡烛吧。生日快乐，永远单纯。\",\"以大为美的苗族银饰，近看却有许多复杂的细节\",\"迷了路找不见甲秀楼位置。干脆坐下来吃一碗哨脆面，听到对面歌舞升平，寻路过去果然找到了。道理就是，有地标的地方就有广场，有广场的地方就有广场舞。感谢大妈，感谢广场舞。\",\"眼中仿佛藏了一个宇宙\",\"曾经想仗剑走天涯\",\"…\",\"hello，好久不见\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-12\",\"arr\":{\"year\":2015,\"month\":12,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/12317949_812027942276002_800384968_n.jpg\"],\"link\":[\"-wSMLcI7sl\"],\"text\":[\"秦教练教学得很好，三小时已可征服中级场。滑雪真是项迷人的活动，还没回去就约好了下次再来\"],\"type\":[\"video\"]}},{\"date\":\"2015-11\",\"arr\":{\"year\":2015,\"month\":11,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s640x640/sh0.08/e35/12269862_894338194013437_1805169379_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s640x640/sh0.08/e35/12276891_172191463131445_911534090_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/12237527_913338585386151_2037194016_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11934646_1088170014540783_209449183_n.jpg\"],\"link\":[\"-tqoLXo7v-\",\"-qKfKxo7nw\",\"-nE5BQo7uP\",\"9qjBpWI7lk\"],\"text\":[\"雪上鸦飞\",\"行走于结了冰的松花江上，遇到一群放生的人。佛经飘扬，鱼虾入河，河面转瞬又恢复了平静。而后在饭店，服务员说我们的鱼，就来自这松花江里。\\n\\n佛的安排奇妙又令人啼笑，鱼让俩群不同的人都收获了快乐？那么我想，鱼就是佛\",\"月上枝头\",\"在天黑后的日光岩顶呆了很久，一个人看一座岛，孤单也自由。后来遇到一位姑娘，我们一同下山。带着她逛遍整条龙头路找吃的，但她什么也不愿吃，问她，她说，想吃酸辣土豆丝。\\n\\n只有笑着承认，真是意料之外的答案。我出来玩，就是为了吃平时吃不到的东西，她则是觉得家乡的菜最熟悉，在哪都是愿意吃的。\\n\\n好吧，陪你吃。因为，离开武汉这么久，我也挺想念这道菜。\"],\"type\":[\"image\",\"image\",\"image\",\"video\"]}},{\"date\":\"2015-10\",\"arr\":{\"year\":2015,\"month\":10,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12145229_1722399741326075_2063247708_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12080493_892409564169375_1626542651_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s640x640/sh0.08/e35/11849199_203248513340142_1615092499_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/12132912_162625974083441_1400003063_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s640x640/sh0.08/e35/12135478_1700175696879683_933151519_n.jpg\"],\"link\":[\"9VYE8YI7sk\",\"9BkX3xo7od\",\"8-Ba4MI7lt\",\"88Neujo7r2\",\"8uKqhDo7vp\"],\"text\":[\"在路上\",\"11点的时候，不想睡，借一只手电，一人夜游古村。这事情很刺激，转角遇到的神像，榕树的垂枝，摇曳的灯笼，自己投射到土楼的巨大影子，莫名的恐惧自心底升起。然而后来又不怕了，却总是想起以前去的思溪源村…with my friends\",\"古城的砖瓦年代久了，就很容易长出猫来\",\"以前吉他老师说，对于一首天空之城，听过与弹过是完全不一样的。弹过后才知道，从开始的吉他2品就一直在递增，仿佛自身也在飞翔，云层渐开，空城显现，情绪是那么容易被调动。然而我的水平只够感动自己，要抓紧时间努力学习了。不说了，玩游戏去了\",\"海上日出\"],\"type\":[\"image\",\"image\",\"image\",\"video\",\"image\"]}},{\"date\":\"2015-9\",\"arr\":{\"year\":2015,\"month\":9,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s640x640/sh0.08/e35/11875445_885316994870904_706284789_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s640x640/sh0.08/e35/11352715_138879086461968_2066668148_n.jpg\"],\"link\":[\"8NKC9RI7oZ\",\"8DOh_to7p0\"],\"text\":[\"沙滩总有数不完的沙子，数不完的故事。在这突然想起那本还没看完的《岛上书店》，是时候继续做些什么了\",\"陌上花开\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2015-6\",\"arr\":{\"year\":2015,\"month\":6,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11429225_720390118073037_768409912_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11420780_1012574008772885_1569805305_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11252784_879698105429690_2109453469_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11267410_925161560884785_371811288_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11375982_491190547696110_2013240096_n.jpg\"],\"link\":[\"4T1Lfgo7gX\",\"3-mmN3o7mn\",\"3uts9do7jI\",\"3iK7kwI7j1\",\"3glBKbI7jm\"],\"text\":[\"大雨之后\",\"一脸无辜的王尼玛大哥，从肚腩来看，果然是正品？\",\"感觉迷上风筝了。有次做梦，想到一根根拉伸向上的线，像是在钓空中的鱼。而一个技术娴熟的“渔夫”，收杆时是这么干净利落。\",\"起飞\",\"小萝莉不愿回家，跟奶奶说：“再让我玩会，明天要学钢琴，后天要学跳舞，就来不了这儿玩了。”\"],\"type\":[\"image\",\"image\",\"video\",\"video\",\"image\"]}},{\"date\":\"2015-5\",\"arr\":{\"year\":2015,\"month\":5,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/11252751_1444216632541093_1558227860_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11226595_701075516681953_1354085958_n.jpg\"],\"link\":[\"24-dd6o7uB\",\"2uQeuaI7nv\"],\"text\":[\"风雨欲来\",\"野生海带\"],\"type\":[\"image\",\"video\"]}},{\"date\":\"2015-4\",\"arr\":{\"year\":2015,\"month\":4,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11142212_609961145801361_1913577076_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11049421_1375007652828983_401355534_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11137852_1649834698581861_1050691792_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11055751_1573536912901494_1683773508_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11055897_1407191599597961_1763496348_n.jpg\"],\"link\":[\"1IUZByo7vP\",\"1ISKRxo7r8\",\"1GPBzpo7qW\",\"1FtGO3I7kN\",\"1C03iPI7hZ\"],\"text\":[\"要回去啦，再见北流河\",\"灵芝get√\",\"这里的清明是个很重要的节日，子孙们都会回来，跋山涉水，竹排渡江，荒山寻路，凭集体的记忆寻找列祖列宗的宝地，寄哀思，也求福德。一路上可以听他们唠叨旧事，也有超级靠谱的风水科普\",\"为了部落\",\"在清明的山路遇到了天然松香\"],\"type\":[\"video\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-3\",\"arr\":{\"year\":2015,\"month\":3,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11123665_1542600796003839_1576473443_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008101_1593505510894691_369067449_n.jpg\"],\"link\":[\"04_8fwo7gL\",\"zzfe7Oo7uc\"],\"text\":[\"如果你飞得像月亮这么高，就不会搁浅在树上\",\"喜欢这个季节的天空，你找个草坪一躺，飞机，风筝，鸟儿就都在上边，天气好时还能看到白天的月亮\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2015-2\",\"arr\":{\"year\":2015,\"month\":2,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10958252_1405701033068537_2023890854_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10832246_413065338853260_183697882_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10268927_436139166536328_1377561628_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11008343_410508022446936_713236389_n.jpg\"],\"link\":[\"zcWez6I7uo\",\"zRPazvI7ol\",\"zPN2LtI7sT\",\"zKrDWlo7gZ\"],\"text\":[\"很多东西随着慢慢长大，变得不像小时候那样盼望热切，比如巧克力麦当劳薯片雪糕。只有对担子粉的爱永远不变的说…\",\"据说是一年一度考验演技的时候…\",\"锈迹斑斑的香炉\",\"回老家了，小时候跟我打过玻璃珠的小伙伴们呢？你们一个在北京，一个在安徽，一个在澳洲，一个我都不知道了…但你们看到玻璃珠的时候，要想起我来啊\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2015-1\",\"arr\":{\"year\":2015,\"month\":1,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10932550_620643038062978_1729442807_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/891532_1563899373855738_1180535181_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10005439_338105566394046_854247264_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10903312_693622147425934_1766884651_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10914460_1546003772305181_1301162053_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10903277_832760670116494_255352239_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/924083_1539057536347062_2062767438_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10890944_765121966897759_2039585477_n.jpg\"],\"link\":[\"yb8uaCI7tt\",\"yKBopho7mX\",\"yAOcawI7pA\",\"x5U25kI7sN\",\"x1TTZUo7gW\",\"xeGbWuo7if\",\"xXr70fI7iD\",\"xUB4dOI7g1\"],\"text\":[\"草地上遗落的鞋子\",\"有位很久没联系的朋友寄来明信片，说：我很少看到海，正如你没见过几次雪\",\"深夜总是灵感乍现的最佳时期，只是几个设计方案都没法使自己满意。累了打开窗看到天上有个大月亮，只想用图章工具把它干掉。\",\"面朝大海冬暖花开\",\"分享日常不正常生活照一张\",\"其实我想，那些古老的渔民们，每天看着海岸线的日落日出，肯定是有人想过地球是圆的。而“想法”与“证明”之间，却跨越了一整条麦哲伦航道\",\"鱼山鱼海中，只有你，肯安静的趴在65厘米厚的亚克力板子上与我合影，大丑鱼\",\"新年单人旅行走起。其实从九洲港码头开始，珠海并没有给人很惊喜的感觉，包括盛名之下的沿海风光与渔女雕塑。倒是交通不通畅，从轮渡到公交都给我带来了许多麻烦。直到，晚上吃烤生蚝的第一口，我又觉得什么事情都是可以原谅的……\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-12\",\"arr\":{\"year\":2014,\"month\":12,\"src\":[\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10899183_999582293404177_745539859_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10894909_702627706517406_1277557620_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10831989_483313928477468_40906631_n.jpg\"],\"link\":[\"xRWN47I7pW\",\"xO3qREI7iW\",\"wEQykeo7tU\"],\"text\":[\"2014年最后的阳光\",\"最后一节吉他课结束后，马路上那风一直吹，才感觉南方的冬天终于是来了。其实吉他在冬天会有许多神奇的事情。比如琴弦如肌肉一样因冷而紧绷，发出比以往沉闷的低语；而空旷的大教室里，如有其他同伴拨响和弦，手中本已按灭的琴弦又会因共鸣微微颤动。像有生命一样。\",\"有棵丑树，我经常去看，又胖又歪，秃得可笑。在变冷的一天，它突然就开花了。冬天的花我知道得很少，南方没有梅花，那就是异木棉了\"],\"type\":[\"image\",\"image\",\"image\"]}},{\"date\":\"2014-11\",\"arr\":{\"year\":2014,\"month\":11,\"src\":[\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10784965_1518537748403855_176956695_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10735195_1505939246340704_1984926778_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10747711_429336373885590_422028037_n.jpg\"],\"link\":[\"vP2ywuo7pq\",\"vA68BLo7tN\",\"u7zEVxo7vw\"],\"text\":[\"通灵之术！\",\"现场气氛果然不一样，马上就可以看到小伞在大哥胯下疯狂输出…是时候来首选一记薇恩了\",\"有朋友跟我说，挪威的森林根本看不下去；又有朋友说，看这书一发不可收拾。差别好大呀！我倒觉得有个简单的方法：翻到开篇的这几个字，如果心中一紧，那就说明这本书适合你，否则请弃之\"],\"type\":[\"image\",\"image\",\"image\"]}},{\"date\":\"2014-10\",\"arr\":{\"year\":2014,\"month\":10,\"src\":[\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10735112_730529873702428_413107753_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10725177_573652486072155_1401604216_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10724868_302191016652312_2097904817_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10731727_461314204008708_386749273_n.jpg\"],\"link\":[\"uu70zJo7qb\",\"uQnvluo7sK\",\"uLi56Wo7oO\",\"uEv-tCo7rJ\"],\"text\":[\"天下的小饼干遇到我，貌似就只有一种下场！！\",\"一个人，一支口琴，一片海，一瓶酒\",\"《论夜归，打的，以及发票的正确用法》\",\"童年真好。我以后一定不要跟孩子说：希望你快高长大这种傻话…\"],\"type\":[\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-9\",\"arr\":{\"year\":2014,\"month\":9,\"src\":[\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10616983_1382591478697855_2107473552_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925287_1464119273867077_427071626_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925284_1534308033454310_855505111_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10666267_1550871771803214_2074300649_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693244_734401199942901_1572709880_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693771_1517437541834868_665867908_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693822_497709657032441_1125408654_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10683941_796597910390683_12441123_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10661142_164227523747936_1526737465_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10661182_550889531706942_2043749716_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10520334_1523531751215211_1344090061_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693390_547748238660649_761529890_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10693650_837768039589771_1793184733_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/914812_1529561143923493_1662159287_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10644019_368509079979549_2085033896_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10684161_918887498139099_2081383304_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10683828_327931784041264_894089329_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10666028_872988212713750_1345360858_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10665501_1452353738387652_2075798065_n.jpg\"],\"link\":[\"tXuIHso7qK\",\"tJjQlAo7kH\",\"tDYyUeo7oX\",\"tCBULHo7sW\",\"tB_Xmao7qG\",\"s8cKzLI7pM\",\"s6-lOFo7ip\",\"s5GifkI7q7\",\"s3uZcmo7uj\",\"s2bb5io7p-\",\"s2P72tI7o6\",\"s2FPpGI7o_\",\"s1LPQPo7v8\",\"szZP5Io7lY\",\"sr9rtNo7lM\",\"sr7gXKI7h_\",\"srG7fjo7sV\",\"spAnrio7oh\",\"sj4BGgI7t_\"],\"text\":[\"我的好朋友——超级高冷超级磨人的丝瓜\",\"沉眠的店主失眠的狗。想起大学的最后时光，宿舍24小时都有人醒着，自由的人生，自由的酒和曲终人散，大家通常没有另一半，没有钱，没有忧愁，爽成狗\",\"如果他是程序员…\\nvar date = lifetime;\\rif(rotate(mountain, water, stupa)){ /*return nextLifetime;*/ return meetyou(journey);\\r}\",\"听着山寨的民谣电子乐，看着美好的姑娘。功德无量。\",\"弥里塘太宁静。在这我一直想起每一个被深圳车水马龙声吵醒的早晨，真是光辉的岁月\",\"进藏。天空挂满着云，黑的白的都有。云朵转眼飘散，它却依然是蓝色。\",\"“音浪太强不晃会被撞到地上…”\",\"陌生的朋友，愿下次再能与你们相聚在丽江love wine & half。我无法融解你悲观现实的想法，你也无法说服我旅行并不是逃避。但这都很有意思。只是想起以前有个人叫我不能喝太多的酒，一想到这个呀我就越喝越多\",\"玉龙雪山\",\"以前想去丽江，但去过的人都灌输着你也许会失望的观念，因而甚至不敢动身。这是一种“怕”。有时候真得自己去看看才会了然。第一天在丽江，民谣吉他缓缓流过商业化的街道，原来没有惊喜，也没有失望，一切刚刚好。\",\"我注定要回到老路上\",\"彩云之南\",\"云南，向往已久的地方\",\"QQ同时在线人数破2亿纪念，作为一颗小小螺丝钉，名字正好镶到企鹅的大嘴巴上。这时觉得有一丝光荣，一种努力被实化的错觉；然后又有点不舒服，感觉此时的自己，和名字身边的人一样。可我想要的就是不一样。\",\"陪伴一定得是件漫长的事呵。和奶奶在一起的中秋节。\",\"中秋和家人一起去看孔明灯，热闹而安逸，这是小城市的美好。\",\"老家的葡萄藤，从我初中时就挂在这，再见已是十一年\",\"家里橄榄熟了，盐渍，暴晒，蘸蜜，简直人间美味!\",\"在一场太阳雨里回到家中\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"video\",\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"video\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-8\",\"arr\":{\"year\":2014,\"month\":8,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10654876_610857929023752_364709543_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10644013_777642448965989_544517718_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/924456_1471485796442896_1699836323_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10607913_692632367472666_1829853902_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10611052_1466241683635233_830264506_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10617144_829548960388746_1611410337_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10453953_542161702576881_1621059386_n.jpg\"],\"link\":[\"sXa9g6I7jB\",\"sPt4u4I7kA\",\"sC18G0o7qb\",\"sAMmEWI7oC\",\"rzSow4o7lH\",\"ro28LPI7oc\",\"rR37wLo7iu\"],\"text\":[\"在书店的晚上终于把新专反复听完。太柔了…打一星两星的人肯定是真爱粉，这点有人敢怀疑？我不是，打四星！停不下来，直到书店响起:深圳即将入眠。但22点还是深圳的早晨呀\",\"慢三的华尔兹，大篇幅的爵士即兴。感觉生活得太浮躁。也太安逸。\",\"好久没看话剧，这部果然没让人失望。导演太会讲故事了，1024个赞\",\"纵有一万种悲伤的美丽，也比不过这段。\",\"在书城里看到的《后会无期》分镜图。电影那么美，分镜是这样，这就是现实~\",\"如果你从北京来看我，我会很感动;如果你像光，从太阳那头过来，我不以为然。因为光到地球只要8.3分钟。我们经常错用代价来衡量情感\",\"相聚总有时:)\"],\"type\":[\"image\",\"video\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-7\",\"arr\":{\"year\":2014,\"month\":7,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/925559_1482425071996009_1940959046_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10554006_501929086608023_917623457_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10576105_624878090953161_638111947_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10570119_332808380211109_125412512_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/926536_828142997203682_1319760676_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/923702_252705761596555_721784545_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10549755_708603639175850_2095584541_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/928307_1442957109299429_297849354_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10488451_303926969784787_1278259348_n.jpg\"],\"link\":[\"q5e2KpI7qn\",\"qyXXpNI7q5\",\"qxfUe0I7lp\",\"qq9usdo7hr\",\"qn4WCIo7hi\",\"ql0brho7vN\",\"qkiaYDo7t9\",\"qURC9fI7r-\",\"p4A8IuI7py\"],\"text\":[\"随便走走，发现世界还是很美好的。当拥有美好事物时，经常习惯性的熟视无睹;当努力抓住你想要的东西时，它又可能瞬间破碎。但依旧需要不妥协。\",\"荔枝——我心目中的水果之王（有之一）\",\"高中时代最新款的mp4，现已成了老古董\",\"台风来临时，刚好会是暑假。但我已没有暑假。\",\"看着一场雨由远及近的淋湿院子，太漂亮\",\"归来却空空的行囊  那故乡的云  那故乡的风  啦啦啦啦啦 啦啦啦。\",\"在今年第一个狂风大作的早上，回家去\",\"98年，世界杯第一次在我脑中留下记忆，和爸，围着那台很小的tcl。今天，爸还打电话给我，让我别看太晚影响到明天工作，但我知道他自己也会去看的。是的，我们爱足球，今生今世\",\"这几天深圳的天空很美，无论晴雨\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-6\",\"arr\":{\"year\":2014,\"month\":6,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10362316_1434933843444633_1187384207_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/10471930_507725875994902_393186392_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10454011_484872768311603_738380027_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/923661_248502122024084_2086692261_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10424605_774238262594769_78480252_n.jpg\"],\"link\":[\"p06uEZI7tG\",\"pytFNpo7sD\",\"poMFteI7q0\",\"pMt5tgI7vj\",\"o3eroFo7gK\"],\"text\":[\"“往事依稀浑似梦，都随风雨到心头”——梅表姐\",\"navy blue\",\"今天我遇到一朵枯玫瑰。她只是枯萎，从未凋零。\",\"上届卫冕冠军被打成筛子的…是热火…\",\"我和大神的差距——web工程师的自我修养\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-5\",\"arr\":{\"year\":2014,\"month\":5,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/e15/10387796_255697041300477_753213015_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10005623_779769878723970_627922376_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10358172_1495900567292387_640174442_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10369281_674379822637848_233362820_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/928251_430572373746575_786910314_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10358301_256481271142988_1088114034_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10296597_1413560715589179_392570057_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10299642_561366610636165_721929935_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10268965_1446530205590326_114108738_n.jpg\"],\"link\":[\"op03boo7lW\",\"ops-ZUI7t-\",\"ofqhBpI7mQ\",\"odP0cno7ue\",\"oLX-4GI7ne\",\"oBl6WtI7qC\",\"nvPChzI7vU\",\"ngAyz8o7qj\",\"ndTggdI7jn\"],\"text\":[\"突然发现我还是挺喜欢大晴天的\",\"单人旅行走起！开心\",\"不久就可以吃了\",\"黄昏时分\",\"大雨倾城\",\"今天路过公园，一朵玉兰掉在身边。想起小时候陪伴我的三棵树，两棵木棉，一棵玉兰。当然玉兰这名字是后来才知道的，记忆里的那朵永远叫做香花。三年级的某天放学，这三棵树一并倒下了。\",\"雨中深大。雨季再来不再来。\",\"say hey to may\",\"故事中的小黄花\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-4\",\"arr\":{\"year\":2014,\"month\":4,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10261258_711820055527911_220271949_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/10249356_695726313802446_881680057_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268929_597082527053970_1060360934_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/10268941_490697914386538_1148834228_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/10254195_545488182236276_1930978882_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/917572_539124756205696_1549712749_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/927273_657564254280429_578859844_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175316_650834874981595_1358429831_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/926422_245144379006241_1254093305_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/891289_302574849898688_205313988_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-frc/t51.2885-15/e15/10175309_510867459023322_1700312549_n.jpg\"],\"link\":[\"nOGNjUI7op\",\"nGJfYAo7lW\",\"nATIxlI7tR\",\"mxsNwto7pQ\",\"mm7JTUI7p0\",\"mhER0lo7oe\",\"mfvVUYI7hu\",\"mdF-nNo7pE\",\"mcVLQzo7nl\",\"mb5cFho7sd\",\"maqYInI7if\"],\"text\":[\"谢谢亲们的蛋糕和礼物;谢谢我们始终用“同学”来称呼彼此。\",\"处女座老榕树\",\"放风筝的人们\",\"现在我的状态，像极了一只被推上战场僵尸\",\"这几天我耳边是都是这样的话语:1、“就是敲敲键盘，挺清闲的哈！”2、“别太挑剔，给个一两千就先做着”3、“什么？你那一碗粉要十二块钱？！”我回深圳了，几天的清静生活，谢谢乡亲们的招待。\",\"good luck\",\"瓦上花开\",\"好吧，这是一艘船\",\"石表山，思罗河，四年后的清明我又来到了这儿\",\"清明，一路向西\",\"清明一回到家，老妈就开始炫耀她试验种的豆芽。愿君多采撷，此物最好吃？\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-3\",\"arr\":{\"year\":2014,\"month\":3,\"src\":[\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/10012487_604746702952671_676907736_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/1171265_389602547845527_1588547561_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11376491_1614984048759908_413209146_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11251074_365441270314698_1015057085_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/11380079_1581430378786145_504181803_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11330604_837683999618217_506172540_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11273047_110162449318540_1639646034_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/11375356_908792249164254_112740693_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11357539_388432694679963_1281450994_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/11311124_1611430865770700_1482115931_n.jpg\"],\"link\":[\"mIgOdio7jT\",\"mIAS5lo7hb\",\"lrhVmio7lF\",\"lmADv6I7rU\",\"lhPFVeI7g6\",\"lcyrKSI7h_\",\"lSda6Ko7nG\",\"lSSxd8I7kB\",\"lK0xswI7s6\",\"lA4KaBI7go\"],\"text\":[\"转角遇到戏台，耳熟却不知道是哪一出了。想起爷爷以前的二胡与杨琴，自己精削细磨的琴竹，还有他组织的“菊山楼”粤剧队，真是一晃好些年。今年清明，一定回去。\",\"这本书超赞！好书好书好书\",\"四五点写程序太累，就不写了。不告诉任何人，跑到这个立交桥底，我已来过好几回。这里有一棵白色的紫荆花，满墙爬山虎，和刚放学的小朋友，出去，右拐，再右拐，转角可以遇到你，我的肉夹馍…\",\"越来越认生了，到步行街买衣服，找到比较适合的，却因为店员太过热情…跑了出来。闹市中居然藏有一古庙，还是这里自在，漫天神佛只是笑笑，不理物我，无论喜悲。对了我来这干嘛\",\"爬山的好处:强身健体，磨砺意志，开阔胸怀…坏处是:没有wifi。\",\"又见回南天\",\"老妈说，今天要我送个礼物！离家万里，只好迅速开发出这个app，摇后就会播放我唱的真的爱你。可惜她说摇后没反应，后来才知道，她拿的ipad在摇…但我是真的爱你\",\"今天下雨，的士司机都不肯理我。头上路灯光芒遥不可及，脚下路面棱角冰冷鲜明\",\"起风吧，明天。喜欢偏冷的日子，假如是春天，假如是风大，太完美了\",\"腾讯的凌晨四点半。第一次在此过夜，听着耳熟不能详的歌，看着平静不微笑的人。然后记起，家里打来被我按掉的电话，忘了回\"],\"type\":[\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\",\"image\"]}},{\"date\":\"2014-2\",\"arr\":{\"year\":2014,\"month\":2,\"src\":[\"https://scontent.cdninstagram.com/hphotos-ash/t51.2885-15/e15/1737225_591794970889160_1849235580_n.jpg\",\"https://scontent.cdninstagram.com/hphotos-prn/t51.2885-15/e15/1741200_451260698337036_577792061_n.jpg\"],\"link\":[\"kv3jNgI7sw\",\"kr8sW8I7nR\"],\"text\":[\"“不能吃太胖喔，会被杀掉的！”\",\"今晚，已经看到两个小女生在问，这里有《九云梦》吗？\"],\"type\":[\"image\",\"image\"]}}]}"}],"Post":[{"title":"Babel简单js代码转换","date":"2018-08-30T11:17:50.000Z","top":9,"_content":"　　近期get一个需求：需要对原始的js代码转换功能进行改进，在原始的通过正则匹配转换前增加一层更加准确的ast(抽象解析树)转换。初期的想法是使用jdk9，acorn和babel都进行测试然后选择最优。然后通过实践后发现jdk9只能做到对js的ast解析无法对ast进行更改以及ast转换为js操作，acorn与babel两者都是基于node.js的模块都可以实现js的转换功能但是相比而言acorn的相关文献太少且不完整，另一方面acorn主要是侧重于对js代码的解析在进行js转换的过程中发现有很多的坑步履艰难，而babel则不一样在js的解析方面是基于acorn有着与acorn几乎相同的解析速度，并且在转换方面有着一套完整的开发体系以及有着一套支持多国语言的[开发文档](https://github.com/jamiebuilds/babel-handbook/blob/master/README.md)学习的效率远高于acorn。\n<!-- more -->\n\n## 一，简介\n### 1.1 ast(抽象语法树):\n　　抽象语法树（abstract syntax tree或者缩写为AST），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。和抽象语法树相对的是具体语法树（concrete syntaxtree），通常称作分析树（parse tree）。一般的，在源代码的翻译和编译过程中，语法分析器创建出分析树。一旦AST被创建出来，在后续的处理过程中，比如语义分析阶段，会添加一些信息。\n　　通过AST可以对源代码进行更为准确的定位以及更换，并且有着正则无法实现的上下文结合，可以对源码进行手术刀级别的修改。\n　　推荐两个在线生成AST工具：[Astexplorer](https://astexplorer.net/)，[Esprima](http://esprima.org/demo/parse.html#)\n### 1.2 nodejs:\n　　Nodejs框架是基于V8的引擎，是目前速度最快的Javascript引擎。chrome浏览器就基于V8，同时打开20-30个网页都很流畅。Nodejs标准的web开发框架Express，可以帮助我们迅速建立web站点，比起PHP的开发效率更高，而且学习曲线更低。\n　　JS是脚本语言，脚本语言需要一个解析器才能运行。对于写在HTML页面里面的JS，浏览器充当了解析器的角色。而对于需要独立运行的JS，NodeJS就是一个解析器可以通过命令直接运行js。\n　　每种解析器就是一个运行环境，不但允许JS定义各种数据结构，进行各种计算，还允许JS使用运行环境提供的内置对象和方法做一些事情。例如运行在浏览器中的JS的用途是操作DOM，浏览器就提供了document之类的内置对象。而运行在NodeJS中的JS的用途是操作磁盘文件或者搭建HTTP服务器，NodeJS就相应提供了fs、http等内置对象。\n　　另外Node.js生态圈也是非常的强大有则很多有些的第三法模块比如本次使用的babel,acorn，Bloger的福音Hexo等\n### 1.3 babel：\n　　Babel 是一个通用的多用途 JavaScript 编译器。通过 Babel 你可以使用（并创建）下一代的 JavaScript，以及下一代的 JavaScript 工具。作为一种语言，JavaScript 在不断发展，新的标准／提案和新的特性层出不穷。 在得到广泛普及之前，Babel 能够让你提前（甚至数年）使用它们。 Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译（transpiling，是一个自造合成词，即转换＋编译。以下也简称为转译）。 例如，Babel 能够将新的 ES2015 箭头函数语法：\n　　`const square = n => n * n;\n　　转译为：\n```\n    const square = function square(n) {\n        return n * n;\n      };\n```\n　　不过 Babel 的用途并不止于此，它支持语法扩展，能支持像 React 所用的 JSX 语法，同时还支持用于静态类型检查的流式语法（Flow Syntax）。更重要的是，Babel 的一切都是简单的插件，谁都可以创建自己的插件，利用 Babel 的全部威力去做任何事情。再进一步，Babel 自身被分解成了数个核心模块，任何人都可以利用它们来创建下一代的 JavaScript 工具。已经有很多人都这样做了，围绕着 Babel 涌现出了非常大规模和多样化的生态系统。\n　　以上描述来自Babel官方github，也就是说Babel可以进行js代码的转换并且拥有这丰富的插件来按照指定规则来转换，最重要的还可以通过自定义插件。(本次主要使用babel的基本语法，插件的编写在后期博客中讲解)\n## 二，安装教程\n### 2.1 nodejs:\n　　从[官网]()上点击对应的版本下载安装包，然后无脑下一步进行安装。\n　　配置环境变量将node.js的安装路径添加到Path当中(为了能够在windos中全局调用node.js命令)\n　　现在就可以通过`node xxx.js`执行js文件了\n### 2.2 babel:\n　　`babel-cli`\n　　Babel 的 CLI 是一种在命令行下使用 Babel 编译文件的简单方法。其安装的方法有两种：全局安装和在项目中安装，官方推荐的是在项目中安装，个人也比较认同这一点。\n　　首先建立一个文件夹比如`babel`可以在node.js安装目录下也可以在其他目录下，建议不在node.js安装目录下，创建后在打开cmd窗口并进入该目录进行下一步操作。\n##### a）全局安装\n　　通过命令`$ npm install --global babel-cli`在babel-cli安装完后就可以通过执行`$ babel SimpleTest.js`来执行我们的第一个文件。不过这只是简单的将js结果输出到控制台\n　　使用`$ babel example.js --out-file compiled.js`或者`$ babel example.js -o compiled.js`可以将结果写入到指定的文件。\n　　如果我们想要把一个目录整个编译成一个新的目录，可以使用 --out-dir 或者 -d`$ babel src --out-dir lib` `$ babel src -d lib`\n　　如果想要卸载全局安装的babel的话可以通过执行`$ npm uninstall --global babel-cli`\n##### b) 在项目中安装\n　　通过命令`$ npm install --save-dev babel-cli`完成安装后你的`package.json`应该如下所示：\n```$ package.json\n    json{\n      \"name\": \"my-project\",\n      \"version\": \"1.0.0\",\n      \"devDependencies\": {\n        \"babel-cli\": \"^6.0.0\"\n      }\n    }\n```\n　　如果我们不想直接从命令行运行 Babel 了，取而代之我们将把运行命令写在 npm scripts 里，这样可以使用 Babel 的本地版本。只需将 `scripts` 字段添加到你的 `package.json` 文件内并且把 babel 命令写成 build 字段。.\n```$ package.json\n      {\n        \"name\": \"my-project\",\n        \"version\": \"1.0.0\",\n    +   \"scripts\": {\n    +     \"build\": \"babel src -d lib\"\n    +   },\n        \"devDependencies\": {\n          \"babel-cli\": \"^6.0.0\"\n        }\n      }\n```\n然后在终端里运行：`npm run build`就可以了\n## 三， 进行js代码转换\n### 3.1 babel的解析引擎\n　　Babel使用的引擎是babylon，babylon并非由babel团队自己开发的，而是fork的acorn项目，不过acorn引擎只提供基本的解析ast的能力。\n　　遍历还需要配套的babel-travesal, 替换节点需要使用babel-types，而这些开发，在Babel的插件体系开发下，变得一体化了。\n### 3.2 使用babel做js的代码转换\n　　进行js代码的转换主要分为三个步骤：js代码解析为AST树，对AST树进行遍历修改，将修改后的AST树转换为新的js代码。\n#### a) js代码解析为AST树\n　　[`babylon`](https://github.com/babel/babylon)<--点一下，打来惊喜\n　　将js源码转换为AST用到的模块叫：babylon，Babylon 是 Babel 的解析器。最初是 从Acorn项目fork出来的。Acorn非常快，易于使用，并且针对非标准特性(以及那些未来的标准特性) 设计了一个基于插件的架构。\n　　运行以下命令进行安装：\n　　`$ npm install --save babylon`\n　　使用的方法如下：\n```\n    const babylon = require('babylon');\n    \n    const code = `function square(n) {\n      return n * n;\n    }`;  \n    console.log(babylon.parse(code));\n```\n　　也可以通过如下的方法传递选项给parse()\n```\n    babylon.parse(code, {\n      sourceType: \"module\", // default: \"script\"\n      plugins: [\"jsx\"] // default: []\n    });\n```\n　　sourceType 可以是 \"module\" 或者 \"script\"，它表示 Babylon 应该用哪种模式来解析。 \"module\" 将会在严格模式下解析并且允许模块定义，\"script\" 则不会。\n　　由于 Babylon 使用了基于插件的架构，因此有一个 plugins 选项可以开关内置的插件。 注意 Babylon 尚未对外部插件开放此 API 接口，不排除未来会开放此API。\n　　要查看完整的插件列表，请点击这个[链接](https://github.com/babel/babylon/blob/master/README.md#plugins)\n#### b) 对AST树进行遍历修改\n　　[`babel-traverse`](https://github.com/babel/babel/tree/master/packages/babel-traverse)<--点一下，打开惊喜\n　　Babel Traverse模块维护了整棵树的状态，并且负责替换、移除和添加节点。\n　　运行以下命令安装：\n　　`$ npm install --save babel-traverse`\n#### c) 将修改后的AST树转换为新的js代码\n　　[`babel-generator`](https://github.com/babel/babel/tree/master/packages/babel-generator)<--点一下,打开惊喜\n　　Babel Generator模块是 Babel 的代码生成器，它读取AST并将其转换为代码和源码映射。\n　　`$ npm install --save babel-generator`\n#### d) 案例代码\n```$ SimpleTest.js\n    //引入fs模块\n    var fs = require('fs');\n    //引入babel模快\n    const babylon = require('babylon');\n    const Traverse = require('babel-traverse').default;\n    const generator = require('babel-generator').default;\n    //读取js文件\n    var code =fs.readFileSync('./JsFile0.js', 'utf8');\n    //修改js\n    var paths = \"\";\n    var ast = babylon.parse(code);\n    Traverse(ast, {\n      enter(path) {\n        if (\n          path.node.type === \"Identifier\" &&\n          path.node.name === \"n\"\n        ) {\n          path.node.name = \"x\";\n        }\n      }\n    });\n    //写入生成新的js并写入文件\n    fs.writeFile('./JsFile0.js',generator(ast).code,function(err){\n        if(err) console.log('写文件操作失败');\n        else console.log('写文件操作成功');\n    });\n```\n```$ JsFile0.js\n    a === n;\n```\n* 1 如果运行成功的话会在终端中输出`写文件操作成功`且JsFile0.js中的n会替换成x。\n* 2 对于node.js当中的模块引入有两种方式`import`和`require`两种用法自行百度，我在这里说一下我用的是第二种方法因为import对于nodejs7.0以及之前的版本并不能识别。\n\n### 3.3 通过java执行node.js\n　　通过java代码直接执行cmd命令-->通过cmd来调用node.js执行js代码，原js打印到终端的信息会打印到控制台\n　　注意事项：\n　　　　1，java代码执行的cmd命令为项目的根目录 “/”为cmd中的下一级目录\n　　　　2，如果执行的js文件用有引用到其他的文件相对路径是相对的cmd执行路径所以最好写成绝对路径如：“C:\\\\a\\\\b.js”\n　　　　3，请耐心往下接着看，代码并非可以直接运行\n\n```\n    import java.io.*;\n\n    public void nodeRunJ() {\n            try {\n                String line = null;\n                String command = \"node ./AstForBabel/SimpleTest.js\";\n                Process p = Runtime.getRuntime().exec(command);\n                BufferedReader stdout = new BufferedReader(new InputStreamReader(\n                        p.getInputStream()));\n                while ((line = stdout.readLine()) != null) {\n                    System.out.println(line);\n                }\n                stdout.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n```\n* 由于编写的js代码用有用到babel模块中的一些函数，所以代码并非可以直接运行需要现在你的java工程中将之前安装的babel模块同样的安装在项目当中。\n* 其实通过测试也可以不用重新安装可以将之前的`babel`目录下的文件直接粘贴到工程当中就可以。如果想要确定是否好使，稳妥起见最好现在项目的目录下打开终端运行一下node命令看是否可以运行\n\n\n## 四， FAQ\n### * 在安装过程中出现错误，无法找到`package.json`\n　　可以先执行`$ npm init`命令然后按照提示回车,回车完成安装生成一个初始化的环境，然后再执行babel的安装\n### * bbb\n### * ccc","source":"_posts/2018/Babel简单Js代码转换.md","raw":"---\ntitle: Babel简单js代码转换\ndate: 2018-08-30 19:17:50\ntop: 9\ntags:\n\tnodejs\n---\n　　近期get一个需求：需要对原始的js代码转换功能进行改进，在原始的通过正则匹配转换前增加一层更加准确的ast(抽象解析树)转换。初期的想法是使用jdk9，acorn和babel都进行测试然后选择最优。然后通过实践后发现jdk9只能做到对js的ast解析无法对ast进行更改以及ast转换为js操作，acorn与babel两者都是基于node.js的模块都可以实现js的转换功能但是相比而言acorn的相关文献太少且不完整，另一方面acorn主要是侧重于对js代码的解析在进行js转换的过程中发现有很多的坑步履艰难，而babel则不一样在js的解析方面是基于acorn有着与acorn几乎相同的解析速度，并且在转换方面有着一套完整的开发体系以及有着一套支持多国语言的[开发文档](https://github.com/jamiebuilds/babel-handbook/blob/master/README.md)学习的效率远高于acorn。\n<!-- more -->\n\n## 一，简介\n### 1.1 ast(抽象语法树):\n　　抽象语法树（abstract syntax tree或者缩写为AST），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。和抽象语法树相对的是具体语法树（concrete syntaxtree），通常称作分析树（parse tree）。一般的，在源代码的翻译和编译过程中，语法分析器创建出分析树。一旦AST被创建出来，在后续的处理过程中，比如语义分析阶段，会添加一些信息。\n　　通过AST可以对源代码进行更为准确的定位以及更换，并且有着正则无法实现的上下文结合，可以对源码进行手术刀级别的修改。\n　　推荐两个在线生成AST工具：[Astexplorer](https://astexplorer.net/)，[Esprima](http://esprima.org/demo/parse.html#)\n### 1.2 nodejs:\n　　Nodejs框架是基于V8的引擎，是目前速度最快的Javascript引擎。chrome浏览器就基于V8，同时打开20-30个网页都很流畅。Nodejs标准的web开发框架Express，可以帮助我们迅速建立web站点，比起PHP的开发效率更高，而且学习曲线更低。\n　　JS是脚本语言，脚本语言需要一个解析器才能运行。对于写在HTML页面里面的JS，浏览器充当了解析器的角色。而对于需要独立运行的JS，NodeJS就是一个解析器可以通过命令直接运行js。\n　　每种解析器就是一个运行环境，不但允许JS定义各种数据结构，进行各种计算，还允许JS使用运行环境提供的内置对象和方法做一些事情。例如运行在浏览器中的JS的用途是操作DOM，浏览器就提供了document之类的内置对象。而运行在NodeJS中的JS的用途是操作磁盘文件或者搭建HTTP服务器，NodeJS就相应提供了fs、http等内置对象。\n　　另外Node.js生态圈也是非常的强大有则很多有些的第三法模块比如本次使用的babel,acorn，Bloger的福音Hexo等\n### 1.3 babel：\n　　Babel 是一个通用的多用途 JavaScript 编译器。通过 Babel 你可以使用（并创建）下一代的 JavaScript，以及下一代的 JavaScript 工具。作为一种语言，JavaScript 在不断发展，新的标准／提案和新的特性层出不穷。 在得到广泛普及之前，Babel 能够让你提前（甚至数年）使用它们。 Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译（transpiling，是一个自造合成词，即转换＋编译。以下也简称为转译）。 例如，Babel 能够将新的 ES2015 箭头函数语法：\n　　`const square = n => n * n;\n　　转译为：\n```\n    const square = function square(n) {\n        return n * n;\n      };\n```\n　　不过 Babel 的用途并不止于此，它支持语法扩展，能支持像 React 所用的 JSX 语法，同时还支持用于静态类型检查的流式语法（Flow Syntax）。更重要的是，Babel 的一切都是简单的插件，谁都可以创建自己的插件，利用 Babel 的全部威力去做任何事情。再进一步，Babel 自身被分解成了数个核心模块，任何人都可以利用它们来创建下一代的 JavaScript 工具。已经有很多人都这样做了，围绕着 Babel 涌现出了非常大规模和多样化的生态系统。\n　　以上描述来自Babel官方github，也就是说Babel可以进行js代码的转换并且拥有这丰富的插件来按照指定规则来转换，最重要的还可以通过自定义插件。(本次主要使用babel的基本语法，插件的编写在后期博客中讲解)\n## 二，安装教程\n### 2.1 nodejs:\n　　从[官网]()上点击对应的版本下载安装包，然后无脑下一步进行安装。\n　　配置环境变量将node.js的安装路径添加到Path当中(为了能够在windos中全局调用node.js命令)\n　　现在就可以通过`node xxx.js`执行js文件了\n### 2.2 babel:\n　　`babel-cli`\n　　Babel 的 CLI 是一种在命令行下使用 Babel 编译文件的简单方法。其安装的方法有两种：全局安装和在项目中安装，官方推荐的是在项目中安装，个人也比较认同这一点。\n　　首先建立一个文件夹比如`babel`可以在node.js安装目录下也可以在其他目录下，建议不在node.js安装目录下，创建后在打开cmd窗口并进入该目录进行下一步操作。\n##### a）全局安装\n　　通过命令`$ npm install --global babel-cli`在babel-cli安装完后就可以通过执行`$ babel SimpleTest.js`来执行我们的第一个文件。不过这只是简单的将js结果输出到控制台\n　　使用`$ babel example.js --out-file compiled.js`或者`$ babel example.js -o compiled.js`可以将结果写入到指定的文件。\n　　如果我们想要把一个目录整个编译成一个新的目录，可以使用 --out-dir 或者 -d`$ babel src --out-dir lib` `$ babel src -d lib`\n　　如果想要卸载全局安装的babel的话可以通过执行`$ npm uninstall --global babel-cli`\n##### b) 在项目中安装\n　　通过命令`$ npm install --save-dev babel-cli`完成安装后你的`package.json`应该如下所示：\n```$ package.json\n    json{\n      \"name\": \"my-project\",\n      \"version\": \"1.0.0\",\n      \"devDependencies\": {\n        \"babel-cli\": \"^6.0.0\"\n      }\n    }\n```\n　　如果我们不想直接从命令行运行 Babel 了，取而代之我们将把运行命令写在 npm scripts 里，这样可以使用 Babel 的本地版本。只需将 `scripts` 字段添加到你的 `package.json` 文件内并且把 babel 命令写成 build 字段。.\n```$ package.json\n      {\n        \"name\": \"my-project\",\n        \"version\": \"1.0.0\",\n    +   \"scripts\": {\n    +     \"build\": \"babel src -d lib\"\n    +   },\n        \"devDependencies\": {\n          \"babel-cli\": \"^6.0.0\"\n        }\n      }\n```\n然后在终端里运行：`npm run build`就可以了\n## 三， 进行js代码转换\n### 3.1 babel的解析引擎\n　　Babel使用的引擎是babylon，babylon并非由babel团队自己开发的，而是fork的acorn项目，不过acorn引擎只提供基本的解析ast的能力。\n　　遍历还需要配套的babel-travesal, 替换节点需要使用babel-types，而这些开发，在Babel的插件体系开发下，变得一体化了。\n### 3.2 使用babel做js的代码转换\n　　进行js代码的转换主要分为三个步骤：js代码解析为AST树，对AST树进行遍历修改，将修改后的AST树转换为新的js代码。\n#### a) js代码解析为AST树\n　　[`babylon`](https://github.com/babel/babylon)<--点一下，打来惊喜\n　　将js源码转换为AST用到的模块叫：babylon，Babylon 是 Babel 的解析器。最初是 从Acorn项目fork出来的。Acorn非常快，易于使用，并且针对非标准特性(以及那些未来的标准特性) 设计了一个基于插件的架构。\n　　运行以下命令进行安装：\n　　`$ npm install --save babylon`\n　　使用的方法如下：\n```\n    const babylon = require('babylon');\n    \n    const code = `function square(n) {\n      return n * n;\n    }`;  \n    console.log(babylon.parse(code));\n```\n　　也可以通过如下的方法传递选项给parse()\n```\n    babylon.parse(code, {\n      sourceType: \"module\", // default: \"script\"\n      plugins: [\"jsx\"] // default: []\n    });\n```\n　　sourceType 可以是 \"module\" 或者 \"script\"，它表示 Babylon 应该用哪种模式来解析。 \"module\" 将会在严格模式下解析并且允许模块定义，\"script\" 则不会。\n　　由于 Babylon 使用了基于插件的架构，因此有一个 plugins 选项可以开关内置的插件。 注意 Babylon 尚未对外部插件开放此 API 接口，不排除未来会开放此API。\n　　要查看完整的插件列表，请点击这个[链接](https://github.com/babel/babylon/blob/master/README.md#plugins)\n#### b) 对AST树进行遍历修改\n　　[`babel-traverse`](https://github.com/babel/babel/tree/master/packages/babel-traverse)<--点一下，打开惊喜\n　　Babel Traverse模块维护了整棵树的状态，并且负责替换、移除和添加节点。\n　　运行以下命令安装：\n　　`$ npm install --save babel-traverse`\n#### c) 将修改后的AST树转换为新的js代码\n　　[`babel-generator`](https://github.com/babel/babel/tree/master/packages/babel-generator)<--点一下,打开惊喜\n　　Babel Generator模块是 Babel 的代码生成器，它读取AST并将其转换为代码和源码映射。\n　　`$ npm install --save babel-generator`\n#### d) 案例代码\n```$ SimpleTest.js\n    //引入fs模块\n    var fs = require('fs');\n    //引入babel模快\n    const babylon = require('babylon');\n    const Traverse = require('babel-traverse').default;\n    const generator = require('babel-generator').default;\n    //读取js文件\n    var code =fs.readFileSync('./JsFile0.js', 'utf8');\n    //修改js\n    var paths = \"\";\n    var ast = babylon.parse(code);\n    Traverse(ast, {\n      enter(path) {\n        if (\n          path.node.type === \"Identifier\" &&\n          path.node.name === \"n\"\n        ) {\n          path.node.name = \"x\";\n        }\n      }\n    });\n    //写入生成新的js并写入文件\n    fs.writeFile('./JsFile0.js',generator(ast).code,function(err){\n        if(err) console.log('写文件操作失败');\n        else console.log('写文件操作成功');\n    });\n```\n```$ JsFile0.js\n    a === n;\n```\n* 1 如果运行成功的话会在终端中输出`写文件操作成功`且JsFile0.js中的n会替换成x。\n* 2 对于node.js当中的模块引入有两种方式`import`和`require`两种用法自行百度，我在这里说一下我用的是第二种方法因为import对于nodejs7.0以及之前的版本并不能识别。\n\n### 3.3 通过java执行node.js\n　　通过java代码直接执行cmd命令-->通过cmd来调用node.js执行js代码，原js打印到终端的信息会打印到控制台\n　　注意事项：\n　　　　1，java代码执行的cmd命令为项目的根目录 “/”为cmd中的下一级目录\n　　　　2，如果执行的js文件用有引用到其他的文件相对路径是相对的cmd执行路径所以最好写成绝对路径如：“C:\\\\a\\\\b.js”\n　　　　3，请耐心往下接着看，代码并非可以直接运行\n\n```\n    import java.io.*;\n\n    public void nodeRunJ() {\n            try {\n                String line = null;\n                String command = \"node ./AstForBabel/SimpleTest.js\";\n                Process p = Runtime.getRuntime().exec(command);\n                BufferedReader stdout = new BufferedReader(new InputStreamReader(\n                        p.getInputStream()));\n                while ((line = stdout.readLine()) != null) {\n                    System.out.println(line);\n                }\n                stdout.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n```\n* 由于编写的js代码用有用到babel模块中的一些函数，所以代码并非可以直接运行需要现在你的java工程中将之前安装的babel模块同样的安装在项目当中。\n* 其实通过测试也可以不用重新安装可以将之前的`babel`目录下的文件直接粘贴到工程当中就可以。如果想要确定是否好使，稳妥起见最好现在项目的目录下打开终端运行一下node命令看是否可以运行\n\n\n## 四， FAQ\n### * 在安装过程中出现错误，无法找到`package.json`\n　　可以先执行`$ npm init`命令然后按照提示回车,回车完成安装生成一个初始化的环境，然后再执行babel的安装\n### * bbb\n### * ccc","slug":"2018/Babel简单Js代码转换","published":1,"updated":"2018-09-13T01:40:15.233Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1b600073wj4rcgwsiy6","content":"<p>　　近期get一个需求：需要对原始的js代码转换功能进行改进，在原始的通过正则匹配转换前增加一层更加准确的ast(抽象解析树)转换。初期的想法是使用jdk9，acorn和babel都进行测试然后选择最优。然后通过实践后发现jdk9只能做到对js的ast解析无法对ast进行更改以及ast转换为js操作，acorn与babel两者都是基于node.js的模块都可以实现js的转换功能但是相比而言acorn的相关文献太少且不完整，另一方面acorn主要是侧重于对js代码的解析在进行js转换的过程中发现有很多的坑步履艰难，而babel则不一样在js的解析方面是基于acorn有着与acorn几乎相同的解析速度，并且在转换方面有着一套完整的开发体系以及有着一套支持多国语言的<a href=\"https://github.com/jamiebuilds/babel-handbook/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">开发文档</a>学习的效率远高于acorn。<br><a id=\"more\"></a></p>\n<h2 id=\"一，简介\"><a href=\"#一，简介\" class=\"headerlink\" title=\"一，简介\"></a>一，简介</h2><h3 id=\"1-1-ast-抽象语法树\"><a href=\"#1-1-ast-抽象语法树\" class=\"headerlink\" title=\"1.1 ast(抽象语法树):\"></a>1.1 ast(抽象语法树):</h3><p>　　抽象语法树（abstract syntax tree或者缩写为AST），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。和抽象语法树相对的是具体语法树（concrete syntaxtree），通常称作分析树（parse tree）。一般的，在源代码的翻译和编译过程中，语法分析器创建出分析树。一旦AST被创建出来，在后续的处理过程中，比如语义分析阶段，会添加一些信息。<br>　　通过AST可以对源代码进行更为准确的定位以及更换，并且有着正则无法实现的上下文结合，可以对源码进行手术刀级别的修改。<br>　　推荐两个在线生成AST工具：<a href=\"https://astexplorer.net/\" target=\"_blank\" rel=\"noopener\">Astexplorer</a>，<a href=\"http://esprima.org/demo/parse.html#\" target=\"_blank\" rel=\"noopener\">Esprima</a></p>\n<h3 id=\"1-2-nodejs\"><a href=\"#1-2-nodejs\" class=\"headerlink\" title=\"1.2 nodejs:\"></a>1.2 nodejs:</h3><p>　　Nodejs框架是基于V8的引擎，是目前速度最快的Javascript引擎。chrome浏览器就基于V8，同时打开20-30个网页都很流畅。Nodejs标准的web开发框架Express，可以帮助我们迅速建立web站点，比起PHP的开发效率更高，而且学习曲线更低。<br>　　JS是脚本语言，脚本语言需要一个解析器才能运行。对于写在HTML页面里面的JS，浏览器充当了解析器的角色。而对于需要独立运行的JS，NodeJS就是一个解析器可以通过命令直接运行js。<br>　　每种解析器就是一个运行环境，不但允许JS定义各种数据结构，进行各种计算，还允许JS使用运行环境提供的内置对象和方法做一些事情。例如运行在浏览器中的JS的用途是操作DOM，浏览器就提供了document之类的内置对象。而运行在NodeJS中的JS的用途是操作磁盘文件或者搭建HTTP服务器，NodeJS就相应提供了fs、http等内置对象。<br>　　另外Node.js生态圈也是非常的强大有则很多有些的第三法模块比如本次使用的babel,acorn，Bloger的福音Hexo等</p>\n<h3 id=\"1-3-babel：\"><a href=\"#1-3-babel：\" class=\"headerlink\" title=\"1.3 babel：\"></a>1.3 babel：</h3><p>　　Babel 是一个通用的多用途 JavaScript 编译器。通过 Babel 你可以使用（并创建）下一代的 JavaScript，以及下一代的 JavaScript 工具。作为一种语言，JavaScript 在不断发展，新的标准／提案和新的特性层出不穷。 在得到广泛普及之前，Babel 能够让你提前（甚至数年）使用它们。 Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译（transpiling，是一个自造合成词，即转换＋编译。以下也简称为转译）。 例如，Babel 能够将新的 ES2015 箭头函数语法：<br>　　`const square = n =&gt; n * n;<br>　　转译为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const square = function square(n) &#123;</span><br><span class=\"line\">    return n * n;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>　　不过 Babel 的用途并不止于此，它支持语法扩展，能支持像 React 所用的 JSX 语法，同时还支持用于静态类型检查的流式语法（Flow Syntax）。更重要的是，Babel 的一切都是简单的插件，谁都可以创建自己的插件，利用 Babel 的全部威力去做任何事情。再进一步，Babel 自身被分解成了数个核心模块，任何人都可以利用它们来创建下一代的 JavaScript 工具。已经有很多人都这样做了，围绕着 Babel 涌现出了非常大规模和多样化的生态系统。<br>　　以上描述来自Babel官方github，也就是说Babel可以进行js代码的转换并且拥有这丰富的插件来按照指定规则来转换，最重要的还可以通过自定义插件。(本次主要使用babel的基本语法，插件的编写在后期博客中讲解)</p>\n<h2 id=\"二，安装教程\"><a href=\"#二，安装教程\" class=\"headerlink\" title=\"二，安装教程\"></a>二，安装教程</h2><h3 id=\"2-1-nodejs\"><a href=\"#2-1-nodejs\" class=\"headerlink\" title=\"2.1 nodejs:\"></a>2.1 nodejs:</h3><p>　　从<a href=\"\">官网</a>上点击对应的版本下载安装包，然后无脑下一步进行安装。<br>　　配置环境变量将node.js的安装路径添加到Path当中(为了能够在windos中全局调用node.js命令)<br>　　现在就可以通过<code>node xxx.js</code>执行js文件了</p>\n<h3 id=\"2-2-babel\"><a href=\"#2-2-babel\" class=\"headerlink\" title=\"2.2 babel:\"></a>2.2 babel:</h3><p>　　<code>babel-cli</code><br>　　Babel 的 CLI 是一种在命令行下使用 Babel 编译文件的简单方法。其安装的方法有两种：全局安装和在项目中安装，官方推荐的是在项目中安装，个人也比较认同这一点。<br>　　首先建立一个文件夹比如<code>babel</code>可以在node.js安装目录下也可以在其他目录下，建议不在node.js安装目录下，创建后在打开cmd窗口并进入该目录进行下一步操作。</p>\n<h5 id=\"a）全局安装\"><a href=\"#a）全局安装\" class=\"headerlink\" title=\"a）全局安装\"></a>a）全局安装</h5><p>　　通过命令<code>$ npm install --global babel-cli</code>在babel-cli安装完后就可以通过执行<code>$ babel SimpleTest.js</code>来执行我们的第一个文件。不过这只是简单的将js结果输出到控制台<br>　　使用<code>$ babel example.js --out-file compiled.js</code>或者<code>$ babel example.js -o compiled.js</code>可以将结果写入到指定的文件。<br>　　如果我们想要把一个目录整个编译成一个新的目录，可以使用 –out-dir 或者 -d<code>$ babel src --out-dir lib</code> <code>$ babel src -d lib</code><br>　　如果想要卸载全局安装的babel的话可以通过执行<code>$ npm uninstall --global babel-cli</code></p>\n<h5 id=\"b-在项目中安装\"><a href=\"#b-在项目中安装\" class=\"headerlink\" title=\"b) 在项目中安装\"></a>b) 在项目中安装</h5><p>　　通过命令<code>$ npm install --save-dev babel-cli</code>完成安装后你的<code>package.json</code>应该如下所示：<br><figure class=\"highlight plain\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;my-project&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;babel-cli&quot;: &quot;^6.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　如果我们不想直接从命令行运行 Babel 了，取而代之我们将把运行命令写在 npm scripts 里，这样可以使用 Babel 的本地版本。只需将 <code>scripts</code> 字段添加到你的 <code>package.json</code> 文件内并且把 babel 命令写成 build 字段。.<br><figure class=\"highlight plain\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;my-project&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class=\"line\">+   &quot;scripts&quot;: &#123;</span><br><span class=\"line\">+     &quot;build&quot;: &quot;babel src -d lib&quot;</span><br><span class=\"line\">+   &#125;,</span><br><span class=\"line\">    &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">      &quot;babel-cli&quot;: &quot;^6.0.0&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后在终端里运行：<code>npm run build</code>就可以了</p>\n<h2 id=\"三，-进行js代码转换\"><a href=\"#三，-进行js代码转换\" class=\"headerlink\" title=\"三， 进行js代码转换\"></a>三， 进行js代码转换</h2><h3 id=\"3-1-babel的解析引擎\"><a href=\"#3-1-babel的解析引擎\" class=\"headerlink\" title=\"3.1 babel的解析引擎\"></a>3.1 babel的解析引擎</h3><p>　　Babel使用的引擎是babylon，babylon并非由babel团队自己开发的，而是fork的acorn项目，不过acorn引擎只提供基本的解析ast的能力。<br>　　遍历还需要配套的babel-travesal, 替换节点需要使用babel-types，而这些开发，在Babel的插件体系开发下，变得一体化了。</p>\n<h3 id=\"3-2-使用babel做js的代码转换\"><a href=\"#3-2-使用babel做js的代码转换\" class=\"headerlink\" title=\"3.2 使用babel做js的代码转换\"></a>3.2 使用babel做js的代码转换</h3><p>　　进行js代码的转换主要分为三个步骤：js代码解析为AST树，对AST树进行遍历修改，将修改后的AST树转换为新的js代码。</p>\n<h4 id=\"a-js代码解析为AST树\"><a href=\"#a-js代码解析为AST树\" class=\"headerlink\" title=\"a) js代码解析为AST树\"></a>a) js代码解析为AST树</h4><p>　　<a href=\"https://github.com/babel/babylon\" target=\"_blank\" rel=\"noopener\"><code>babylon</code></a>&lt;–点一下，打来惊喜<br>　　将js源码转换为AST用到的模块叫：babylon，Babylon 是 Babel 的解析器。最初是 从Acorn项目fork出来的。Acorn非常快，易于使用，并且针对非标准特性(以及那些未来的标准特性) 设计了一个基于插件的架构。<br>　　运行以下命令进行安装：<br>　　<code>$ npm install --save babylon</code><br>　　使用的方法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">const code = `function square(n) &#123;</span><br><span class=\"line\">  return n * n;</span><br><span class=\"line\">&#125;`;  </span><br><span class=\"line\">console.log(babylon.parse(code));</span><br></pre></td></tr></table></figure></p>\n<p>　　也可以通过如下的方法传递选项给parse()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babylon.parse(code, &#123;</span><br><span class=\"line\">  sourceType: &quot;module&quot;, // default: &quot;script&quot;</span><br><span class=\"line\">  plugins: [&quot;jsx&quot;] // default: []</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>　　sourceType 可以是 “module” 或者 “script”，它表示 Babylon 应该用哪种模式来解析。 “module” 将会在严格模式下解析并且允许模块定义，”script” 则不会。<br>　　由于 Babylon 使用了基于插件的架构，因此有一个 plugins 选项可以开关内置的插件。 注意 Babylon 尚未对外部插件开放此 API 接口，不排除未来会开放此API。<br>　　要查看完整的插件列表，请点击这个<a href=\"https://github.com/babel/babylon/blob/master/README.md#plugins\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<h4 id=\"b-对AST树进行遍历修改\"><a href=\"#b-对AST树进行遍历修改\" class=\"headerlink\" title=\"b) 对AST树进行遍历修改\"></a>b) 对AST树进行遍历修改</h4><p>　　<a href=\"https://github.com/babel/babel/tree/master/packages/babel-traverse\" target=\"_blank\" rel=\"noopener\"><code>babel-traverse</code></a>&lt;–点一下，打开惊喜<br>　　Babel Traverse模块维护了整棵树的状态，并且负责替换、移除和添加节点。<br>　　运行以下命令安装：<br>　　<code>$ npm install --save babel-traverse</code></p>\n<h4 id=\"c-将修改后的AST树转换为新的js代码\"><a href=\"#c-将修改后的AST树转换为新的js代码\" class=\"headerlink\" title=\"c) 将修改后的AST树转换为新的js代码\"></a>c) 将修改后的AST树转换为新的js代码</h4><p>　　<a href=\"https://github.com/babel/babel/tree/master/packages/babel-generator\" target=\"_blank\" rel=\"noopener\"><code>babel-generator</code></a>&lt;–点一下,打开惊喜<br>　　Babel Generator模块是 Babel 的代码生成器，它读取AST并将其转换为代码和源码映射。<br>　　<code>$ npm install --save babel-generator</code></p>\n<h4 id=\"d-案例代码\"><a href=\"#d-案例代码\" class=\"headerlink\" title=\"d) 案例代码\"></a>d) 案例代码</h4><figure class=\"highlight plain\"><figcaption><span>SimpleTest.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入fs模块</span><br><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">//引入babel模快</span><br><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\">const Traverse = require(&apos;babel-traverse&apos;).default;</span><br><span class=\"line\">const generator = require(&apos;babel-generator&apos;).default;</span><br><span class=\"line\">//读取js文件</span><br><span class=\"line\">var code =fs.readFileSync(&apos;./JsFile0.js&apos;, &apos;utf8&apos;);</span><br><span class=\"line\">//修改js</span><br><span class=\"line\">var paths = &quot;&quot;;</span><br><span class=\"line\">var ast = babylon.parse(code);</span><br><span class=\"line\">Traverse(ast, &#123;</span><br><span class=\"line\">  enter(path) &#123;</span><br><span class=\"line\">    if (</span><br><span class=\"line\">      path.node.type === &quot;Identifier&quot; &amp;&amp;</span><br><span class=\"line\">      path.node.name === &quot;n&quot;</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      path.node.name = &quot;x&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//写入生成新的js并写入文件</span><br><span class=\"line\">fs.writeFile(&apos;./JsFile0.js&apos;,generator(ast).code,function(err)&#123;</span><br><span class=\"line\">    if(err) console.log(&apos;写文件操作失败&apos;);</span><br><span class=\"line\">    else console.log(&apos;写文件操作成功&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>JsFile0.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a === n;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>1 如果运行成功的话会在终端中输出<code>写文件操作成功</code>且JsFile0.js中的n会替换成x。</li>\n<li>2 对于node.js当中的模块引入有两种方式<code>import</code>和<code>require</code>两种用法自行百度，我在这里说一下我用的是第二种方法因为import对于nodejs7.0以及之前的版本并不能识别。</li>\n</ul>\n<h3 id=\"3-3-通过java执行node-js\"><a href=\"#3-3-通过java执行node-js\" class=\"headerlink\" title=\"3.3 通过java执行node.js\"></a>3.3 通过java执行node.js</h3><p>　　通过java代码直接执行cmd命令–&gt;通过cmd来调用node.js执行js代码，原js打印到终端的信息会打印到控制台<br>　　注意事项：<br>　　　　1，java代码执行的cmd命令为项目的根目录 “/”为cmd中的下一级目录<br>　　　　2，如果执行的js文件用有引用到其他的文件相对路径是相对的cmd执行路径所以最好写成绝对路径如：“C:\\a\\b.js”<br>　　　　3，请耐心往下接着看，代码并非可以直接运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\">public void nodeRunJ() &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String line = null;</span><br><span class=\"line\">            String command = &quot;node ./AstForBabel/SimpleTest.js&quot;;</span><br><span class=\"line\">            Process p = Runtime.getRuntime().exec(command);</span><br><span class=\"line\">            BufferedReader stdout = new BufferedReader(new InputStreamReader(</span><br><span class=\"line\">                    p.getInputStream()));</span><br><span class=\"line\">            while ((line = stdout.readLine()) != null) &#123;</span><br><span class=\"line\">                System.out.println(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stdout.close();</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>由于编写的js代码用有用到babel模块中的一些函数，所以代码并非可以直接运行需要现在你的java工程中将之前安装的babel模块同样的安装在项目当中。</li>\n<li>其实通过测试也可以不用重新安装可以将之前的<code>babel</code>目录下的文件直接粘贴到工程当中就可以。如果想要确定是否好使，稳妥起见最好现在项目的目录下打开终端运行一下node命令看是否可以运行</li>\n</ul>\n<h2 id=\"四，-FAQ\"><a href=\"#四，-FAQ\" class=\"headerlink\" title=\"四， FAQ\"></a>四， FAQ</h2><h3 id=\"在安装过程中出现错误，无法找到package-json\"><a href=\"#在安装过程中出现错误，无法找到package-json\" class=\"headerlink\" title=\"* 在安装过程中出现错误，无法找到package.json\"></a>* 在安装过程中出现错误，无法找到<code>package.json</code></h3><p>　　可以先执行<code>$ npm init</code>命令然后按照提示回车,回车完成安装生成一个初始化的环境，然后再执行babel的安装</p>\n<h3 id=\"bbb\"><a href=\"#bbb\" class=\"headerlink\" title=\"* bbb\"></a>* bbb</h3><h3 id=\"ccc\"><a href=\"#ccc\" class=\"headerlink\" title=\"* ccc\"></a>* ccc</h3>","site":{"data":{}},"excerpt":"<p>　　近期get一个需求：需要对原始的js代码转换功能进行改进，在原始的通过正则匹配转换前增加一层更加准确的ast(抽象解析树)转换。初期的想法是使用jdk9，acorn和babel都进行测试然后选择最优。然后通过实践后发现jdk9只能做到对js的ast解析无法对ast进行更改以及ast转换为js操作，acorn与babel两者都是基于node.js的模块都可以实现js的转换功能但是相比而言acorn的相关文献太少且不完整，另一方面acorn主要是侧重于对js代码的解析在进行js转换的过程中发现有很多的坑步履艰难，而babel则不一样在js的解析方面是基于acorn有着与acorn几乎相同的解析速度，并且在转换方面有着一套完整的开发体系以及有着一套支持多国语言的<a href=\"https://github.com/jamiebuilds/babel-handbook/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">开发文档</a>学习的效率远高于acorn。<br>","more":"</p>\n<h2 id=\"一，简介\"><a href=\"#一，简介\" class=\"headerlink\" title=\"一，简介\"></a>一，简介</h2><h3 id=\"1-1-ast-抽象语法树\"><a href=\"#1-1-ast-抽象语法树\" class=\"headerlink\" title=\"1.1 ast(抽象语法树):\"></a>1.1 ast(抽象语法树):</h3><p>　　抽象语法树（abstract syntax tree或者缩写为AST），或者语法树（syntax tree），是源代码的抽象语法结构的树状表现形式，这里特指编程语言的源代码。和抽象语法树相对的是具体语法树（concrete syntaxtree），通常称作分析树（parse tree）。一般的，在源代码的翻译和编译过程中，语法分析器创建出分析树。一旦AST被创建出来，在后续的处理过程中，比如语义分析阶段，会添加一些信息。<br>　　通过AST可以对源代码进行更为准确的定位以及更换，并且有着正则无法实现的上下文结合，可以对源码进行手术刀级别的修改。<br>　　推荐两个在线生成AST工具：<a href=\"https://astexplorer.net/\" target=\"_blank\" rel=\"noopener\">Astexplorer</a>，<a href=\"http://esprima.org/demo/parse.html#\" target=\"_blank\" rel=\"noopener\">Esprima</a></p>\n<h3 id=\"1-2-nodejs\"><a href=\"#1-2-nodejs\" class=\"headerlink\" title=\"1.2 nodejs:\"></a>1.2 nodejs:</h3><p>　　Nodejs框架是基于V8的引擎，是目前速度最快的Javascript引擎。chrome浏览器就基于V8，同时打开20-30个网页都很流畅。Nodejs标准的web开发框架Express，可以帮助我们迅速建立web站点，比起PHP的开发效率更高，而且学习曲线更低。<br>　　JS是脚本语言，脚本语言需要一个解析器才能运行。对于写在HTML页面里面的JS，浏览器充当了解析器的角色。而对于需要独立运行的JS，NodeJS就是一个解析器可以通过命令直接运行js。<br>　　每种解析器就是一个运行环境，不但允许JS定义各种数据结构，进行各种计算，还允许JS使用运行环境提供的内置对象和方法做一些事情。例如运行在浏览器中的JS的用途是操作DOM，浏览器就提供了document之类的内置对象。而运行在NodeJS中的JS的用途是操作磁盘文件或者搭建HTTP服务器，NodeJS就相应提供了fs、http等内置对象。<br>　　另外Node.js生态圈也是非常的强大有则很多有些的第三法模块比如本次使用的babel,acorn，Bloger的福音Hexo等</p>\n<h3 id=\"1-3-babel：\"><a href=\"#1-3-babel：\" class=\"headerlink\" title=\"1.3 babel：\"></a>1.3 babel：</h3><p>　　Babel 是一个通用的多用途 JavaScript 编译器。通过 Babel 你可以使用（并创建）下一代的 JavaScript，以及下一代的 JavaScript 工具。作为一种语言，JavaScript 在不断发展，新的标准／提案和新的特性层出不穷。 在得到广泛普及之前，Babel 能够让你提前（甚至数年）使用它们。 Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译（transpiling，是一个自造合成词，即转换＋编译。以下也简称为转译）。 例如，Babel 能够将新的 ES2015 箭头函数语法：<br>　　`const square = n =&gt; n * n;<br>　　转译为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const square = function square(n) &#123;</span><br><span class=\"line\">    return n * n;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>　　不过 Babel 的用途并不止于此，它支持语法扩展，能支持像 React 所用的 JSX 语法，同时还支持用于静态类型检查的流式语法（Flow Syntax）。更重要的是，Babel 的一切都是简单的插件，谁都可以创建自己的插件，利用 Babel 的全部威力去做任何事情。再进一步，Babel 自身被分解成了数个核心模块，任何人都可以利用它们来创建下一代的 JavaScript 工具。已经有很多人都这样做了，围绕着 Babel 涌现出了非常大规模和多样化的生态系统。<br>　　以上描述来自Babel官方github，也就是说Babel可以进行js代码的转换并且拥有这丰富的插件来按照指定规则来转换，最重要的还可以通过自定义插件。(本次主要使用babel的基本语法，插件的编写在后期博客中讲解)</p>\n<h2 id=\"二，安装教程\"><a href=\"#二，安装教程\" class=\"headerlink\" title=\"二，安装教程\"></a>二，安装教程</h2><h3 id=\"2-1-nodejs\"><a href=\"#2-1-nodejs\" class=\"headerlink\" title=\"2.1 nodejs:\"></a>2.1 nodejs:</h3><p>　　从<a href=\"\">官网</a>上点击对应的版本下载安装包，然后无脑下一步进行安装。<br>　　配置环境变量将node.js的安装路径添加到Path当中(为了能够在windos中全局调用node.js命令)<br>　　现在就可以通过<code>node xxx.js</code>执行js文件了</p>\n<h3 id=\"2-2-babel\"><a href=\"#2-2-babel\" class=\"headerlink\" title=\"2.2 babel:\"></a>2.2 babel:</h3><p>　　<code>babel-cli</code><br>　　Babel 的 CLI 是一种在命令行下使用 Babel 编译文件的简单方法。其安装的方法有两种：全局安装和在项目中安装，官方推荐的是在项目中安装，个人也比较认同这一点。<br>　　首先建立一个文件夹比如<code>babel</code>可以在node.js安装目录下也可以在其他目录下，建议不在node.js安装目录下，创建后在打开cmd窗口并进入该目录进行下一步操作。</p>\n<h5 id=\"a）全局安装\"><a href=\"#a）全局安装\" class=\"headerlink\" title=\"a）全局安装\"></a>a）全局安装</h5><p>　　通过命令<code>$ npm install --global babel-cli</code>在babel-cli安装完后就可以通过执行<code>$ babel SimpleTest.js</code>来执行我们的第一个文件。不过这只是简单的将js结果输出到控制台<br>　　使用<code>$ babel example.js --out-file compiled.js</code>或者<code>$ babel example.js -o compiled.js</code>可以将结果写入到指定的文件。<br>　　如果我们想要把一个目录整个编译成一个新的目录，可以使用 –out-dir 或者 -d<code>$ babel src --out-dir lib</code> <code>$ babel src -d lib</code><br>　　如果想要卸载全局安装的babel的话可以通过执行<code>$ npm uninstall --global babel-cli</code></p>\n<h5 id=\"b-在项目中安装\"><a href=\"#b-在项目中安装\" class=\"headerlink\" title=\"b) 在项目中安装\"></a>b) 在项目中安装</h5><p>　　通过命令<code>$ npm install --save-dev babel-cli</code>完成安装后你的<code>package.json</code>应该如下所示：<br><figure class=\"highlight plain\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;my-project&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;babel-cli&quot;: &quot;^6.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　如果我们不想直接从命令行运行 Babel 了，取而代之我们将把运行命令写在 npm scripts 里，这样可以使用 Babel 的本地版本。只需将 <code>scripts</code> 字段添加到你的 <code>package.json</code> 文件内并且把 babel 命令写成 build 字段。.<br><figure class=\"highlight plain\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;my-project&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class=\"line\">+   &quot;scripts&quot;: &#123;</span><br><span class=\"line\">+     &quot;build&quot;: &quot;babel src -d lib&quot;</span><br><span class=\"line\">+   &#125;,</span><br><span class=\"line\">    &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">      &quot;babel-cli&quot;: &quot;^6.0.0&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后在终端里运行：<code>npm run build</code>就可以了</p>\n<h2 id=\"三，-进行js代码转换\"><a href=\"#三，-进行js代码转换\" class=\"headerlink\" title=\"三， 进行js代码转换\"></a>三， 进行js代码转换</h2><h3 id=\"3-1-babel的解析引擎\"><a href=\"#3-1-babel的解析引擎\" class=\"headerlink\" title=\"3.1 babel的解析引擎\"></a>3.1 babel的解析引擎</h3><p>　　Babel使用的引擎是babylon，babylon并非由babel团队自己开发的，而是fork的acorn项目，不过acorn引擎只提供基本的解析ast的能力。<br>　　遍历还需要配套的babel-travesal, 替换节点需要使用babel-types，而这些开发，在Babel的插件体系开发下，变得一体化了。</p>\n<h3 id=\"3-2-使用babel做js的代码转换\"><a href=\"#3-2-使用babel做js的代码转换\" class=\"headerlink\" title=\"3.2 使用babel做js的代码转换\"></a>3.2 使用babel做js的代码转换</h3><p>　　进行js代码的转换主要分为三个步骤：js代码解析为AST树，对AST树进行遍历修改，将修改后的AST树转换为新的js代码。</p>\n<h4 id=\"a-js代码解析为AST树\"><a href=\"#a-js代码解析为AST树\" class=\"headerlink\" title=\"a) js代码解析为AST树\"></a>a) js代码解析为AST树</h4><p>　　<a href=\"https://github.com/babel/babylon\" target=\"_blank\" rel=\"noopener\"><code>babylon</code></a>&lt;–点一下，打来惊喜<br>　　将js源码转换为AST用到的模块叫：babylon，Babylon 是 Babel 的解析器。最初是 从Acorn项目fork出来的。Acorn非常快，易于使用，并且针对非标准特性(以及那些未来的标准特性) 设计了一个基于插件的架构。<br>　　运行以下命令进行安装：<br>　　<code>$ npm install --save babylon</code><br>　　使用的方法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">const code = `function square(n) &#123;</span><br><span class=\"line\">  return n * n;</span><br><span class=\"line\">&#125;`;  </span><br><span class=\"line\">console.log(babylon.parse(code));</span><br></pre></td></tr></table></figure></p>\n<p>　　也可以通过如下的方法传递选项给parse()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">babylon.parse(code, &#123;</span><br><span class=\"line\">  sourceType: &quot;module&quot;, // default: &quot;script&quot;</span><br><span class=\"line\">  plugins: [&quot;jsx&quot;] // default: []</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>　　sourceType 可以是 “module” 或者 “script”，它表示 Babylon 应该用哪种模式来解析。 “module” 将会在严格模式下解析并且允许模块定义，”script” 则不会。<br>　　由于 Babylon 使用了基于插件的架构，因此有一个 plugins 选项可以开关内置的插件。 注意 Babylon 尚未对外部插件开放此 API 接口，不排除未来会开放此API。<br>　　要查看完整的插件列表，请点击这个<a href=\"https://github.com/babel/babylon/blob/master/README.md#plugins\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<h4 id=\"b-对AST树进行遍历修改\"><a href=\"#b-对AST树进行遍历修改\" class=\"headerlink\" title=\"b) 对AST树进行遍历修改\"></a>b) 对AST树进行遍历修改</h4><p>　　<a href=\"https://github.com/babel/babel/tree/master/packages/babel-traverse\" target=\"_blank\" rel=\"noopener\"><code>babel-traverse</code></a>&lt;–点一下，打开惊喜<br>　　Babel Traverse模块维护了整棵树的状态，并且负责替换、移除和添加节点。<br>　　运行以下命令安装：<br>　　<code>$ npm install --save babel-traverse</code></p>\n<h4 id=\"c-将修改后的AST树转换为新的js代码\"><a href=\"#c-将修改后的AST树转换为新的js代码\" class=\"headerlink\" title=\"c) 将修改后的AST树转换为新的js代码\"></a>c) 将修改后的AST树转换为新的js代码</h4><p>　　<a href=\"https://github.com/babel/babel/tree/master/packages/babel-generator\" target=\"_blank\" rel=\"noopener\"><code>babel-generator</code></a>&lt;–点一下,打开惊喜<br>　　Babel Generator模块是 Babel 的代码生成器，它读取AST并将其转换为代码和源码映射。<br>　　<code>$ npm install --save babel-generator</code></p>\n<h4 id=\"d-案例代码\"><a href=\"#d-案例代码\" class=\"headerlink\" title=\"d) 案例代码\"></a>d) 案例代码</h4><figure class=\"highlight plain\"><figcaption><span>SimpleTest.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入fs模块</span><br><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">//引入babel模快</span><br><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\">const Traverse = require(&apos;babel-traverse&apos;).default;</span><br><span class=\"line\">const generator = require(&apos;babel-generator&apos;).default;</span><br><span class=\"line\">//读取js文件</span><br><span class=\"line\">var code =fs.readFileSync(&apos;./JsFile0.js&apos;, &apos;utf8&apos;);</span><br><span class=\"line\">//修改js</span><br><span class=\"line\">var paths = &quot;&quot;;</span><br><span class=\"line\">var ast = babylon.parse(code);</span><br><span class=\"line\">Traverse(ast, &#123;</span><br><span class=\"line\">  enter(path) &#123;</span><br><span class=\"line\">    if (</span><br><span class=\"line\">      path.node.type === &quot;Identifier&quot; &amp;&amp;</span><br><span class=\"line\">      path.node.name === &quot;n&quot;</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      path.node.name = &quot;x&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//写入生成新的js并写入文件</span><br><span class=\"line\">fs.writeFile(&apos;./JsFile0.js&apos;,generator(ast).code,function(err)&#123;</span><br><span class=\"line\">    if(err) console.log(&apos;写文件操作失败&apos;);</span><br><span class=\"line\">    else console.log(&apos;写文件操作成功&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>JsFile0.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a === n;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>1 如果运行成功的话会在终端中输出<code>写文件操作成功</code>且JsFile0.js中的n会替换成x。</li>\n<li>2 对于node.js当中的模块引入有两种方式<code>import</code>和<code>require</code>两种用法自行百度，我在这里说一下我用的是第二种方法因为import对于nodejs7.0以及之前的版本并不能识别。</li>\n</ul>\n<h3 id=\"3-3-通过java执行node-js\"><a href=\"#3-3-通过java执行node-js\" class=\"headerlink\" title=\"3.3 通过java执行node.js\"></a>3.3 通过java执行node.js</h3><p>　　通过java代码直接执行cmd命令–&gt;通过cmd来调用node.js执行js代码，原js打印到终端的信息会打印到控制台<br>　　注意事项：<br>　　　　1，java代码执行的cmd命令为项目的根目录 “/”为cmd中的下一级目录<br>　　　　2，如果执行的js文件用有引用到其他的文件相对路径是相对的cmd执行路径所以最好写成绝对路径如：“C:\\a\\b.js”<br>　　　　3，请耐心往下接着看，代码并非可以直接运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\">public void nodeRunJ() &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String line = null;</span><br><span class=\"line\">            String command = &quot;node ./AstForBabel/SimpleTest.js&quot;;</span><br><span class=\"line\">            Process p = Runtime.getRuntime().exec(command);</span><br><span class=\"line\">            BufferedReader stdout = new BufferedReader(new InputStreamReader(</span><br><span class=\"line\">                    p.getInputStream()));</span><br><span class=\"line\">            while ((line = stdout.readLine()) != null) &#123;</span><br><span class=\"line\">                System.out.println(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stdout.close();</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>由于编写的js代码用有用到babel模块中的一些函数，所以代码并非可以直接运行需要现在你的java工程中将之前安装的babel模块同样的安装在项目当中。</li>\n<li>其实通过测试也可以不用重新安装可以将之前的<code>babel</code>目录下的文件直接粘贴到工程当中就可以。如果想要确定是否好使，稳妥起见最好现在项目的目录下打开终端运行一下node命令看是否可以运行</li>\n</ul>\n<h2 id=\"四，-FAQ\"><a href=\"#四，-FAQ\" class=\"headerlink\" title=\"四， FAQ\"></a>四， FAQ</h2><h3 id=\"在安装过程中出现错误，无法找到package-json\"><a href=\"#在安装过程中出现错误，无法找到package-json\" class=\"headerlink\" title=\"* 在安装过程中出现错误，无法找到package.json\"></a>* 在安装过程中出现错误，无法找到<code>package.json</code></h3><p>　　可以先执行<code>$ npm init</code>命令然后按照提示回车,回车完成安装生成一个初始化的环境，然后再执行babel的安装</p>\n<h3 id=\"bbb\"><a href=\"#bbb\" class=\"headerlink\" title=\"* bbb\"></a>* bbb</h3><h3 id=\"ccc\"><a href=\"#ccc\" class=\"headerlink\" title=\"* ccc\"></a>* ccc</h3>"},{"title":"JavaScrpt解析","date":"2018-08-28T08:09:46.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->\n#使用Java解析javascript(jdk1.9+)\n链接一:java10解析Javascript相关官方api\n`https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html`\n\n#使用 Acorn 来解析 JavaScript\n链接一：Acorn github仓库\n`https://github.com/acornjs/acorn`\n链接二：掘金上前辈使用感悟\n`https://juejin.im/post/582425402e958a129926fcb4`\n\n#使用babel解析JavaScript\n链接一：Babel Handbook\n`https://github.com/jamiebuilds/Babel Handbookbabel-handbook`\n链接二：Babel github仓库\n`https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md`","source":"_posts/2018/JavaScrpt解析ast.md","raw":"---\ntitle: JavaScrpt解析\ndate: 2018-08-28 16:09:46\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->\n#使用Java解析javascript(jdk1.9+)\n链接一:java10解析Javascript相关官方api\n`https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html`\n\n#使用 Acorn 来解析 JavaScript\n链接一：Acorn github仓库\n`https://github.com/acornjs/acorn`\n链接二：掘金上前辈使用感悟\n`https://juejin.im/post/582425402e958a129926fcb4`\n\n#使用babel解析JavaScript\n链接一：Babel Handbook\n`https://github.com/jamiebuilds/Babel Handbookbabel-handbook`\n链接二：Babel github仓库\n`https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md`","slug":"2018/JavaScrpt解析ast","published":1,"updated":"2018-08-28T09:01:51.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bb00083wj4vamdd5bd","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n<p>#使用Java解析javascript(jdk1.9+)<br>链接一:java10解析Javascript相关官方api<br><code>https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html</code></p>\n<p>#使用 Acorn 来解析 JavaScript<br>链接一：Acorn github仓库<br><code>https://github.com/acornjs/acorn</code><br>链接二：掘金上前辈使用感悟<br><code>https://juejin.im/post/582425402e958a129926fcb4</code></p>\n<p>#使用babel解析JavaScript<br>链接一：Babel Handbook<br><code>https://github.com/jamiebuilds/Babel Handbookbabel-handbook</code><br>链接二：Babel github仓库<br><code>https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md</code></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>\n<p>#使用Java解析javascript(jdk1.9+)<br>链接一:java10解析Javascript相关官方api<br><code>https://docs.oracle.com/javase/10/docs/api/index.html?overview-summary.html</code></p>\n<p>#使用 Acorn 来解析 JavaScript<br>链接一：Acorn github仓库<br><code>https://github.com/acornjs/acorn</code><br>链接二：掘金上前辈使用感悟<br><code>https://juejin.im/post/582425402e958a129926fcb4</code></p>\n<p>#使用babel解析JavaScript<br>链接一：Babel Handbook<br><code>https://github.com/jamiebuilds/Babel Handbookbabel-handbook</code><br>链接二：Babel github仓库<br><code>https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md</code></p>"},{"title":"Spring基础","date":"2018-09-06T08:48:45.000Z","top":9,"_content":"\n　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。\n　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。\n<!-- more -->\n# 概述\n　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。\n　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。\n　　Spring框架本身有四大基本原则：\n* `使用POJO进行轻量级和最小侵入式开发`\n* `通过依赖注入和基于接口编程实现松耦合`\n* `通过AOP和默认习惯进行声明式编程`\n* `使用AOP和模版减小模版式代码`\n\n## Spring的模块\n　　spring是模块化的，这就意味着你可以只使用你需要的spring模块。spring的模块如下所示：\n![Spring模块](/img/Spring模块.png)\n### 核心容器\n* Sning-Core：核心工具类，Sping其他模块大最使用SingCcre;\n* Spring-Beans：Spring 定义Bean的支持;\n* Spring-Context：运行时Spring容器;\n* Spring-Context-Support：Spring容器对第三方包的集成支持;\n* Spring Expression：使用表达式语言在运行时查询和操作对象;\n\n### AOP\n* Spring-AOP：基于代理的AOP支持;\n* Spring-Aspects：基于AspeetU的AOP支持。\n\n### 消息\n* Spring Messaging：对消息架构和协议的支持。\n\n### 数据访问/集成\n* Spring-Web：提供基础的Web集成的功能，在Web项目中提供Spring的容器;\n* Spring Webmve：提供基于Servlet的Spring MVC;\n* Spring WebSocket：提供WebSocket功能;\n* Spring Webmve Porlet：提供Portlet环境支持。\n\n### Web\n* SpingJDBC：提供以IDBC访问数据库的支持;\n* Sping-TX：提供编程式和声明式的事务支持;\n* Spring-ORM:提供对对象关系映射技术的支持;\n* SpingOXM:提供对对象人xml映射技术的支持;Snig-M提供对IMS的支持。\n\n\n# 基础配置\n　　spring进行配置的方式本有三种：配置文件方式，注解方式和java类方式，但是由于现在较为常用的是使用springBoot进行开发提倡零配置约定大于配置默认不在有web.xml等配置文件，所以不再考虑配置文件方式。\n## 注解方式\n### 配置包扫描\n### Bean的实例化方法\n#### 构造方法\n#### 作用域\n#### 声明周期\n### Bean的属性注入\n#### 构造器注入\n#### Setter方法注入\n#### 集合属性注入\n## java类方式\n\n# IOC\n　　我们经常说的控制翻转(Inversion of Control-I0C)和依赖注入(dependency injecton-D)在Spring环境下是等同的概念，控制翻转是通过依赖注入实现的。所谓依赖注入指的是容基负责创建对象和维护对象的依赖关系，而不是通过对象本身负责自己的创建和解决自己的依赖。\n　　依赖注入的主要目的是为了解耦，体现了种“组合”的理念。如果你希望你的类具各某项功能的时候，是继承自一个具有此功能的父类好呢?还是组合另外一个具有这个功能的类好呢?答案是不言而喻的，继承一个父类，子类将与父类耦合，组合另外一个类则使耦合度大大降低。\n　　Spring IoC容器(ApplicationContext)负责创建Bcan，并通过容器将功能类Bean注入到你需要的Bean中。Spring 提供使用xml、注解、Java 配置、groovy 配置实现Bean的创建和注入。\n　　`声明Bean的注解:`\n* @Component组件，没有明确的角色,\n* @Service在业务逻辑层( service层)使用,\n* @Repository在数据访问层(dao层)使用,\n* @Conroller在展现层(MVC- Spring MVC)使用,\n\n　　`注入Bean的注解,一般情况下通用`\n* @Autowired: Spring 提供的注解,\n* @Inject: JSR-330提供的注解,\n* @Resource: JSR 250提供的注解,\n\n　　@Autowired. @Inject. @Resurce可注解在se方法上或者属性上，建议注解在属性上，优点是代码更少、层次更清晰。\n\n\n# AOP\n　　AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。\n　　AOP是一个概念，并没有设定具体语言的实现，它能克服那些只有单继承特性语言的缺点，spring2.0之后整合AspectJ第三方AOP技术。AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。\n## 主要功能\n　　日志记录，性能统计，安全控制，事务处理，异常处理等等\n## 主要意图\n　　将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码。\n## AOP底层实现\n　　AOP分为静态AOP和动态AOP。静态AOP是指AspectJ实现的AOP，他是将切面代码直接编译到Java类文件中。动态AOP是指将切面代码进行动态织入实现的AOP。Spring的AOP为动态AOP，实现的技术为： JDK提供的动态代理技术 和 CGLIB(动态字节码增强技术)。\n### JDK动态代理和CGLIB动态代理\n* jdk的动态代理只可以为接口去完成操作，而cglib它可以为没有实现接口的类去做代理，也可以为实现接口的类去做代理。\n* 如果目标对象，有接口，优先使用jdk动态代理；如果目标对象，无接口，使用cglib动态代理。\n\n## AOP开发\n\n# FAQ\n### IOC和DI区别?\n　　IOC 控制反转，是指对象实例化权利由spring容器来管理\n　　DI 依赖注入 在spring创建对象的过程中，对象所依赖的属性通过配置注入对象中，在Spring环境下是等同的概念。\n### ApplicationContext与BeanFactory关系\n![](/img/ApplicationContext与BeanFactory关系.png)\n　　ApplicationContext它是扩展BeanFactory接口。BeanFactory它采取延迟加载的方案，只有真正在getBean时才会实例化Bean,在开发中我们一般使用的是ApplicationContext,真正使用的是其实现类AppliCationContext它会在配置文件加载时，就会初始化Bean,并且ApplicationContext它提供不同的应用层的Context实现。例如在web开发中可以使用WebApplicationContext\n　　`FileSystemXmlAppliCationContext 根据文件路径获取`\n　　`ClassPathXmlApplicationContext  根据类路径获取`\n\n\n\n","source":"_posts/2018/Spring基础.md","raw":"---\ntitle: Spring基础\ndate: 2018-09-06 16:48:45\ntop: 9\ntags:\n spring\n---\n\n　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。\n　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。\n<!-- more -->\n# 概述\n　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。\n　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。\n　　Spring框架本身有四大基本原则：\n* `使用POJO进行轻量级和最小侵入式开发`\n* `通过依赖注入和基于接口编程实现松耦合`\n* `通过AOP和默认习惯进行声明式编程`\n* `使用AOP和模版减小模版式代码`\n\n## Spring的模块\n　　spring是模块化的，这就意味着你可以只使用你需要的spring模块。spring的模块如下所示：\n![Spring模块](/img/Spring模块.png)\n### 核心容器\n* Sning-Core：核心工具类，Sping其他模块大最使用SingCcre;\n* Spring-Beans：Spring 定义Bean的支持;\n* Spring-Context：运行时Spring容器;\n* Spring-Context-Support：Spring容器对第三方包的集成支持;\n* Spring Expression：使用表达式语言在运行时查询和操作对象;\n\n### AOP\n* Spring-AOP：基于代理的AOP支持;\n* Spring-Aspects：基于AspeetU的AOP支持。\n\n### 消息\n* Spring Messaging：对消息架构和协议的支持。\n\n### 数据访问/集成\n* Spring-Web：提供基础的Web集成的功能，在Web项目中提供Spring的容器;\n* Spring Webmve：提供基于Servlet的Spring MVC;\n* Spring WebSocket：提供WebSocket功能;\n* Spring Webmve Porlet：提供Portlet环境支持。\n\n### Web\n* SpingJDBC：提供以IDBC访问数据库的支持;\n* Sping-TX：提供编程式和声明式的事务支持;\n* Spring-ORM:提供对对象关系映射技术的支持;\n* SpingOXM:提供对对象人xml映射技术的支持;Snig-M提供对IMS的支持。\n\n\n# 基础配置\n　　spring进行配置的方式本有三种：配置文件方式，注解方式和java类方式，但是由于现在较为常用的是使用springBoot进行开发提倡零配置约定大于配置默认不在有web.xml等配置文件，所以不再考虑配置文件方式。\n## 注解方式\n### 配置包扫描\n### Bean的实例化方法\n#### 构造方法\n#### 作用域\n#### 声明周期\n### Bean的属性注入\n#### 构造器注入\n#### Setter方法注入\n#### 集合属性注入\n## java类方式\n\n# IOC\n　　我们经常说的控制翻转(Inversion of Control-I0C)和依赖注入(dependency injecton-D)在Spring环境下是等同的概念，控制翻转是通过依赖注入实现的。所谓依赖注入指的是容基负责创建对象和维护对象的依赖关系，而不是通过对象本身负责自己的创建和解决自己的依赖。\n　　依赖注入的主要目的是为了解耦，体现了种“组合”的理念。如果你希望你的类具各某项功能的时候，是继承自一个具有此功能的父类好呢?还是组合另外一个具有这个功能的类好呢?答案是不言而喻的，继承一个父类，子类将与父类耦合，组合另外一个类则使耦合度大大降低。\n　　Spring IoC容器(ApplicationContext)负责创建Bcan，并通过容器将功能类Bean注入到你需要的Bean中。Spring 提供使用xml、注解、Java 配置、groovy 配置实现Bean的创建和注入。\n　　`声明Bean的注解:`\n* @Component组件，没有明确的角色,\n* @Service在业务逻辑层( service层)使用,\n* @Repository在数据访问层(dao层)使用,\n* @Conroller在展现层(MVC- Spring MVC)使用,\n\n　　`注入Bean的注解,一般情况下通用`\n* @Autowired: Spring 提供的注解,\n* @Inject: JSR-330提供的注解,\n* @Resource: JSR 250提供的注解,\n\n　　@Autowired. @Inject. @Resurce可注解在se方法上或者属性上，建议注解在属性上，优点是代码更少、层次更清晰。\n\n\n# AOP\n　　AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。\n　　AOP是一个概念，并没有设定具体语言的实现，它能克服那些只有单继承特性语言的缺点，spring2.0之后整合AspectJ第三方AOP技术。AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。\n## 主要功能\n　　日志记录，性能统计，安全控制，事务处理，异常处理等等\n## 主要意图\n　　将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码。\n## AOP底层实现\n　　AOP分为静态AOP和动态AOP。静态AOP是指AspectJ实现的AOP，他是将切面代码直接编译到Java类文件中。动态AOP是指将切面代码进行动态织入实现的AOP。Spring的AOP为动态AOP，实现的技术为： JDK提供的动态代理技术 和 CGLIB(动态字节码增强技术)。\n### JDK动态代理和CGLIB动态代理\n* jdk的动态代理只可以为接口去完成操作，而cglib它可以为没有实现接口的类去做代理，也可以为实现接口的类去做代理。\n* 如果目标对象，有接口，优先使用jdk动态代理；如果目标对象，无接口，使用cglib动态代理。\n\n## AOP开发\n\n# FAQ\n### IOC和DI区别?\n　　IOC 控制反转，是指对象实例化权利由spring容器来管理\n　　DI 依赖注入 在spring创建对象的过程中，对象所依赖的属性通过配置注入对象中，在Spring环境下是等同的概念。\n### ApplicationContext与BeanFactory关系\n![](/img/ApplicationContext与BeanFactory关系.png)\n　　ApplicationContext它是扩展BeanFactory接口。BeanFactory它采取延迟加载的方案，只有真正在getBean时才会实例化Bean,在开发中我们一般使用的是ApplicationContext,真正使用的是其实现类AppliCationContext它会在配置文件加载时，就会初始化Bean,并且ApplicationContext它提供不同的应用层的Context实现。例如在web开发中可以使用WebApplicationContext\n　　`FileSystemXmlAppliCationContext 根据文件路径获取`\n　　`ClassPathXmlApplicationContext  根据类路径获取`\n\n\n\n","slug":"2018/Spring基础","published":1,"updated":"2018-09-13T01:43:35.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bf000a3wj4htw9ff8r","content":"<p>　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。<br>　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。<br><a id=\"more\"></a></p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。<br>　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。<br>　　Spring框架本身有四大基本原则：</p>\n<ul>\n<li><code>使用POJO进行轻量级和最小侵入式开发</code></li>\n<li><code>通过依赖注入和基于接口编程实现松耦合</code></li>\n<li><code>通过AOP和默认习惯进行声明式编程</code></li>\n<li><code>使用AOP和模版减小模版式代码</code></li>\n</ul>\n<h2 id=\"Spring的模块\"><a href=\"#Spring的模块\" class=\"headerlink\" title=\"Spring的模块\"></a>Spring的模块</h2><p>　　spring是模块化的，这就意味着你可以只使用你需要的spring模块。spring的模块如下所示：<br><img src=\"/img/Spring模块.png\" alt=\"Spring模块\"></p>\n<h3 id=\"核心容器\"><a href=\"#核心容器\" class=\"headerlink\" title=\"核心容器\"></a>核心容器</h3><ul>\n<li>Sning-Core：核心工具类，Sping其他模块大最使用SingCcre;</li>\n<li>Spring-Beans：Spring 定义Bean的支持;</li>\n<li>Spring-Context：运行时Spring容器;</li>\n<li>Spring-Context-Support：Spring容器对第三方包的集成支持;</li>\n<li>Spring Expression：使用表达式语言在运行时查询和操作对象;</li>\n</ul>\n<h3 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h3><ul>\n<li>Spring-AOP：基于代理的AOP支持;</li>\n<li>Spring-Aspects：基于AspeetU的AOP支持。</li>\n</ul>\n<h3 id=\"消息\"><a href=\"#消息\" class=\"headerlink\" title=\"消息\"></a>消息</h3><ul>\n<li>Spring Messaging：对消息架构和协议的支持。</li>\n</ul>\n<h3 id=\"数据访问-集成\"><a href=\"#数据访问-集成\" class=\"headerlink\" title=\"数据访问/集成\"></a>数据访问/集成</h3><ul>\n<li>Spring-Web：提供基础的Web集成的功能，在Web项目中提供Spring的容器;</li>\n<li>Spring Webmve：提供基于Servlet的Spring MVC;</li>\n<li>Spring WebSocket：提供WebSocket功能;</li>\n<li>Spring Webmve Porlet：提供Portlet环境支持。</li>\n</ul>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><ul>\n<li>SpingJDBC：提供以IDBC访问数据库的支持;</li>\n<li>Sping-TX：提供编程式和声明式的事务支持;</li>\n<li>Spring-ORM:提供对对象关系映射技术的支持;</li>\n<li>SpingOXM:提供对对象人xml映射技术的支持;Snig-M提供对IMS的支持。</li>\n</ul>\n<h1 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h1><p>　　spring进行配置的方式本有三种：配置文件方式，注解方式和java类方式，但是由于现在较为常用的是使用springBoot进行开发提倡零配置约定大于配置默认不在有web.xml等配置文件，所以不再考虑配置文件方式。</p>\n<h2 id=\"注解方式\"><a href=\"#注解方式\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h2><h3 id=\"配置包扫描\"><a href=\"#配置包扫描\" class=\"headerlink\" title=\"配置包扫描\"></a>配置包扫描</h3><h3 id=\"Bean的实例化方法\"><a href=\"#Bean的实例化方法\" class=\"headerlink\" title=\"Bean的实例化方法\"></a>Bean的实例化方法</h3><h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><h4 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h4><h4 id=\"声明周期\"><a href=\"#声明周期\" class=\"headerlink\" title=\"声明周期\"></a>声明周期</h4><h3 id=\"Bean的属性注入\"><a href=\"#Bean的属性注入\" class=\"headerlink\" title=\"Bean的属性注入\"></a>Bean的属性注入</h3><h4 id=\"构造器注入\"><a href=\"#构造器注入\" class=\"headerlink\" title=\"构造器注入\"></a>构造器注入</h4><h4 id=\"Setter方法注入\"><a href=\"#Setter方法注入\" class=\"headerlink\" title=\"Setter方法注入\"></a>Setter方法注入</h4><h4 id=\"集合属性注入\"><a href=\"#集合属性注入\" class=\"headerlink\" title=\"集合属性注入\"></a>集合属性注入</h4><h2 id=\"java类方式\"><a href=\"#java类方式\" class=\"headerlink\" title=\"java类方式\"></a>java类方式</h2><h1 id=\"IOC\"><a href=\"#IOC\" class=\"headerlink\" title=\"IOC\"></a>IOC</h1><p>　　我们经常说的控制翻转(Inversion of Control-I0C)和依赖注入(dependency injecton-D)在Spring环境下是等同的概念，控制翻转是通过依赖注入实现的。所谓依赖注入指的是容基负责创建对象和维护对象的依赖关系，而不是通过对象本身负责自己的创建和解决自己的依赖。<br>　　依赖注入的主要目的是为了解耦，体现了种“组合”的理念。如果你希望你的类具各某项功能的时候，是继承自一个具有此功能的父类好呢?还是组合另外一个具有这个功能的类好呢?答案是不言而喻的，继承一个父类，子类将与父类耦合，组合另外一个类则使耦合度大大降低。<br>　　Spring IoC容器(ApplicationContext)负责创建Bcan，并通过容器将功能类Bean注入到你需要的Bean中。Spring 提供使用xml、注解、Java 配置、groovy 配置实现Bean的创建和注入。<br>　　<code>声明Bean的注解:</code></p>\n<ul>\n<li>@Component组件，没有明确的角色,</li>\n<li>@Service在业务逻辑层( service层)使用,</li>\n<li>@Repository在数据访问层(dao层)使用,</li>\n<li>@Conroller在展现层(MVC- Spring MVC)使用,</li>\n</ul>\n<p>　　<code>注入Bean的注解,一般情况下通用</code></p>\n<ul>\n<li>@Autowired: Spring 提供的注解,</li>\n<li>@Inject: JSR-330提供的注解,</li>\n<li>@Resource: JSR 250提供的注解,</li>\n</ul>\n<p>　　@Autowired. @Inject. @Resurce可注解在se方法上或者属性上，建议注解在属性上，优点是代码更少、层次更清晰。</p>\n<h1 id=\"AOP-1\"><a href=\"#AOP-1\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>　　AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。<br>　　AOP是一个概念，并没有设定具体语言的实现，它能克服那些只有单继承特性语言的缺点，spring2.0之后整合AspectJ第三方AOP技术。AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。</p>\n<h2 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h2><p>　　日志记录，性能统计，安全控制，事务处理，异常处理等等</p>\n<h2 id=\"主要意图\"><a href=\"#主要意图\" class=\"headerlink\" title=\"主要意图\"></a>主要意图</h2><p>　　将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码。</p>\n<h2 id=\"AOP底层实现\"><a href=\"#AOP底层实现\" class=\"headerlink\" title=\"AOP底层实现\"></a>AOP底层实现</h2><p>　　AOP分为静态AOP和动态AOP。静态AOP是指AspectJ实现的AOP，他是将切面代码直接编译到Java类文件中。动态AOP是指将切面代码进行动态织入实现的AOP。Spring的AOP为动态AOP，实现的技术为： JDK提供的动态代理技术 和 CGLIB(动态字节码增强技术)。</p>\n<h3 id=\"JDK动态代理和CGLIB动态代理\"><a href=\"#JDK动态代理和CGLIB动态代理\" class=\"headerlink\" title=\"JDK动态代理和CGLIB动态代理\"></a>JDK动态代理和CGLIB动态代理</h3><ul>\n<li>jdk的动态代理只可以为接口去完成操作，而cglib它可以为没有实现接口的类去做代理，也可以为实现接口的类去做代理。</li>\n<li>如果目标对象，有接口，优先使用jdk动态代理；如果目标对象，无接口，使用cglib动态代理。</li>\n</ul>\n<h2 id=\"AOP开发\"><a href=\"#AOP开发\" class=\"headerlink\" title=\"AOP开发\"></a>AOP开发</h2><h1 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h1><h3 id=\"IOC和DI区别\"><a href=\"#IOC和DI区别\" class=\"headerlink\" title=\"IOC和DI区别?\"></a>IOC和DI区别?</h3><p>　　IOC 控制反转，是指对象实例化权利由spring容器来管理<br>　　DI 依赖注入 在spring创建对象的过程中，对象所依赖的属性通过配置注入对象中，在Spring环境下是等同的概念。</p>\n<h3 id=\"ApplicationContext与BeanFactory关系\"><a href=\"#ApplicationContext与BeanFactory关系\" class=\"headerlink\" title=\"ApplicationContext与BeanFactory关系\"></a>ApplicationContext与BeanFactory关系</h3><p><img src=\"/img/ApplicationContext与BeanFactory关系.png\" alt=\"\"><br>　　ApplicationContext它是扩展BeanFactory接口。BeanFactory它采取延迟加载的方案，只有真正在getBean时才会实例化Bean,在开发中我们一般使用的是ApplicationContext,真正使用的是其实现类AppliCationContext它会在配置文件加载时，就会初始化Bean,并且ApplicationContext它提供不同的应用层的Context实现。例如在web开发中可以使用WebApplicationContext<br>　　<code>FileSystemXmlAppliCationContext 根据文件路径获取</code><br>　　<code>ClassPathXmlApplicationContext  根据类路径获取</code></p>\n","site":{"data":{}},"excerpt":"<p>　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。<br>　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。<br>","more":"</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>　　Spring框架是一个 轻量级的企业级开发的站式解决方案。 所谓解决方案就是可以基于Spring解决Java EE开发的所有问题。Spring框架主要提供了IoC 容器、AOP、数据访问、Web开发、消息、测试等相关技术的支持。<br>　　Spring使用简单的POJO (Plain Old Java Object,即无任何限制的普通Java对象)来进行企业级开发。每个被Spring管理的Java对象都称之为Bean;而Spring提供了一个IoC容器用来初始化对象，解决对象间的依赖管理和对象的使用。<br>　　Spring框架本身有四大基本原则：</p>\n<ul>\n<li><code>使用POJO进行轻量级和最小侵入式开发</code></li>\n<li><code>通过依赖注入和基于接口编程实现松耦合</code></li>\n<li><code>通过AOP和默认习惯进行声明式编程</code></li>\n<li><code>使用AOP和模版减小模版式代码</code></li>\n</ul>\n<h2 id=\"Spring的模块\"><a href=\"#Spring的模块\" class=\"headerlink\" title=\"Spring的模块\"></a>Spring的模块</h2><p>　　spring是模块化的，这就意味着你可以只使用你需要的spring模块。spring的模块如下所示：<br><img src=\"/img/Spring模块.png\" alt=\"Spring模块\"></p>\n<h3 id=\"核心容器\"><a href=\"#核心容器\" class=\"headerlink\" title=\"核心容器\"></a>核心容器</h3><ul>\n<li>Sning-Core：核心工具类，Sping其他模块大最使用SingCcre;</li>\n<li>Spring-Beans：Spring 定义Bean的支持;</li>\n<li>Spring-Context：运行时Spring容器;</li>\n<li>Spring-Context-Support：Spring容器对第三方包的集成支持;</li>\n<li>Spring Expression：使用表达式语言在运行时查询和操作对象;</li>\n</ul>\n<h3 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h3><ul>\n<li>Spring-AOP：基于代理的AOP支持;</li>\n<li>Spring-Aspects：基于AspeetU的AOP支持。</li>\n</ul>\n<h3 id=\"消息\"><a href=\"#消息\" class=\"headerlink\" title=\"消息\"></a>消息</h3><ul>\n<li>Spring Messaging：对消息架构和协议的支持。</li>\n</ul>\n<h3 id=\"数据访问-集成\"><a href=\"#数据访问-集成\" class=\"headerlink\" title=\"数据访问/集成\"></a>数据访问/集成</h3><ul>\n<li>Spring-Web：提供基础的Web集成的功能，在Web项目中提供Spring的容器;</li>\n<li>Spring Webmve：提供基于Servlet的Spring MVC;</li>\n<li>Spring WebSocket：提供WebSocket功能;</li>\n<li>Spring Webmve Porlet：提供Portlet环境支持。</li>\n</ul>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><ul>\n<li>SpingJDBC：提供以IDBC访问数据库的支持;</li>\n<li>Sping-TX：提供编程式和声明式的事务支持;</li>\n<li>Spring-ORM:提供对对象关系映射技术的支持;</li>\n<li>SpingOXM:提供对对象人xml映射技术的支持;Snig-M提供对IMS的支持。</li>\n</ul>\n<h1 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h1><p>　　spring进行配置的方式本有三种：配置文件方式，注解方式和java类方式，但是由于现在较为常用的是使用springBoot进行开发提倡零配置约定大于配置默认不在有web.xml等配置文件，所以不再考虑配置文件方式。</p>\n<h2 id=\"注解方式\"><a href=\"#注解方式\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h2><h3 id=\"配置包扫描\"><a href=\"#配置包扫描\" class=\"headerlink\" title=\"配置包扫描\"></a>配置包扫描</h3><h3 id=\"Bean的实例化方法\"><a href=\"#Bean的实例化方法\" class=\"headerlink\" title=\"Bean的实例化方法\"></a>Bean的实例化方法</h3><h4 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h4><h4 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h4><h4 id=\"声明周期\"><a href=\"#声明周期\" class=\"headerlink\" title=\"声明周期\"></a>声明周期</h4><h3 id=\"Bean的属性注入\"><a href=\"#Bean的属性注入\" class=\"headerlink\" title=\"Bean的属性注入\"></a>Bean的属性注入</h3><h4 id=\"构造器注入\"><a href=\"#构造器注入\" class=\"headerlink\" title=\"构造器注入\"></a>构造器注入</h4><h4 id=\"Setter方法注入\"><a href=\"#Setter方法注入\" class=\"headerlink\" title=\"Setter方法注入\"></a>Setter方法注入</h4><h4 id=\"集合属性注入\"><a href=\"#集合属性注入\" class=\"headerlink\" title=\"集合属性注入\"></a>集合属性注入</h4><h2 id=\"java类方式\"><a href=\"#java类方式\" class=\"headerlink\" title=\"java类方式\"></a>java类方式</h2><h1 id=\"IOC\"><a href=\"#IOC\" class=\"headerlink\" title=\"IOC\"></a>IOC</h1><p>　　我们经常说的控制翻转(Inversion of Control-I0C)和依赖注入(dependency injecton-D)在Spring环境下是等同的概念，控制翻转是通过依赖注入实现的。所谓依赖注入指的是容基负责创建对象和维护对象的依赖关系，而不是通过对象本身负责自己的创建和解决自己的依赖。<br>　　依赖注入的主要目的是为了解耦，体现了种“组合”的理念。如果你希望你的类具各某项功能的时候，是继承自一个具有此功能的父类好呢?还是组合另外一个具有这个功能的类好呢?答案是不言而喻的，继承一个父类，子类将与父类耦合，组合另外一个类则使耦合度大大降低。<br>　　Spring IoC容器(ApplicationContext)负责创建Bcan，并通过容器将功能类Bean注入到你需要的Bean中。Spring 提供使用xml、注解、Java 配置、groovy 配置实现Bean的创建和注入。<br>　　<code>声明Bean的注解:</code></p>\n<ul>\n<li>@Component组件，没有明确的角色,</li>\n<li>@Service在业务逻辑层( service层)使用,</li>\n<li>@Repository在数据访问层(dao层)使用,</li>\n<li>@Conroller在展现层(MVC- Spring MVC)使用,</li>\n</ul>\n<p>　　<code>注入Bean的注解,一般情况下通用</code></p>\n<ul>\n<li>@Autowired: Spring 提供的注解,</li>\n<li>@Inject: JSR-330提供的注解,</li>\n<li>@Resource: JSR 250提供的注解,</li>\n</ul>\n<p>　　@Autowired. @Inject. @Resurce可注解在se方法上或者属性上，建议注解在属性上，优点是代码更少、层次更清晰。</p>\n<h1 id=\"AOP-1\"><a href=\"#AOP-1\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>　　AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。<br>　　AOP是一个概念，并没有设定具体语言的实现，它能克服那些只有单继承特性语言的缺点，spring2.0之后整合AspectJ第三方AOP技术。AspectJ是一个面向切面的框架，它扩展了Java语言。AspectJ定义了AOP语法所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。</p>\n<h2 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h2><p>　　日志记录，性能统计，安全控制，事务处理，异常处理等等</p>\n<h2 id=\"主要意图\"><a href=\"#主要意图\" class=\"headerlink\" title=\"主要意图\"></a>主要意图</h2><p>　　将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码。</p>\n<h2 id=\"AOP底层实现\"><a href=\"#AOP底层实现\" class=\"headerlink\" title=\"AOP底层实现\"></a>AOP底层实现</h2><p>　　AOP分为静态AOP和动态AOP。静态AOP是指AspectJ实现的AOP，他是将切面代码直接编译到Java类文件中。动态AOP是指将切面代码进行动态织入实现的AOP。Spring的AOP为动态AOP，实现的技术为： JDK提供的动态代理技术 和 CGLIB(动态字节码增强技术)。</p>\n<h3 id=\"JDK动态代理和CGLIB动态代理\"><a href=\"#JDK动态代理和CGLIB动态代理\" class=\"headerlink\" title=\"JDK动态代理和CGLIB动态代理\"></a>JDK动态代理和CGLIB动态代理</h3><ul>\n<li>jdk的动态代理只可以为接口去完成操作，而cglib它可以为没有实现接口的类去做代理，也可以为实现接口的类去做代理。</li>\n<li>如果目标对象，有接口，优先使用jdk动态代理；如果目标对象，无接口，使用cglib动态代理。</li>\n</ul>\n<h2 id=\"AOP开发\"><a href=\"#AOP开发\" class=\"headerlink\" title=\"AOP开发\"></a>AOP开发</h2><h1 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h1><h3 id=\"IOC和DI区别\"><a href=\"#IOC和DI区别\" class=\"headerlink\" title=\"IOC和DI区别?\"></a>IOC和DI区别?</h3><p>　　IOC 控制反转，是指对象实例化权利由spring容器来管理<br>　　DI 依赖注入 在spring创建对象的过程中，对象所依赖的属性通过配置注入对象中，在Spring环境下是等同的概念。</p>\n<h3 id=\"ApplicationContext与BeanFactory关系\"><a href=\"#ApplicationContext与BeanFactory关系\" class=\"headerlink\" title=\"ApplicationContext与BeanFactory关系\"></a>ApplicationContext与BeanFactory关系</h3><p><img src=\"/img/ApplicationContext与BeanFactory关系.png\" alt=\"\"><br>　　ApplicationContext它是扩展BeanFactory接口。BeanFactory它采取延迟加载的方案，只有真正在getBean时才会实例化Bean,在开发中我们一般使用的是ApplicationContext,真正使用的是其实现类AppliCationContext它会在配置文件加载时，就会初始化Bean,并且ApplicationContext它提供不同的应用层的Context实现。例如在web开发中可以使用WebApplicationContext<br>　　<code>FileSystemXmlAppliCationContext 根据文件路径获取</code><br>　　<code>ClassPathXmlApplicationContext  根据类路径获取</code></p>"},{"title":"Spring高级话题(二);","date":"2018-09-06T08:49:21.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->\n# spring事务管理\n　　spring事务有四个优点：\n* 提供一致的对于不同的事务管理的API\n* 支持声明式事务管理(重点)\n* 编程事务管理(在开发中应用比较少)\n* 优秀的整合与Spring的数据访问\n## 事务管理的API\n### 事务的传播机制\n## 声明式事物\n### 开启声明式事务\nspring开启声明式事务：\n在application中\nspringBoot开启声明式事务：\n，首先使用注解 `@EnableTransactionManagement`开启事务支持后，然后在访问数据库的Service方法上添加注解`@Transactional`便可。\n# SpringAOP编程\n# Spring jdbc Template","source":"_posts/2018/Spring高级话题.md","raw":"---\ntitle: Spring高级话题(二);\ndate: 2018-09-06 16:49:21\ntags:\n\tspring\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->\n# spring事务管理\n　　spring事务有四个优点：\n* 提供一致的对于不同的事务管理的API\n* 支持声明式事务管理(重点)\n* 编程事务管理(在开发中应用比较少)\n* 优秀的整合与Spring的数据访问\n## 事务管理的API\n### 事务的传播机制\n## 声明式事物\n### 开启声明式事务\nspring开启声明式事务：\n在application中\nspringBoot开启声明式事务：\n，首先使用注解 `@EnableTransactionManagement`开启事务支持后，然后在访问数据库的Service方法上添加注解`@Transactional`便可。\n# SpringAOP编程\n# Spring jdbc Template","slug":"2018/Spring高级话题","published":1,"updated":"2018-09-06T13:04:40.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bh000b3wj4x0b5m2tc","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n<h1 id=\"spring事务管理\"><a href=\"#spring事务管理\" class=\"headerlink\" title=\"spring事务管理\"></a>spring事务管理</h1><p>　　spring事务有四个优点：</p>\n<ul>\n<li>提供一致的对于不同的事务管理的API</li>\n<li>支持声明式事务管理(重点)</li>\n<li>编程事务管理(在开发中应用比较少)</li>\n<li>优秀的整合与Spring的数据访问<h2 id=\"事务管理的API\"><a href=\"#事务管理的API\" class=\"headerlink\" title=\"事务管理的API\"></a>事务管理的API</h2><h3 id=\"事务的传播机制\"><a href=\"#事务的传播机制\" class=\"headerlink\" title=\"事务的传播机制\"></a>事务的传播机制</h3><h2 id=\"声明式事物\"><a href=\"#声明式事物\" class=\"headerlink\" title=\"声明式事物\"></a>声明式事物</h2><h3 id=\"开启声明式事务\"><a href=\"#开启声明式事务\" class=\"headerlink\" title=\"开启声明式事务\"></a>开启声明式事务</h3>spring开启声明式事务：<br>在application中<br>springBoot开启声明式事务：<br>，首先使用注解 <code>@EnableTransactionManagement</code>开启事务支持后，然后在访问数据库的Service方法上添加注解<code>@Transactional</code>便可。<h1 id=\"SpringAOP编程\"><a href=\"#SpringAOP编程\" class=\"headerlink\" title=\"SpringAOP编程\"></a>SpringAOP编程</h1><h1 id=\"Spring-jdbc-Template\"><a href=\"#Spring-jdbc-Template\" class=\"headerlink\" title=\"Spring jdbc Template\"></a>Spring jdbc Template</h1></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>\n<h1 id=\"spring事务管理\"><a href=\"#spring事务管理\" class=\"headerlink\" title=\"spring事务管理\"></a>spring事务管理</h1><p>　　spring事务有四个优点：</p>\n<ul>\n<li>提供一致的对于不同的事务管理的API</li>\n<li>支持声明式事务管理(重点)</li>\n<li>编程事务管理(在开发中应用比较少)</li>\n<li>优秀的整合与Spring的数据访问<h2 id=\"事务管理的API\"><a href=\"#事务管理的API\" class=\"headerlink\" title=\"事务管理的API\"></a>事务管理的API</h2><h3 id=\"事务的传播机制\"><a href=\"#事务的传播机制\" class=\"headerlink\" title=\"事务的传播机制\"></a>事务的传播机制</h3><h2 id=\"声明式事物\"><a href=\"#声明式事物\" class=\"headerlink\" title=\"声明式事物\"></a>声明式事物</h2><h3 id=\"开启声明式事务\"><a href=\"#开启声明式事务\" class=\"headerlink\" title=\"开启声明式事务\"></a>开启声明式事务</h3>spring开启声明式事务：<br>在application中<br>springBoot开启声明式事务：<br>，首先使用注解 <code>@EnableTransactionManagement</code>开启事务支持后，然后在访问数据库的Service方法上添加注解<code>@Transactional</code>便可。<h1 id=\"SpringAOP编程\"><a href=\"#SpringAOP编程\" class=\"headerlink\" title=\"SpringAOP编程\"></a>SpringAOP编程</h1><h1 id=\"Spring-jdbc-Template\"><a href=\"#Spring-jdbc-Template\" class=\"headerlink\" title=\"Spring jdbc Template\"></a>Spring jdbc Template</h1></li>\n</ul>"},{"title":"ThreadLocal的使用","date":"2018-08-20T09:19:43.000Z","top":5,"_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->\n\n# 一、 ThreadLocal(线程局部变量)\n## 1.1 ThreadLocal API\n　　ThreadLocal类只有三个方法：\n```\n    void set(T value)：保存值；\n    T get()：获取值；\n    void remove()：移除值;\n```\n## 1.2 ThreadLocal的内部是Map\n　　ThreadLocal内部其实是个Map来保存数据。虽然在使用ThreadLocal时只给出了值，没有给出键，其实它内部使用了当前线程做为键。\n\n```\n    class MyThreadLocal<T> {\n        private Map<Thread,T> map = new HashMap<Thread,T>();\n        public void set(T value) {\n            map.put(Thread.currentThread(), value);\n        }\n\n        public void remove() {\n            map.remove(Thread.currentThread());\n        }\n\n        public T get() {\n            return map.get(Thread.currentThread());\n        }\n    }\n```\n\n# 二、 Service事务\n##  2.1 DAO中的事务\n　　在DAO中处理事务真是“小菜一碟”。\n```\n    public void xxx() {\n        Connection con = null;\n        try {\n            con = JdbcUtils.getConnection();\n            con.setAutoCommitted(false);\n            QueryRunner qr = new QueryRunner();\n            String sql = …;\n            Object[] params = …;\n            qr.update(con, sql, params);\n            sql = …;\n            Object[] params = …;\n            qr.update(con, sql, params);\n            con.commit();\n        } catch(Exception e) {\n            try {\n                if(con != null) {con.rollback();}\n            } catch(Exception e) {}\n            } finally {\n                try {\n                con.close();\n                } catch(Exception e) {}\n            }\n        }\n    }\n```\n## 2.2 Service才是处理事务的地方\n　　我们要清楚一件事，DAO中不是处理事务的地方，因为DAO中的每个方法都是对数据库的一次操作，而Service中的方法才是对应一个业务逻辑。也就是说我们需要在Service中的一方法中调用DAO的多个方法，而这些方法应该在一起事务中。\n　　怎么才能让DAO的多个方法使用相同的Connection呢？方法不能再自己来获得Connection，而是由外界传递进去。\n```\n    public void daoMethod1(Connection con, …) {\n    }\n    public void daoMethod2(Connection con, …) {\n    }\n```\n　　在Service中调用DAO的多个方法时，传递相同的Connection就可以了。\n```\n\tpublic class XXXService() {\n\t\tprivate XXXDao dao = new XXXDao();\n\t\tpublic void serviceMethod() {\n\t\tConnection con = null;\n\t\ttry {\n\t\t\tcon = JdbcUtils.getConnection();\n\t\t\tcon.setAutoCommitted(false);\n\t\t\tdao.daoMethod1(con, …);\n\t\t\tdao.doaMethod2(con, …);\n\t\t\tcom.commint();\n\t\t\t} catch(Exception e) {\n\t\t\t\ttry {\n\t\t\t\t\tcon.rollback();\n\t\t\t\t} catch(Exception e) {}\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tcon.close();\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t}\n\t}\n```\n　　但是，在Service中不应该出现Connection，它应该只在DAO中出现，因为它是JDBC的东西，JDBC的东西是用来连接数据库的，连接数据库是DAO的事儿！！！但是，事务是Service的事儿，不能放到DAO中！！！\n\n## 2.3 修改JdbcUtils\n　　我们把对事务的开启和关闭放到JdbcUtils中，在Service中调用JdbcUtils的方法来完成事务的处理，但在Service中就不会再出现Connection这一“禁忌”了。\nDAO中的方法不用再让Service来传递Connection了。DAO会主动从JdbcUtils中获取Connection对象，这样，JdbcUtils成为了DAO和Service的中介！\n我们在JdbcUtils中添加beginTransaction()和rollbackTransaction()，以及commitTransaction()方法。这样在Service中的代码如下：\n### SERVICE:\n```\n    public class XXXService() {\n       private XXXDao dao = new XXXDao();\n       public void serviceMethod() {\n           try {\n              JdbcUtils.beginTransaction();\n              dao.daoMethod1(…);\n              dao.daoMethod2(…);\n              JdbcUtils.commitTransaction();\n            } catch(Exception e) {\n               JdbcUtils.rollbackTransaction();\n            }\n        }\n    }\n```\n### DAO:\n```\n    public void daoMethod1(…) {\n      Connection con = JdbcUtils.getConnection();\n    }\n    public void daoMethod2(…) {\n      Connection con = JdbcUtils.getConnection();\n    }\n```\n　　在Service中调用了JdbcUtils.beginTransaction()方法时，JdbcUtils要做准备好一个已经调用了setAutoCommitted(false)方法的Connection对象，因为在Service中调用JdbcUtils.beginTransaction()之后，马上就会调用DAO的方法，而在DAO方法中会调用JdbcUtils.getConnection()方法。这说明JdbcUtils要在getConnection()方法中返回刚刚准备好的，已经设置了手动提交的Connection对象。\n　　在JdbcUtils中创建一个Connection con属性，当它为null时，说明没有事务！当它不为null时，表示开启了事务。\n在没有开启事务时，可以调用“开启事务”方法；在开启事务后，可以调用“提交事务”和“回滚事务”方法；\n　　getConnection()方法会在con不为null时返回con，再con为null时，从连接池中返回连接。\n#### beginTransaction()\n　　判断con是否为null，如果不为null，就抛出异常！\n　　如果con为null，那么从连接池中获取一个Connection对象，赋值给con！然后设置它为“手动提交”。\n\n#### getConnection()\n　　判断con是否为null，如果为null说明没有事务，那么从连接池获取一个连接返回；\n　　如果不为null，说明已经开始了事务，那么返回con属性返回。这说明在con不为null时，无论调用多少次getConnection()方法，返回的都是同个Connection对象。\n\n#### commitTransaction()\n　　判断con是否为null，如果为null，说明没有开启事务就提交事务，那么抛出异常；\n　　如果con不为null，那么调用con的commit()方法来提交事务；\n　　调用con.close()方法关闭连接；\n　　con = null，这表示事务已经结束！\n\n```\n    JdbcUtils.java\n    public class JdbcUtils {\n        private static DataSource dataSource = new ComboPooledDataSource();\n        private static Connection con = null;\n\n        public static DataSource getDataSource() {\n            return dataSource;\n        }\n\n        public static Connection getConnection() throws SQLException {\n            if(con == null) {\n                return dataSource.getConnection();\n            }\n            return con;\n        }\n\n        public static void beginTranscation() throws SQLException {\n            if(con != null) {\n                throw new SQLException(\"事务已经开启，在没有结束当前事务时，不能再开启事务！\");\n            }\n            con = dataSource.getConnection();\n            con.setAutoCommit(false);\n        }\n\n        public static void commitTransaction() throws SQLException {\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能提交事务！\");\n            }\n            con.commit();\n            con.close();\n            con = null;\n        }\n\n        public static void rollbackTransaction() throws SQLException {\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能回滚事务！\");\n            }\n            con.rollback();\n            con.close();\n            con = null;\n        }\n```\n## 2.4 再次修改JdbcUtils\n　　现在JdbcUtils有个问题，如果有两个线程！第一个线程调用了beginTransaction()方法，另一个线程再调用beginTransaction()方法时，因为con已经不再为null，所以就会抛出异常了。\n　　我们希望JdbcUtils可以多线程环境下被使用！这说明最好的方法是为每个线程提供一个Connection，这样每个线程都可以开启自己的事务了。\n　　还记得ThreadLocal类么？\n```\n    public class JdbcUtils {\n        private static DataSource dataSource = new ComboPooledDataSource();\n        private static ThreadLocal<Connection> tl = new ThreadLocal<Connection>();\n\n        public static DataSource getDataSource() {\n            return dataSource;\n        }\n\n        public static Connection getConnection() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                return dataSource.getConnection();\n            }\n            return con;\n        }\n\n        public static void beginTranscation() throws SQLException {\n            Connection con = tl.get();\n            if(con != null) {\n                throw new SQLException(\"事务已经开启，在没有结束当前事务时，不能再开启事务！\");\n            }\n            con = dataSource.getConnection();\n            con.setAutoCommit(false);\n            tl.set(con);\n        }\n\n        public static void commitTransaction() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能提交事务！\");\n            }\n            con.commit();\n            con.close();\n            tl.remove();\n        }\n\n        public static void rollbackTransaction() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能回滚事务！\");\n            }\n            con.rollback();\n            con.close();\n            tl.remove();\n        }\n    }\n```\n\n## 2.5 转账示例\n```\n    public class AccountDao {\n        public void updateBalance(String name, double balance) throws SQLException {\n            String sql = \"update account set balance=balance+? where name=?\";\n            QueryRunner queryRunner = new QueryRunner();\n            Connection conn = JdbcUtils.getgetConnection();\n            queryRunner.query(sql,conn,name,blance);\n        }\n    }\n```\n```\n    public class AccountService {\n        private AccountDao dao = new AccountDao();\n        public void transfer(String from, String to, double balance) {\n            try {\n                JdbcUtils.beginTranscation();\n                dao.updateBalance(from, -balance);\n                dao.updateBalance(to, balance);\n                JdbcUtils.commitTransaction();\n            } catch(Exception e) {\n                try {\n                    JdbcUtils.rollbackTransaction();\n                } catch (SQLException e1) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n    }\n```\n```\n    public class AccountServlte extends HttpServlet\n        protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            AccountService as = new AccountService();\n            as.transfer(\"zs\", \"ls\", 100);\n        }\n```\n\n","source":"_posts/2018/ThreadLocal.md","raw":"---\ntitle: ThreadLocal的使用\ndate: 2018-08-20 17:19:43\ntop: 5\ntags:\n\tJava基础\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->\n\n# 一、 ThreadLocal(线程局部变量)\n## 1.1 ThreadLocal API\n　　ThreadLocal类只有三个方法：\n```\n    void set(T value)：保存值；\n    T get()：获取值；\n    void remove()：移除值;\n```\n## 1.2 ThreadLocal的内部是Map\n　　ThreadLocal内部其实是个Map来保存数据。虽然在使用ThreadLocal时只给出了值，没有给出键，其实它内部使用了当前线程做为键。\n\n```\n    class MyThreadLocal<T> {\n        private Map<Thread,T> map = new HashMap<Thread,T>();\n        public void set(T value) {\n            map.put(Thread.currentThread(), value);\n        }\n\n        public void remove() {\n            map.remove(Thread.currentThread());\n        }\n\n        public T get() {\n            return map.get(Thread.currentThread());\n        }\n    }\n```\n\n# 二、 Service事务\n##  2.1 DAO中的事务\n　　在DAO中处理事务真是“小菜一碟”。\n```\n    public void xxx() {\n        Connection con = null;\n        try {\n            con = JdbcUtils.getConnection();\n            con.setAutoCommitted(false);\n            QueryRunner qr = new QueryRunner();\n            String sql = …;\n            Object[] params = …;\n            qr.update(con, sql, params);\n            sql = …;\n            Object[] params = …;\n            qr.update(con, sql, params);\n            con.commit();\n        } catch(Exception e) {\n            try {\n                if(con != null) {con.rollback();}\n            } catch(Exception e) {}\n            } finally {\n                try {\n                con.close();\n                } catch(Exception e) {}\n            }\n        }\n    }\n```\n## 2.2 Service才是处理事务的地方\n　　我们要清楚一件事，DAO中不是处理事务的地方，因为DAO中的每个方法都是对数据库的一次操作，而Service中的方法才是对应一个业务逻辑。也就是说我们需要在Service中的一方法中调用DAO的多个方法，而这些方法应该在一起事务中。\n　　怎么才能让DAO的多个方法使用相同的Connection呢？方法不能再自己来获得Connection，而是由外界传递进去。\n```\n    public void daoMethod1(Connection con, …) {\n    }\n    public void daoMethod2(Connection con, …) {\n    }\n```\n　　在Service中调用DAO的多个方法时，传递相同的Connection就可以了。\n```\n\tpublic class XXXService() {\n\t\tprivate XXXDao dao = new XXXDao();\n\t\tpublic void serviceMethod() {\n\t\tConnection con = null;\n\t\ttry {\n\t\t\tcon = JdbcUtils.getConnection();\n\t\t\tcon.setAutoCommitted(false);\n\t\t\tdao.daoMethod1(con, …);\n\t\t\tdao.doaMethod2(con, …);\n\t\t\tcom.commint();\n\t\t\t} catch(Exception e) {\n\t\t\t\ttry {\n\t\t\t\t\tcon.rollback();\n\t\t\t\t} catch(Exception e) {}\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tcon.close();\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t}\n\t}\n```\n　　但是，在Service中不应该出现Connection，它应该只在DAO中出现，因为它是JDBC的东西，JDBC的东西是用来连接数据库的，连接数据库是DAO的事儿！！！但是，事务是Service的事儿，不能放到DAO中！！！\n\n## 2.3 修改JdbcUtils\n　　我们把对事务的开启和关闭放到JdbcUtils中，在Service中调用JdbcUtils的方法来完成事务的处理，但在Service中就不会再出现Connection这一“禁忌”了。\nDAO中的方法不用再让Service来传递Connection了。DAO会主动从JdbcUtils中获取Connection对象，这样，JdbcUtils成为了DAO和Service的中介！\n我们在JdbcUtils中添加beginTransaction()和rollbackTransaction()，以及commitTransaction()方法。这样在Service中的代码如下：\n### SERVICE:\n```\n    public class XXXService() {\n       private XXXDao dao = new XXXDao();\n       public void serviceMethod() {\n           try {\n              JdbcUtils.beginTransaction();\n              dao.daoMethod1(…);\n              dao.daoMethod2(…);\n              JdbcUtils.commitTransaction();\n            } catch(Exception e) {\n               JdbcUtils.rollbackTransaction();\n            }\n        }\n    }\n```\n### DAO:\n```\n    public void daoMethod1(…) {\n      Connection con = JdbcUtils.getConnection();\n    }\n    public void daoMethod2(…) {\n      Connection con = JdbcUtils.getConnection();\n    }\n```\n　　在Service中调用了JdbcUtils.beginTransaction()方法时，JdbcUtils要做准备好一个已经调用了setAutoCommitted(false)方法的Connection对象，因为在Service中调用JdbcUtils.beginTransaction()之后，马上就会调用DAO的方法，而在DAO方法中会调用JdbcUtils.getConnection()方法。这说明JdbcUtils要在getConnection()方法中返回刚刚准备好的，已经设置了手动提交的Connection对象。\n　　在JdbcUtils中创建一个Connection con属性，当它为null时，说明没有事务！当它不为null时，表示开启了事务。\n在没有开启事务时，可以调用“开启事务”方法；在开启事务后，可以调用“提交事务”和“回滚事务”方法；\n　　getConnection()方法会在con不为null时返回con，再con为null时，从连接池中返回连接。\n#### beginTransaction()\n　　判断con是否为null，如果不为null，就抛出异常！\n　　如果con为null，那么从连接池中获取一个Connection对象，赋值给con！然后设置它为“手动提交”。\n\n#### getConnection()\n　　判断con是否为null，如果为null说明没有事务，那么从连接池获取一个连接返回；\n　　如果不为null，说明已经开始了事务，那么返回con属性返回。这说明在con不为null时，无论调用多少次getConnection()方法，返回的都是同个Connection对象。\n\n#### commitTransaction()\n　　判断con是否为null，如果为null，说明没有开启事务就提交事务，那么抛出异常；\n　　如果con不为null，那么调用con的commit()方法来提交事务；\n　　调用con.close()方法关闭连接；\n　　con = null，这表示事务已经结束！\n\n```\n    JdbcUtils.java\n    public class JdbcUtils {\n        private static DataSource dataSource = new ComboPooledDataSource();\n        private static Connection con = null;\n\n        public static DataSource getDataSource() {\n            return dataSource;\n        }\n\n        public static Connection getConnection() throws SQLException {\n            if(con == null) {\n                return dataSource.getConnection();\n            }\n            return con;\n        }\n\n        public static void beginTranscation() throws SQLException {\n            if(con != null) {\n                throw new SQLException(\"事务已经开启，在没有结束当前事务时，不能再开启事务！\");\n            }\n            con = dataSource.getConnection();\n            con.setAutoCommit(false);\n        }\n\n        public static void commitTransaction() throws SQLException {\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能提交事务！\");\n            }\n            con.commit();\n            con.close();\n            con = null;\n        }\n\n        public static void rollbackTransaction() throws SQLException {\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能回滚事务！\");\n            }\n            con.rollback();\n            con.close();\n            con = null;\n        }\n```\n## 2.4 再次修改JdbcUtils\n　　现在JdbcUtils有个问题，如果有两个线程！第一个线程调用了beginTransaction()方法，另一个线程再调用beginTransaction()方法时，因为con已经不再为null，所以就会抛出异常了。\n　　我们希望JdbcUtils可以多线程环境下被使用！这说明最好的方法是为每个线程提供一个Connection，这样每个线程都可以开启自己的事务了。\n　　还记得ThreadLocal类么？\n```\n    public class JdbcUtils {\n        private static DataSource dataSource = new ComboPooledDataSource();\n        private static ThreadLocal<Connection> tl = new ThreadLocal<Connection>();\n\n        public static DataSource getDataSource() {\n            return dataSource;\n        }\n\n        public static Connection getConnection() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                return dataSource.getConnection();\n            }\n            return con;\n        }\n\n        public static void beginTranscation() throws SQLException {\n            Connection con = tl.get();\n            if(con != null) {\n                throw new SQLException(\"事务已经开启，在没有结束当前事务时，不能再开启事务！\");\n            }\n            con = dataSource.getConnection();\n            con.setAutoCommit(false);\n            tl.set(con);\n        }\n\n        public static void commitTransaction() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能提交事务！\");\n            }\n            con.commit();\n            con.close();\n            tl.remove();\n        }\n\n        public static void rollbackTransaction() throws SQLException {\n            Connection con = tl.get();\n            if(con == null) {\n                throw new SQLException(\"当前没有事务，所以不能回滚事务！\");\n            }\n            con.rollback();\n            con.close();\n            tl.remove();\n        }\n    }\n```\n\n## 2.5 转账示例\n```\n    public class AccountDao {\n        public void updateBalance(String name, double balance) throws SQLException {\n            String sql = \"update account set balance=balance+? where name=?\";\n            QueryRunner queryRunner = new QueryRunner();\n            Connection conn = JdbcUtils.getgetConnection();\n            queryRunner.query(sql,conn,name,blance);\n        }\n    }\n```\n```\n    public class AccountService {\n        private AccountDao dao = new AccountDao();\n        public void transfer(String from, String to, double balance) {\n            try {\n                JdbcUtils.beginTranscation();\n                dao.updateBalance(from, -balance);\n                dao.updateBalance(to, balance);\n                JdbcUtils.commitTransaction();\n            } catch(Exception e) {\n                try {\n                    JdbcUtils.rollbackTransaction();\n                } catch (SQLException e1) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n    }\n```\n```\n    public class AccountServlte extends HttpServlet\n        protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n            AccountService as = new AccountService();\n            as.transfer(\"zs\", \"ls\", 100);\n        }\n```\n\n","slug":"2018/ThreadLocal","published":1,"updated":"2018-09-13T01:27:42.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bi000c3wj4vj1pftyd","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n<h1 id=\"一、-ThreadLocal-线程局部变量\"><a href=\"#一、-ThreadLocal-线程局部变量\" class=\"headerlink\" title=\"一、 ThreadLocal(线程局部变量)\"></a>一、 ThreadLocal(线程局部变量)</h1><h2 id=\"1-1-ThreadLocal-API\"><a href=\"#1-1-ThreadLocal-API\" class=\"headerlink\" title=\"1.1 ThreadLocal API\"></a>1.1 ThreadLocal API</h2><p>　　ThreadLocal类只有三个方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void set(T value)：保存值；</span><br><span class=\"line\">T get()：获取值；</span><br><span class=\"line\">void remove()：移除值;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-2-ThreadLocal的内部是Map\"><a href=\"#1-2-ThreadLocal的内部是Map\" class=\"headerlink\" title=\"1.2 ThreadLocal的内部是Map\"></a>1.2 ThreadLocal的内部是Map</h2><p>　　ThreadLocal内部其实是个Map来保存数据。虽然在使用ThreadLocal时只给出了值，没有给出键，其实它内部使用了当前线程做为键。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyThreadLocal&lt;T&gt; &#123;</span><br><span class=\"line\">    private Map&lt;Thread,T&gt; map = new HashMap&lt;Thread,T&gt;();</span><br><span class=\"line\">    public void set(T value) &#123;</span><br><span class=\"line\">        map.put(Thread.currentThread(), value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void remove() &#123;</span><br><span class=\"line\">        map.remove(Thread.currentThread());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public T get() &#123;</span><br><span class=\"line\">        return map.get(Thread.currentThread());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二、-Service事务\"><a href=\"#二、-Service事务\" class=\"headerlink\" title=\"二、 Service事务\"></a>二、 Service事务</h1><h2 id=\"2-1-DAO中的事务\"><a href=\"#2-1-DAO中的事务\" class=\"headerlink\" title=\"2.1 DAO中的事务\"></a>2.1 DAO中的事务</h2><p>　　在DAO中处理事务真是“小菜一碟”。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void xxx() &#123;</span><br><span class=\"line\">    Connection con = null;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        con = JdbcUtils.getConnection();</span><br><span class=\"line\">        con.setAutoCommitted(false);</span><br><span class=\"line\">        QueryRunner qr = new QueryRunner();</span><br><span class=\"line\">        String sql = …;</span><br><span class=\"line\">        Object[] params = …;</span><br><span class=\"line\">        qr.update(con, sql, params);</span><br><span class=\"line\">        sql = …;</span><br><span class=\"line\">        Object[] params = …;</span><br><span class=\"line\">        qr.update(con, sql, params);</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">    &#125; catch(Exception e) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            if(con != null) &#123;con.rollback();&#125;</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">            con.close();</span><br><span class=\"line\">            &#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-2-Service才是处理事务的地方\"><a href=\"#2-2-Service才是处理事务的地方\" class=\"headerlink\" title=\"2.2 Service才是处理事务的地方\"></a>2.2 Service才是处理事务的地方</h2><p>　　我们要清楚一件事，DAO中不是处理事务的地方，因为DAO中的每个方法都是对数据库的一次操作，而Service中的方法才是对应一个业务逻辑。也就是说我们需要在Service中的一方法中调用DAO的多个方法，而这些方法应该在一起事务中。<br>　　怎么才能让DAO的多个方法使用相同的Connection呢？方法不能再自己来获得Connection，而是由外界传递进去。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void daoMethod1(Connection con, …) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public void daoMethod2(Connection con, …) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　在Service中调用DAO的多个方法时，传递相同的Connection就可以了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class XXXService() &#123;</span><br><span class=\"line\">\tprivate XXXDao dao = new XXXDao();</span><br><span class=\"line\">\tpublic void serviceMethod() &#123;</span><br><span class=\"line\">\tConnection con = null;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tcon = JdbcUtils.getConnection();</span><br><span class=\"line\">\t\tcon.setAutoCommitted(false);</span><br><span class=\"line\">\t\tdao.daoMethod1(con, …);</span><br><span class=\"line\">\t\tdao.doaMethod2(con, …);</span><br><span class=\"line\">\t\tcom.commint();</span><br><span class=\"line\">\t\t&#125; catch(Exception e) &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tcon.rollback();</span><br><span class=\"line\">\t\t\t&#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">\t\t&#125; finally &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tcon.close();</span><br><span class=\"line\">\t\t\t&#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　但是，在Service中不应该出现Connection，它应该只在DAO中出现，因为它是JDBC的东西，JDBC的东西是用来连接数据库的，连接数据库是DAO的事儿！！！但是，事务是Service的事儿，不能放到DAO中！！！</p>\n<h2 id=\"2-3-修改JdbcUtils\"><a href=\"#2-3-修改JdbcUtils\" class=\"headerlink\" title=\"2.3 修改JdbcUtils\"></a>2.3 修改JdbcUtils</h2><p>　　我们把对事务的开启和关闭放到JdbcUtils中，在Service中调用JdbcUtils的方法来完成事务的处理，但在Service中就不会再出现Connection这一“禁忌”了。<br>DAO中的方法不用再让Service来传递Connection了。DAO会主动从JdbcUtils中获取Connection对象，这样，JdbcUtils成为了DAO和Service的中介！<br>我们在JdbcUtils中添加beginTransaction()和rollbackTransaction()，以及commitTransaction()方法。这样在Service中的代码如下：</p>\n<h3 id=\"SERVICE\"><a href=\"#SERVICE\" class=\"headerlink\" title=\"SERVICE:\"></a>SERVICE:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class XXXService() &#123;</span><br><span class=\"line\">   private XXXDao dao = new XXXDao();</span><br><span class=\"line\">   public void serviceMethod() &#123;</span><br><span class=\"line\">       try &#123;</span><br><span class=\"line\">          JdbcUtils.beginTransaction();</span><br><span class=\"line\">          dao.daoMethod1(…);</span><br><span class=\"line\">          dao.daoMethod2(…);</span><br><span class=\"line\">          JdbcUtils.commitTransaction();</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;</span><br><span class=\"line\">           JdbcUtils.rollbackTransaction();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"DAO\"><a href=\"#DAO\" class=\"headerlink\" title=\"DAO:\"></a>DAO:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void daoMethod1(…) &#123;</span><br><span class=\"line\">  Connection con = JdbcUtils.getConnection();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public void daoMethod2(…) &#123;</span><br><span class=\"line\">  Connection con = JdbcUtils.getConnection();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　在Service中调用了JdbcUtils.beginTransaction()方法时，JdbcUtils要做准备好一个已经调用了setAutoCommitted(false)方法的Connection对象，因为在Service中调用JdbcUtils.beginTransaction()之后，马上就会调用DAO的方法，而在DAO方法中会调用JdbcUtils.getConnection()方法。这说明JdbcUtils要在getConnection()方法中返回刚刚准备好的，已经设置了手动提交的Connection对象。<br>　　在JdbcUtils中创建一个Connection con属性，当它为null时，说明没有事务！当它不为null时，表示开启了事务。<br>在没有开启事务时，可以调用“开启事务”方法；在开启事务后，可以调用“提交事务”和“回滚事务”方法；<br>　　getConnection()方法会在con不为null时返回con，再con为null时，从连接池中返回连接。</p>\n<h4 id=\"beginTransaction\"><a href=\"#beginTransaction\" class=\"headerlink\" title=\"beginTransaction()\"></a>beginTransaction()</h4><p>　　判断con是否为null，如果不为null，就抛出异常！<br>　　如果con为null，那么从连接池中获取一个Connection对象，赋值给con！然后设置它为“手动提交”。</p>\n<h4 id=\"getConnection\"><a href=\"#getConnection\" class=\"headerlink\" title=\"getConnection()\"></a>getConnection()</h4><p>　　判断con是否为null，如果为null说明没有事务，那么从连接池获取一个连接返回；<br>　　如果不为null，说明已经开始了事务，那么返回con属性返回。这说明在con不为null时，无论调用多少次getConnection()方法，返回的都是同个Connection对象。</p>\n<h4 id=\"commitTransaction\"><a href=\"#commitTransaction\" class=\"headerlink\" title=\"commitTransaction()\"></a>commitTransaction()</h4><p>　　判断con是否为null，如果为null，说明没有开启事务就提交事务，那么抛出异常；<br>　　如果con不为null，那么调用con的commit()方法来提交事务；<br>　　调用con.close()方法关闭连接；<br>　　con = null，这表示事务已经结束！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JdbcUtils.java</span><br><span class=\"line\">public class JdbcUtils &#123;</span><br><span class=\"line\">    private static DataSource dataSource = new ComboPooledDataSource();</span><br><span class=\"line\">    private static Connection con = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static DataSource getDataSource() &#123;</span><br><span class=\"line\">        return dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Connection getConnection() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            return dataSource.getConnection();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void beginTranscation() throws SQLException &#123;</span><br><span class=\"line\">        if(con != null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;事务已经开启，在没有结束当前事务时，不能再开启事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con = dataSource.getConnection();</span><br><span class=\"line\">        con.setAutoCommit(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void commitTransaction() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能提交事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        con = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void rollbackTransaction() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能回滚事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.rollback();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        con = null;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-再次修改JdbcUtils\"><a href=\"#2-4-再次修改JdbcUtils\" class=\"headerlink\" title=\"2.4 再次修改JdbcUtils\"></a>2.4 再次修改JdbcUtils</h2><p>　　现在JdbcUtils有个问题，如果有两个线程！第一个线程调用了beginTransaction()方法，另一个线程再调用beginTransaction()方法时，因为con已经不再为null，所以就会抛出异常了。<br>　　我们希望JdbcUtils可以多线程环境下被使用！这说明最好的方法是为每个线程提供一个Connection，这样每个线程都可以开启自己的事务了。<br>　　还记得ThreadLocal类么？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class JdbcUtils &#123;</span><br><span class=\"line\">    private static DataSource dataSource = new ComboPooledDataSource();</span><br><span class=\"line\">    private static ThreadLocal&lt;Connection&gt; tl = new ThreadLocal&lt;Connection&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    public static DataSource getDataSource() &#123;</span><br><span class=\"line\">        return dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Connection getConnection() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            return dataSource.getConnection();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void beginTranscation() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con != null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;事务已经开启，在没有结束当前事务时，不能再开启事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con = dataSource.getConnection();</span><br><span class=\"line\">        con.setAutoCommit(false);</span><br><span class=\"line\">        tl.set(con);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void commitTransaction() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能提交事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        tl.remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void rollbackTransaction() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能回滚事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.rollback();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        tl.remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-转账示例\"><a href=\"#2-5-转账示例\" class=\"headerlink\" title=\"2.5 转账示例\"></a>2.5 转账示例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountDao &#123;</span><br><span class=\"line\">    public void updateBalance(String name, double balance) throws SQLException &#123;</span><br><span class=\"line\">        String sql = &quot;update account set balance=balance+? where name=?&quot;;</span><br><span class=\"line\">        QueryRunner queryRunner = new QueryRunner();</span><br><span class=\"line\">        Connection conn = JdbcUtils.getgetConnection();</span><br><span class=\"line\">        queryRunner.query(sql,conn,name,blance);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountService &#123;</span><br><span class=\"line\">    private AccountDao dao = new AccountDao();</span><br><span class=\"line\">    public void transfer(String from, String to, double balance) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            JdbcUtils.beginTranscation();</span><br><span class=\"line\">            dao.updateBalance(from, -balance);</span><br><span class=\"line\">            dao.updateBalance(to, balance);</span><br><span class=\"line\">            JdbcUtils.commitTransaction();</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                JdbcUtils.rollbackTransaction();</span><br><span class=\"line\">            &#125; catch (SQLException e1) &#123;</span><br><span class=\"line\">                throw new RuntimeException(e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountServlte extends HttpServlet</span><br><span class=\"line\">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">        AccountService as = new AccountService();</span><br><span class=\"line\">        as.transfer(&quot;zs&quot;, &quot;ls&quot;, 100);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>\n<h1 id=\"一、-ThreadLocal-线程局部变量\"><a href=\"#一、-ThreadLocal-线程局部变量\" class=\"headerlink\" title=\"一、 ThreadLocal(线程局部变量)\"></a>一、 ThreadLocal(线程局部变量)</h1><h2 id=\"1-1-ThreadLocal-API\"><a href=\"#1-1-ThreadLocal-API\" class=\"headerlink\" title=\"1.1 ThreadLocal API\"></a>1.1 ThreadLocal API</h2><p>　　ThreadLocal类只有三个方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void set(T value)：保存值；</span><br><span class=\"line\">T get()：获取值；</span><br><span class=\"line\">void remove()：移除值;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-2-ThreadLocal的内部是Map\"><a href=\"#1-2-ThreadLocal的内部是Map\" class=\"headerlink\" title=\"1.2 ThreadLocal的内部是Map\"></a>1.2 ThreadLocal的内部是Map</h2><p>　　ThreadLocal内部其实是个Map来保存数据。虽然在使用ThreadLocal时只给出了值，没有给出键，其实它内部使用了当前线程做为键。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyThreadLocal&lt;T&gt; &#123;</span><br><span class=\"line\">    private Map&lt;Thread,T&gt; map = new HashMap&lt;Thread,T&gt;();</span><br><span class=\"line\">    public void set(T value) &#123;</span><br><span class=\"line\">        map.put(Thread.currentThread(), value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void remove() &#123;</span><br><span class=\"line\">        map.remove(Thread.currentThread());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public T get() &#123;</span><br><span class=\"line\">        return map.get(Thread.currentThread());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二、-Service事务\"><a href=\"#二、-Service事务\" class=\"headerlink\" title=\"二、 Service事务\"></a>二、 Service事务</h1><h2 id=\"2-1-DAO中的事务\"><a href=\"#2-1-DAO中的事务\" class=\"headerlink\" title=\"2.1 DAO中的事务\"></a>2.1 DAO中的事务</h2><p>　　在DAO中处理事务真是“小菜一碟”。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void xxx() &#123;</span><br><span class=\"line\">    Connection con = null;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        con = JdbcUtils.getConnection();</span><br><span class=\"line\">        con.setAutoCommitted(false);</span><br><span class=\"line\">        QueryRunner qr = new QueryRunner();</span><br><span class=\"line\">        String sql = …;</span><br><span class=\"line\">        Object[] params = …;</span><br><span class=\"line\">        qr.update(con, sql, params);</span><br><span class=\"line\">        sql = …;</span><br><span class=\"line\">        Object[] params = …;</span><br><span class=\"line\">        qr.update(con, sql, params);</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">    &#125; catch(Exception e) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            if(con != null) &#123;con.rollback();&#125;</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">            con.close();</span><br><span class=\"line\">            &#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-2-Service才是处理事务的地方\"><a href=\"#2-2-Service才是处理事务的地方\" class=\"headerlink\" title=\"2.2 Service才是处理事务的地方\"></a>2.2 Service才是处理事务的地方</h2><p>　　我们要清楚一件事，DAO中不是处理事务的地方，因为DAO中的每个方法都是对数据库的一次操作，而Service中的方法才是对应一个业务逻辑。也就是说我们需要在Service中的一方法中调用DAO的多个方法，而这些方法应该在一起事务中。<br>　　怎么才能让DAO的多个方法使用相同的Connection呢？方法不能再自己来获得Connection，而是由外界传递进去。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void daoMethod1(Connection con, …) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public void daoMethod2(Connection con, …) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　在Service中调用DAO的多个方法时，传递相同的Connection就可以了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class XXXService() &#123;</span><br><span class=\"line\">\tprivate XXXDao dao = new XXXDao();</span><br><span class=\"line\">\tpublic void serviceMethod() &#123;</span><br><span class=\"line\">\tConnection con = null;</span><br><span class=\"line\">\ttry &#123;</span><br><span class=\"line\">\t\tcon = JdbcUtils.getConnection();</span><br><span class=\"line\">\t\tcon.setAutoCommitted(false);</span><br><span class=\"line\">\t\tdao.daoMethod1(con, …);</span><br><span class=\"line\">\t\tdao.doaMethod2(con, …);</span><br><span class=\"line\">\t\tcom.commint();</span><br><span class=\"line\">\t\t&#125; catch(Exception e) &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tcon.rollback();</span><br><span class=\"line\">\t\t\t&#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">\t\t&#125; finally &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tcon.close();</span><br><span class=\"line\">\t\t\t&#125; catch(Exception e) &#123;&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　但是，在Service中不应该出现Connection，它应该只在DAO中出现，因为它是JDBC的东西，JDBC的东西是用来连接数据库的，连接数据库是DAO的事儿！！！但是，事务是Service的事儿，不能放到DAO中！！！</p>\n<h2 id=\"2-3-修改JdbcUtils\"><a href=\"#2-3-修改JdbcUtils\" class=\"headerlink\" title=\"2.3 修改JdbcUtils\"></a>2.3 修改JdbcUtils</h2><p>　　我们把对事务的开启和关闭放到JdbcUtils中，在Service中调用JdbcUtils的方法来完成事务的处理，但在Service中就不会再出现Connection这一“禁忌”了。<br>DAO中的方法不用再让Service来传递Connection了。DAO会主动从JdbcUtils中获取Connection对象，这样，JdbcUtils成为了DAO和Service的中介！<br>我们在JdbcUtils中添加beginTransaction()和rollbackTransaction()，以及commitTransaction()方法。这样在Service中的代码如下：</p>\n<h3 id=\"SERVICE\"><a href=\"#SERVICE\" class=\"headerlink\" title=\"SERVICE:\"></a>SERVICE:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class XXXService() &#123;</span><br><span class=\"line\">   private XXXDao dao = new XXXDao();</span><br><span class=\"line\">   public void serviceMethod() &#123;</span><br><span class=\"line\">       try &#123;</span><br><span class=\"line\">          JdbcUtils.beginTransaction();</span><br><span class=\"line\">          dao.daoMethod1(…);</span><br><span class=\"line\">          dao.daoMethod2(…);</span><br><span class=\"line\">          JdbcUtils.commitTransaction();</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;</span><br><span class=\"line\">           JdbcUtils.rollbackTransaction();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"DAO\"><a href=\"#DAO\" class=\"headerlink\" title=\"DAO:\"></a>DAO:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void daoMethod1(…) &#123;</span><br><span class=\"line\">  Connection con = JdbcUtils.getConnection();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public void daoMethod2(…) &#123;</span><br><span class=\"line\">  Connection con = JdbcUtils.getConnection();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　在Service中调用了JdbcUtils.beginTransaction()方法时，JdbcUtils要做准备好一个已经调用了setAutoCommitted(false)方法的Connection对象，因为在Service中调用JdbcUtils.beginTransaction()之后，马上就会调用DAO的方法，而在DAO方法中会调用JdbcUtils.getConnection()方法。这说明JdbcUtils要在getConnection()方法中返回刚刚准备好的，已经设置了手动提交的Connection对象。<br>　　在JdbcUtils中创建一个Connection con属性，当它为null时，说明没有事务！当它不为null时，表示开启了事务。<br>在没有开启事务时，可以调用“开启事务”方法；在开启事务后，可以调用“提交事务”和“回滚事务”方法；<br>　　getConnection()方法会在con不为null时返回con，再con为null时，从连接池中返回连接。</p>\n<h4 id=\"beginTransaction\"><a href=\"#beginTransaction\" class=\"headerlink\" title=\"beginTransaction()\"></a>beginTransaction()</h4><p>　　判断con是否为null，如果不为null，就抛出异常！<br>　　如果con为null，那么从连接池中获取一个Connection对象，赋值给con！然后设置它为“手动提交”。</p>\n<h4 id=\"getConnection\"><a href=\"#getConnection\" class=\"headerlink\" title=\"getConnection()\"></a>getConnection()</h4><p>　　判断con是否为null，如果为null说明没有事务，那么从连接池获取一个连接返回；<br>　　如果不为null，说明已经开始了事务，那么返回con属性返回。这说明在con不为null时，无论调用多少次getConnection()方法，返回的都是同个Connection对象。</p>\n<h4 id=\"commitTransaction\"><a href=\"#commitTransaction\" class=\"headerlink\" title=\"commitTransaction()\"></a>commitTransaction()</h4><p>　　判断con是否为null，如果为null，说明没有开启事务就提交事务，那么抛出异常；<br>　　如果con不为null，那么调用con的commit()方法来提交事务；<br>　　调用con.close()方法关闭连接；<br>　　con = null，这表示事务已经结束！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JdbcUtils.java</span><br><span class=\"line\">public class JdbcUtils &#123;</span><br><span class=\"line\">    private static DataSource dataSource = new ComboPooledDataSource();</span><br><span class=\"line\">    private static Connection con = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static DataSource getDataSource() &#123;</span><br><span class=\"line\">        return dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Connection getConnection() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            return dataSource.getConnection();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void beginTranscation() throws SQLException &#123;</span><br><span class=\"line\">        if(con != null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;事务已经开启，在没有结束当前事务时，不能再开启事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con = dataSource.getConnection();</span><br><span class=\"line\">        con.setAutoCommit(false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void commitTransaction() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能提交事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        con = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void rollbackTransaction() throws SQLException &#123;</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能回滚事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.rollback();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        con = null;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-再次修改JdbcUtils\"><a href=\"#2-4-再次修改JdbcUtils\" class=\"headerlink\" title=\"2.4 再次修改JdbcUtils\"></a>2.4 再次修改JdbcUtils</h2><p>　　现在JdbcUtils有个问题，如果有两个线程！第一个线程调用了beginTransaction()方法，另一个线程再调用beginTransaction()方法时，因为con已经不再为null，所以就会抛出异常了。<br>　　我们希望JdbcUtils可以多线程环境下被使用！这说明最好的方法是为每个线程提供一个Connection，这样每个线程都可以开启自己的事务了。<br>　　还记得ThreadLocal类么？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class JdbcUtils &#123;</span><br><span class=\"line\">    private static DataSource dataSource = new ComboPooledDataSource();</span><br><span class=\"line\">    private static ThreadLocal&lt;Connection&gt; tl = new ThreadLocal&lt;Connection&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    public static DataSource getDataSource() &#123;</span><br><span class=\"line\">        return dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Connection getConnection() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            return dataSource.getConnection();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void beginTranscation() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con != null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;事务已经开启，在没有结束当前事务时，不能再开启事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con = dataSource.getConnection();</span><br><span class=\"line\">        con.setAutoCommit(false);</span><br><span class=\"line\">        tl.set(con);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void commitTransaction() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能提交事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.commit();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        tl.remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void rollbackTransaction() throws SQLException &#123;</span><br><span class=\"line\">        Connection con = tl.get();</span><br><span class=\"line\">        if(con == null) &#123;</span><br><span class=\"line\">            throw new SQLException(&quot;当前没有事务，所以不能回滚事务！&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        con.rollback();</span><br><span class=\"line\">        con.close();</span><br><span class=\"line\">        tl.remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-转账示例\"><a href=\"#2-5-转账示例\" class=\"headerlink\" title=\"2.5 转账示例\"></a>2.5 转账示例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountDao &#123;</span><br><span class=\"line\">    public void updateBalance(String name, double balance) throws SQLException &#123;</span><br><span class=\"line\">        String sql = &quot;update account set balance=balance+? where name=?&quot;;</span><br><span class=\"line\">        QueryRunner queryRunner = new QueryRunner();</span><br><span class=\"line\">        Connection conn = JdbcUtils.getgetConnection();</span><br><span class=\"line\">        queryRunner.query(sql,conn,name,blance);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountService &#123;</span><br><span class=\"line\">    private AccountDao dao = new AccountDao();</span><br><span class=\"line\">    public void transfer(String from, String to, double balance) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            JdbcUtils.beginTranscation();</span><br><span class=\"line\">            dao.updateBalance(from, -balance);</span><br><span class=\"line\">            dao.updateBalance(to, balance);</span><br><span class=\"line\">            JdbcUtils.commitTransaction();</span><br><span class=\"line\">        &#125; catch(Exception e) &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                JdbcUtils.rollbackTransaction();</span><br><span class=\"line\">            &#125; catch (SQLException e1) &#123;</span><br><span class=\"line\">                throw new RuntimeException(e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AccountServlte extends HttpServlet</span><br><span class=\"line\">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class=\"line\">        AccountService as = new AccountService();</span><br><span class=\"line\">        as.transfer(&quot;zs&quot;, &quot;ls&quot;, 100);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"Babel过滤URL","date":"2018-09-11T08:30:18.000Z","top":7,"_content":"　　通过nodejs+babel查找所有js文件中的URL\n<!-- more -->\n```\n    var fs = require('fs');\n    var path = require('path');\n    const babylon = require('babylon');\n    const Traverse = require('babel-traverse').default;\n    const generator = require('babel-generator').default;\n    const Types = require('babel-types');\n    const babel = require('babel-core');\n\n    //解析需要遍历的文件夹，我这以E盘根目录为例\n    var filePath = path.resolve('C:\\\\Users\\\\Administrator.FO13YM4ZWHL5OAN\\\\Desktop\\\\babel\\\\AstForBabel\\\\conference');\n    var reg = /(.js)$/i;\n\n    //调用文件遍历方法\n    fileDisplay(filePath);\n\n    /**\n     * 文件遍历方法\n     * @param filePath 需要遍历的文件路径\n     */\n    console.log(\">>>>>>>>>>>>>>>程序开始>>>>>>>>>>>>>>>\");\n\n    function findurl(filedir){\n      // urlast转换 \n      try{\n        var code =fs.readFileSync(filedir, 'utf8');\n        var ast = babylon.parse(code);\n        Traverse(ast,{\n          Identifier(path){\n            if (path.node.name === \"url\") {\n              var parentcode = generator(path.parent).code;\n              var reg1 = /^(url)[:=\\s]/i;\n              if (reg1.test(parentcode)) {\n                console.log(parentcode);\n              };\n\n            }\n          }\n        })\n        // console.log(filedir);\n        fs.writeFile(filedir,generator(ast).code,function(err){\n            if(err) console.log('写文件操作失败');\n        })\n      } catch(error){\n        // console.log(\"!!!!!!!!!!\" + filedir);\n      }  \n    }\n\n    function fileDisplay(filePath){\n      //根据文件路径读取文件，返回文件列表\n      fs.readdir(filePath,function(err,files){\n        if(err){\n          console.warn(err)\n        }else{\n          //遍历读取到的文件列表\n          files.forEach(function(filename){\n            //获取当前文件的绝对路径\n            var filedir = path.join(filePath,filename);\n            //根据文件路径获取文件信息，返回一个fs.Stats对象\n            fs.stat(filedir,function(eror,stats){\n              if(eror){\n                console.warn('获取文件stats失败');\n              }else{\n                var isFile = stats.isFile();//是文件\n                var isDir = stats.isDirectory();//是文件夹\n                if(isFile){\n                  if (reg.test(filedir)) {\n                    findurl(filedir);\n                  }\n                }\n                if(isDir){\n                  fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                }\n              }\n            })\n          });\n        }\n      });\n    }\n\n\n```","source":"_posts/2018/babel过滤URL.md","raw":"---\ntitle: Babel过滤URL\ndate: 2018-09-11 16:30:18\ntop: 7\ntags:\n\tnodejs\n---\n　　通过nodejs+babel查找所有js文件中的URL\n<!-- more -->\n```\n    var fs = require('fs');\n    var path = require('path');\n    const babylon = require('babylon');\n    const Traverse = require('babel-traverse').default;\n    const generator = require('babel-generator').default;\n    const Types = require('babel-types');\n    const babel = require('babel-core');\n\n    //解析需要遍历的文件夹，我这以E盘根目录为例\n    var filePath = path.resolve('C:\\\\Users\\\\Administrator.FO13YM4ZWHL5OAN\\\\Desktop\\\\babel\\\\AstForBabel\\\\conference');\n    var reg = /(.js)$/i;\n\n    //调用文件遍历方法\n    fileDisplay(filePath);\n\n    /**\n     * 文件遍历方法\n     * @param filePath 需要遍历的文件路径\n     */\n    console.log(\">>>>>>>>>>>>>>>程序开始>>>>>>>>>>>>>>>\");\n\n    function findurl(filedir){\n      // urlast转换 \n      try{\n        var code =fs.readFileSync(filedir, 'utf8');\n        var ast = babylon.parse(code);\n        Traverse(ast,{\n          Identifier(path){\n            if (path.node.name === \"url\") {\n              var parentcode = generator(path.parent).code;\n              var reg1 = /^(url)[:=\\s]/i;\n              if (reg1.test(parentcode)) {\n                console.log(parentcode);\n              };\n\n            }\n          }\n        })\n        // console.log(filedir);\n        fs.writeFile(filedir,generator(ast).code,function(err){\n            if(err) console.log('写文件操作失败');\n        })\n      } catch(error){\n        // console.log(\"!!!!!!!!!!\" + filedir);\n      }  \n    }\n\n    function fileDisplay(filePath){\n      //根据文件路径读取文件，返回文件列表\n      fs.readdir(filePath,function(err,files){\n        if(err){\n          console.warn(err)\n        }else{\n          //遍历读取到的文件列表\n          files.forEach(function(filename){\n            //获取当前文件的绝对路径\n            var filedir = path.join(filePath,filename);\n            //根据文件路径获取文件信息，返回一个fs.Stats对象\n            fs.stat(filedir,function(eror,stats){\n              if(eror){\n                console.warn('获取文件stats失败');\n              }else{\n                var isFile = stats.isFile();//是文件\n                var isDir = stats.isDirectory();//是文件夹\n                if(isFile){\n                  if (reg.test(filedir)) {\n                    findurl(filedir);\n                  }\n                }\n                if(isDir){\n                  fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                }\n              }\n            })\n          });\n        }\n      });\n    }\n\n\n```","slug":"2018/babel过滤URL","published":1,"updated":"2018-09-13T02:55:01.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bj000f3wj4us30glh2","content":"<p>　　通过nodejs+babel查找所有js文件中的URL<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">var path = require(&apos;path&apos;);</span><br><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\">const Traverse = require(&apos;babel-traverse&apos;).default;</span><br><span class=\"line\">const generator = require(&apos;babel-generator&apos;).default;</span><br><span class=\"line\">const Types = require(&apos;babel-types&apos;);</span><br><span class=\"line\">const babel = require(&apos;babel-core&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">//解析需要遍历的文件夹，我这以E盘根目录为例</span><br><span class=\"line\">var filePath = path.resolve(&apos;C:\\\\Users\\\\Administrator.FO13YM4ZWHL5OAN\\\\Desktop\\\\babel\\\\AstForBabel\\\\conference&apos;);</span><br><span class=\"line\">var reg = /(.js)$/i;</span><br><span class=\"line\"></span><br><span class=\"line\">//调用文件遍历方法</span><br><span class=\"line\">fileDisplay(filePath);</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 文件遍历方法</span><br><span class=\"line\"> * @param filePath 需要遍历的文件路径</span><br><span class=\"line\"> */</span><br><span class=\"line\">console.log(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;程序开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">function findurl(filedir)&#123;</span><br><span class=\"line\">  // urlast转换 </span><br><span class=\"line\">  try&#123;</span><br><span class=\"line\">    var code =fs.readFileSync(filedir, &apos;utf8&apos;);</span><br><span class=\"line\">    var ast = babylon.parse(code);</span><br><span class=\"line\">    Traverse(ast,&#123;</span><br><span class=\"line\">      Identifier(path)&#123;</span><br><span class=\"line\">        if (path.node.name === &quot;url&quot;) &#123;</span><br><span class=\"line\">          var parentcode = generator(path.parent).code;</span><br><span class=\"line\">          var reg1 = /^(url)[:=\\s]/i;</span><br><span class=\"line\">          if (reg1.test(parentcode)) &#123;</span><br><span class=\"line\">            console.log(parentcode);</span><br><span class=\"line\">          &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    // console.log(filedir);</span><br><span class=\"line\">    fs.writeFile(filedir,generator(ast).code,function(err)&#123;</span><br><span class=\"line\">        if(err) console.log(&apos;写文件操作失败&apos;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125; catch(error)&#123;</span><br><span class=\"line\">    // console.log(&quot;!!!!!!!!!!&quot; + filedir);</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function fileDisplay(filePath)&#123;</span><br><span class=\"line\">  //根据文件路径读取文件，返回文件列表</span><br><span class=\"line\">  fs.readdir(filePath,function(err,files)&#123;</span><br><span class=\"line\">    if(err)&#123;</span><br><span class=\"line\">      console.warn(err)</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">      //遍历读取到的文件列表</span><br><span class=\"line\">      files.forEach(function(filename)&#123;</span><br><span class=\"line\">        //获取当前文件的绝对路径</span><br><span class=\"line\">        var filedir = path.join(filePath,filename);</span><br><span class=\"line\">        //根据文件路径获取文件信息，返回一个fs.Stats对象</span><br><span class=\"line\">        fs.stat(filedir,function(eror,stats)&#123;</span><br><span class=\"line\">          if(eror)&#123;</span><br><span class=\"line\">            console.warn(&apos;获取文件stats失败&apos;);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">            var isFile = stats.isFile();//是文件</span><br><span class=\"line\">            var isDir = stats.isDirectory();//是文件夹</span><br><span class=\"line\">            if(isFile)&#123;</span><br><span class=\"line\">              if (reg.test(filedir)) &#123;</span><br><span class=\"line\">                findurl(filedir);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(isDir)&#123;</span><br><span class=\"line\">              fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>　　通过nodejs+babel查找所有js文件中的URL<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">var path = require(&apos;path&apos;);</span><br><span class=\"line\">const babylon = require(&apos;babylon&apos;);</span><br><span class=\"line\">const Traverse = require(&apos;babel-traverse&apos;).default;</span><br><span class=\"line\">const generator = require(&apos;babel-generator&apos;).default;</span><br><span class=\"line\">const Types = require(&apos;babel-types&apos;);</span><br><span class=\"line\">const babel = require(&apos;babel-core&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">//解析需要遍历的文件夹，我这以E盘根目录为例</span><br><span class=\"line\">var filePath = path.resolve(&apos;C:\\\\Users\\\\Administrator.FO13YM4ZWHL5OAN\\\\Desktop\\\\babel\\\\AstForBabel\\\\conference&apos;);</span><br><span class=\"line\">var reg = /(.js)$/i;</span><br><span class=\"line\"></span><br><span class=\"line\">//调用文件遍历方法</span><br><span class=\"line\">fileDisplay(filePath);</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 文件遍历方法</span><br><span class=\"line\"> * @param filePath 需要遍历的文件路径</span><br><span class=\"line\"> */</span><br><span class=\"line\">console.log(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;程序开始&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">function findurl(filedir)&#123;</span><br><span class=\"line\">  // urlast转换 </span><br><span class=\"line\">  try&#123;</span><br><span class=\"line\">    var code =fs.readFileSync(filedir, &apos;utf8&apos;);</span><br><span class=\"line\">    var ast = babylon.parse(code);</span><br><span class=\"line\">    Traverse(ast,&#123;</span><br><span class=\"line\">      Identifier(path)&#123;</span><br><span class=\"line\">        if (path.node.name === &quot;url&quot;) &#123;</span><br><span class=\"line\">          var parentcode = generator(path.parent).code;</span><br><span class=\"line\">          var reg1 = /^(url)[:=\\s]/i;</span><br><span class=\"line\">          if (reg1.test(parentcode)) &#123;</span><br><span class=\"line\">            console.log(parentcode);</span><br><span class=\"line\">          &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    // console.log(filedir);</span><br><span class=\"line\">    fs.writeFile(filedir,generator(ast).code,function(err)&#123;</span><br><span class=\"line\">        if(err) console.log(&apos;写文件操作失败&apos;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125; catch(error)&#123;</span><br><span class=\"line\">    // console.log(&quot;!!!!!!!!!!&quot; + filedir);</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function fileDisplay(filePath)&#123;</span><br><span class=\"line\">  //根据文件路径读取文件，返回文件列表</span><br><span class=\"line\">  fs.readdir(filePath,function(err,files)&#123;</span><br><span class=\"line\">    if(err)&#123;</span><br><span class=\"line\">      console.warn(err)</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">      //遍历读取到的文件列表</span><br><span class=\"line\">      files.forEach(function(filename)&#123;</span><br><span class=\"line\">        //获取当前文件的绝对路径</span><br><span class=\"line\">        var filedir = path.join(filePath,filename);</span><br><span class=\"line\">        //根据文件路径获取文件信息，返回一个fs.Stats对象</span><br><span class=\"line\">        fs.stat(filedir,function(eror,stats)&#123;</span><br><span class=\"line\">          if(eror)&#123;</span><br><span class=\"line\">            console.warn(&apos;获取文件stats失败&apos;);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">            var isFile = stats.isFile();//是文件</span><br><span class=\"line\">            var isDir = stats.isDirectory();//是文件夹</span><br><span class=\"line\">            if(isFile)&#123;</span><br><span class=\"line\">              if (reg.test(filedir)) &#123;</span><br><span class=\"line\">                findurl(filedir);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(isDir)&#123;</span><br><span class=\"line\">              fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Hello World","date":"2018-04-21T05:54:00.000Z","comments":1,"_content":"\n　　Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server -p 4000\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/2018/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-4-21 13:54\ncomments: true\n\n---\n\n　　Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server -p 4000\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"2018/hello-world","published":1,"updated":"2018-08-21T05:33:07.834Z","layout":"post","photos":[],"link":"","_id":"cl3lhi1bk000g3wj4noszux6k","content":"<p>　　Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 4000</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>　　Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server -p 4000</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"Logger 基本用法","date":"2018-09-04T12:04:54.000Z","top":8,"_content":"　　简单的使用Logger进行日志处理\n<!-- more -->\n# 一、创建Logger对象\n`static Logger getLogger(String name) `\n　　为指定子系统查找或创建一个 logger。\n`static Logger getLogger(String name, String resourceBundleName) `\n　　为指定子系统查找或创建一个 logger。\n注意：name是Logger的名称，当名称相同时候，同一个名称的Logger只创建一个。\n# 二、Logger的级别\n　　比log4j的级别详细，全部定义在java.util.logging.Level里面。各级别按降序排列如下：\n>* SEVERE（最高值）\n* WARNING\n* INFO(默认)\n* CONFIG\n* FINE\n* FINER\n* FINEST（最低值）\n\n　　此外，还有一个级别 OFF，可用来关闭日志记录，使用级别 ALL 启用所有消息的日志记录。\nlogger默认的级别是INFO，比INFO更低的日志将不显示。\n# 三、Logger的Handler\n　　创建方法:\n　　`FileHandler fileHandler = new FileHandler(FILE_PATH, true);`\n　　`FILE_PATH:日志文件的路径，true：是否才用追加的方式写入日志文件`\n　　Handler 对象从 Logger 中获取日志信息，并将这些信息导出。例如，它可将这些信息写入控制台或文件中，也可以将这些信息发送到网络日志服务中，或将其转发到操作系统日志中。\n　　可通过执行 setLevel(Level.OFF) 来禁用 Handler，并可通过执行适当级别的 setLevel 来重新启用。\n　　Handler 类通常使用 LogManager 属性来设置 Handler 的 Filter、Formatter 和 Level 的默认值\n# 四、Logger的Formatter\n　　Formatter 为格式化 LogRecords 提供支持。 \n　　一般来说，每个日志记录 Handler 都有关联的 Formatter。Formatter 接受 LogRecord，并将它转换为一个字符串。 \n　　有些 formatter（如 XMLFormatter）需要围绕一组格式化记录来包装头部和尾部字符串。可以使用 getHeader 和 getTail 方法来获得这些字符串。\n　　LogRecord 对象用于在日志框架和单个日志 Handler 之间传递日志请求。\n　　`LogRecord(Level level, String msg)`\n　　Level用给定级别和消息值构造 LogRecord。\n# 五、简单案例\n　　日志处理类\n```\n    public class MyLog {\n        private static Logger logger = Logger.getLogger(MyLog.class.getName());\n\n        private static String FILE_PATH = \"E:\\\\MyLog\\\\winfo.log\";\n        static {\n            try {\n                FileHandler fileHandler = new FileHandler(FILE_PATH, true);\n                fileHandler.setEncoding(\"utf-8\");\n                MyLogFormatter sf = new MyLogFormatter();\n                fileHandler.setFormatter(sf);\n                logger.addHandler(fileHandler);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        public static void error(Object obj) {\n            //严重\n            LogRecord lr = new LogRecord(Level.SEVERE, obj.toString());\n            logger.log(lr);\n        }\n\n        public static void warn(Object obj) {\n            //警告\n            LogRecord lr = new LogRecord(Level.WARNING, obj.toString());\n            logger.log(lr);\n        }\n        public static void info(Object obj) {\n            //信息\n            LogRecord lr = new LogRecord(Level.INFO, obj.toString());\n            logger.log(lr);\n        }\n\n    }\n```\n　　日志信息处理类\n```\n    class OTLLogFormatter extends Formatter {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");\n\n        @Override\n        public String format(LogRecord record) {\n            return \"[\" + sdf.format(new Date()) + \"] [\" + record.getLevel() + \"] \"\n                    + record.getMessage().replace(\"\\r\", \" \").replace(\"\\n\", \" \") + \"\\r\\n\";\n        }\n    }\n```\n　　测试案例\n```\n\tpublic class LogTest {\n        @Test\n        public void test0(){\n            OTLLog.error(\"严重信息测试\");\n        \tOTLLog.warn(\"警告信息测试\");\n        \tOTLLog.info(\"信息输出测试\");\n        }\n\t}\n```","source":"_posts/2018/使用Logger进行日志处理.md","raw":"---\ntitle: Logger 基本用法\ndate: 2018-09-04 20:04:54\ntop: 8\ntags:\n---\n　　简单的使用Logger进行日志处理\n<!-- more -->\n# 一、创建Logger对象\n`static Logger getLogger(String name) `\n　　为指定子系统查找或创建一个 logger。\n`static Logger getLogger(String name, String resourceBundleName) `\n　　为指定子系统查找或创建一个 logger。\n注意：name是Logger的名称，当名称相同时候，同一个名称的Logger只创建一个。\n# 二、Logger的级别\n　　比log4j的级别详细，全部定义在java.util.logging.Level里面。各级别按降序排列如下：\n>* SEVERE（最高值）\n* WARNING\n* INFO(默认)\n* CONFIG\n* FINE\n* FINER\n* FINEST（最低值）\n\n　　此外，还有一个级别 OFF，可用来关闭日志记录，使用级别 ALL 启用所有消息的日志记录。\nlogger默认的级别是INFO，比INFO更低的日志将不显示。\n# 三、Logger的Handler\n　　创建方法:\n　　`FileHandler fileHandler = new FileHandler(FILE_PATH, true);`\n　　`FILE_PATH:日志文件的路径，true：是否才用追加的方式写入日志文件`\n　　Handler 对象从 Logger 中获取日志信息，并将这些信息导出。例如，它可将这些信息写入控制台或文件中，也可以将这些信息发送到网络日志服务中，或将其转发到操作系统日志中。\n　　可通过执行 setLevel(Level.OFF) 来禁用 Handler，并可通过执行适当级别的 setLevel 来重新启用。\n　　Handler 类通常使用 LogManager 属性来设置 Handler 的 Filter、Formatter 和 Level 的默认值\n# 四、Logger的Formatter\n　　Formatter 为格式化 LogRecords 提供支持。 \n　　一般来说，每个日志记录 Handler 都有关联的 Formatter。Formatter 接受 LogRecord，并将它转换为一个字符串。 \n　　有些 formatter（如 XMLFormatter）需要围绕一组格式化记录来包装头部和尾部字符串。可以使用 getHeader 和 getTail 方法来获得这些字符串。\n　　LogRecord 对象用于在日志框架和单个日志 Handler 之间传递日志请求。\n　　`LogRecord(Level level, String msg)`\n　　Level用给定级别和消息值构造 LogRecord。\n# 五、简单案例\n　　日志处理类\n```\n    public class MyLog {\n        private static Logger logger = Logger.getLogger(MyLog.class.getName());\n\n        private static String FILE_PATH = \"E:\\\\MyLog\\\\winfo.log\";\n        static {\n            try {\n                FileHandler fileHandler = new FileHandler(FILE_PATH, true);\n                fileHandler.setEncoding(\"utf-8\");\n                MyLogFormatter sf = new MyLogFormatter();\n                fileHandler.setFormatter(sf);\n                logger.addHandler(fileHandler);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        public static void error(Object obj) {\n            //严重\n            LogRecord lr = new LogRecord(Level.SEVERE, obj.toString());\n            logger.log(lr);\n        }\n\n        public static void warn(Object obj) {\n            //警告\n            LogRecord lr = new LogRecord(Level.WARNING, obj.toString());\n            logger.log(lr);\n        }\n        public static void info(Object obj) {\n            //信息\n            LogRecord lr = new LogRecord(Level.INFO, obj.toString());\n            logger.log(lr);\n        }\n\n    }\n```\n　　日志信息处理类\n```\n    class OTLLogFormatter extends Formatter {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");\n\n        @Override\n        public String format(LogRecord record) {\n            return \"[\" + sdf.format(new Date()) + \"] [\" + record.getLevel() + \"] \"\n                    + record.getMessage().replace(\"\\r\", \" \").replace(\"\\n\", \" \") + \"\\r\\n\";\n        }\n    }\n```\n　　测试案例\n```\n\tpublic class LogTest {\n        @Test\n        public void test0(){\n            OTLLog.error(\"严重信息测试\");\n        \tOTLLog.warn(\"警告信息测试\");\n        \tOTLLog.info(\"信息输出测试\");\n        }\n\t}\n```","slug":"2018/使用Logger进行日志处理","published":1,"updated":"2018-09-13T01:31:35.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bm000j3wj4415hpdt2","content":"<p>　　简单的使用Logger进行日志处理<br><a id=\"more\"></a></p>\n<h1 id=\"一、创建Logger对象\"><a href=\"#一、创建Logger对象\" class=\"headerlink\" title=\"一、创建Logger对象\"></a>一、创建Logger对象</h1><p><code>static Logger getLogger(String name)</code><br>　　为指定子系统查找或创建一个 logger。<br><code>static Logger getLogger(String name, String resourceBundleName)</code><br>　　为指定子系统查找或创建一个 logger。<br>注意：name是Logger的名称，当名称相同时候，同一个名称的Logger只创建一个。</p>\n<h1 id=\"二、Logger的级别\"><a href=\"#二、Logger的级别\" class=\"headerlink\" title=\"二、Logger的级别\"></a>二、Logger的级别</h1><p>　　比log4j的级别详细，全部定义在java.util.logging.Level里面。各级别按降序排列如下：</p>\n<blockquote>\n<ul>\n<li>SEVERE（最高值）</li>\n<li>WARNING</li>\n<li>INFO(默认)</li>\n<li>CONFIG</li>\n<li>FINE</li>\n<li>FINER</li>\n<li>FINEST（最低值）</li>\n</ul>\n</blockquote>\n<p>　　此外，还有一个级别 OFF，可用来关闭日志记录，使用级别 ALL 启用所有消息的日志记录。<br>logger默认的级别是INFO，比INFO更低的日志将不显示。</p>\n<h1 id=\"三、Logger的Handler\"><a href=\"#三、Logger的Handler\" class=\"headerlink\" title=\"三、Logger的Handler\"></a>三、Logger的Handler</h1><p>　　创建方法:<br>　　<code>FileHandler fileHandler = new FileHandler(FILE_PATH, true);</code><br>　　<code>FILE_PATH:日志文件的路径，true：是否才用追加的方式写入日志文件</code><br>　　Handler 对象从 Logger 中获取日志信息，并将这些信息导出。例如，它可将这些信息写入控制台或文件中，也可以将这些信息发送到网络日志服务中，或将其转发到操作系统日志中。<br>　　可通过执行 setLevel(Level.OFF) 来禁用 Handler，并可通过执行适当级别的 setLevel 来重新启用。<br>　　Handler 类通常使用 LogManager 属性来设置 Handler 的 Filter、Formatter 和 Level 的默认值</p>\n<h1 id=\"四、Logger的Formatter\"><a href=\"#四、Logger的Formatter\" class=\"headerlink\" title=\"四、Logger的Formatter\"></a>四、Logger的Formatter</h1><p>　　Formatter 为格式化 LogRecords 提供支持。<br>　　一般来说，每个日志记录 Handler 都有关联的 Formatter。Formatter 接受 LogRecord，并将它转换为一个字符串。<br>　　有些 formatter（如 XMLFormatter）需要围绕一组格式化记录来包装头部和尾部字符串。可以使用 getHeader 和 getTail 方法来获得这些字符串。<br>　　LogRecord 对象用于在日志框架和单个日志 Handler 之间传递日志请求。<br>　　<code>LogRecord(Level level, String msg)</code><br>　　Level用给定级别和消息值构造 LogRecord。</p>\n<h1 id=\"五、简单案例\"><a href=\"#五、简单案例\" class=\"headerlink\" title=\"五、简单案例\"></a>五、简单案例</h1><p>　　日志处理类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyLog &#123;</span><br><span class=\"line\">    private static Logger logger = Logger.getLogger(MyLog.class.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">    private static String FILE_PATH = &quot;E:\\\\MyLog\\\\winfo.log&quot;;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            FileHandler fileHandler = new FileHandler(FILE_PATH, true);</span><br><span class=\"line\">            fileHandler.setEncoding(&quot;utf-8&quot;);</span><br><span class=\"line\">            MyLogFormatter sf = new MyLogFormatter();</span><br><span class=\"line\">            fileHandler.setFormatter(sf);</span><br><span class=\"line\">            logger.addHandler(fileHandler);</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void error(Object obj) &#123;</span><br><span class=\"line\">        //严重</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.SEVERE, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void warn(Object obj) &#123;</span><br><span class=\"line\">        //警告</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.WARNING, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static void info(Object obj) &#123;</span><br><span class=\"line\">        //信息</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.INFO, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　日志信息处理类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class OTLLogFormatter extends Formatter &#123;</span><br><span class=\"line\">    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String format(LogRecord record) &#123;</span><br><span class=\"line\">        return &quot;[&quot; + sdf.format(new Date()) + &quot;] [&quot; + record.getLevel() + &quot;] &quot;</span><br><span class=\"line\">                + record.getMessage().replace(&quot;\\r&quot;, &quot; &quot;).replace(&quot;\\n&quot;, &quot; &quot;) + &quot;\\r\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　测试案例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class LogTest &#123;</span><br><span class=\"line\">       @Test</span><br><span class=\"line\">       public void test0()&#123;</span><br><span class=\"line\">           OTLLog.error(&quot;严重信息测试&quot;);</span><br><span class=\"line\">       \tOTLLog.warn(&quot;警告信息测试&quot;);</span><br><span class=\"line\">       \tOTLLog.info(&quot;信息输出测试&quot;);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>　　简单的使用Logger进行日志处理<br>","more":"</p>\n<h1 id=\"一、创建Logger对象\"><a href=\"#一、创建Logger对象\" class=\"headerlink\" title=\"一、创建Logger对象\"></a>一、创建Logger对象</h1><p><code>static Logger getLogger(String name)</code><br>　　为指定子系统查找或创建一个 logger。<br><code>static Logger getLogger(String name, String resourceBundleName)</code><br>　　为指定子系统查找或创建一个 logger。<br>注意：name是Logger的名称，当名称相同时候，同一个名称的Logger只创建一个。</p>\n<h1 id=\"二、Logger的级别\"><a href=\"#二、Logger的级别\" class=\"headerlink\" title=\"二、Logger的级别\"></a>二、Logger的级别</h1><p>　　比log4j的级别详细，全部定义在java.util.logging.Level里面。各级别按降序排列如下：</p>\n<blockquote>\n<ul>\n<li>SEVERE（最高值）</li>\n<li>WARNING</li>\n<li>INFO(默认)</li>\n<li>CONFIG</li>\n<li>FINE</li>\n<li>FINER</li>\n<li>FINEST（最低值）</li>\n</ul>\n</blockquote>\n<p>　　此外，还有一个级别 OFF，可用来关闭日志记录，使用级别 ALL 启用所有消息的日志记录。<br>logger默认的级别是INFO，比INFO更低的日志将不显示。</p>\n<h1 id=\"三、Logger的Handler\"><a href=\"#三、Logger的Handler\" class=\"headerlink\" title=\"三、Logger的Handler\"></a>三、Logger的Handler</h1><p>　　创建方法:<br>　　<code>FileHandler fileHandler = new FileHandler(FILE_PATH, true);</code><br>　　<code>FILE_PATH:日志文件的路径，true：是否才用追加的方式写入日志文件</code><br>　　Handler 对象从 Logger 中获取日志信息，并将这些信息导出。例如，它可将这些信息写入控制台或文件中，也可以将这些信息发送到网络日志服务中，或将其转发到操作系统日志中。<br>　　可通过执行 setLevel(Level.OFF) 来禁用 Handler，并可通过执行适当级别的 setLevel 来重新启用。<br>　　Handler 类通常使用 LogManager 属性来设置 Handler 的 Filter、Formatter 和 Level 的默认值</p>\n<h1 id=\"四、Logger的Formatter\"><a href=\"#四、Logger的Formatter\" class=\"headerlink\" title=\"四、Logger的Formatter\"></a>四、Logger的Formatter</h1><p>　　Formatter 为格式化 LogRecords 提供支持。<br>　　一般来说，每个日志记录 Handler 都有关联的 Formatter。Formatter 接受 LogRecord，并将它转换为一个字符串。<br>　　有些 formatter（如 XMLFormatter）需要围绕一组格式化记录来包装头部和尾部字符串。可以使用 getHeader 和 getTail 方法来获得这些字符串。<br>　　LogRecord 对象用于在日志框架和单个日志 Handler 之间传递日志请求。<br>　　<code>LogRecord(Level level, String msg)</code><br>　　Level用给定级别和消息值构造 LogRecord。</p>\n<h1 id=\"五、简单案例\"><a href=\"#五、简单案例\" class=\"headerlink\" title=\"五、简单案例\"></a>五、简单案例</h1><p>　　日志处理类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyLog &#123;</span><br><span class=\"line\">    private static Logger logger = Logger.getLogger(MyLog.class.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">    private static String FILE_PATH = &quot;E:\\\\MyLog\\\\winfo.log&quot;;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            FileHandler fileHandler = new FileHandler(FILE_PATH, true);</span><br><span class=\"line\">            fileHandler.setEncoding(&quot;utf-8&quot;);</span><br><span class=\"line\">            MyLogFormatter sf = new MyLogFormatter();</span><br><span class=\"line\">            fileHandler.setFormatter(sf);</span><br><span class=\"line\">            logger.addHandler(fileHandler);</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void error(Object obj) &#123;</span><br><span class=\"line\">        //严重</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.SEVERE, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void warn(Object obj) &#123;</span><br><span class=\"line\">        //警告</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.WARNING, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static void info(Object obj) &#123;</span><br><span class=\"line\">        //信息</span><br><span class=\"line\">        LogRecord lr = new LogRecord(Level.INFO, obj.toString());</span><br><span class=\"line\">        logger.log(lr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　日志信息处理类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class OTLLogFormatter extends Formatter &#123;</span><br><span class=\"line\">    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String format(LogRecord record) &#123;</span><br><span class=\"line\">        return &quot;[&quot; + sdf.format(new Date()) + &quot;] [&quot; + record.getLevel() + &quot;] &quot;</span><br><span class=\"line\">                + record.getMessage().replace(&quot;\\r&quot;, &quot; &quot;).replace(&quot;\\n&quot;, &quot; &quot;) + &quot;\\r\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　测试案例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class LogTest &#123;</span><br><span class=\"line\">       @Test</span><br><span class=\"line\">       public void test0()&#123;</span><br><span class=\"line\">           OTLLog.error(&quot;严重信息测试&quot;);</span><br><span class=\"line\">       \tOTLLog.warn(&quot;警告信息测试&quot;);</span><br><span class=\"line\">       \tOTLLog.info(&quot;信息输出测试&quot;);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Jsoup","dete":"2018-08-19T06:09:25.000Z","top":9,"_content":"　　对HTML页面的解析，之前我一般使用HTMLParser，详细见HTMLParser的学习系列 - 学习总结，但是这个项目已经停止更新。现在比较好的解析HTML的控件是Jsoup。本文对Jsoup的用法做个总结.\n<!-- more -->\n#### 1. 概述\n\n　　Jsoup的主要功能有三部分组成：\n　　`a) 从字符串，网页，本地文件等方式生成Documentn`\n　　`b) 在生成Doucment后，根据Dom和css或类似jquery的selector语法获取Element，然后再从Elements中获取节点属性、文本、html`\n　　`c) 对Element的进行操作，包括HTML的值、节点内容的值和设置节点属性的值\n下方每节对以上三点进行逐一演示。`\n\n###### POM.xml 配置\n\n```\n<dependency>\n    <groupId>org.jsoup</groupId>\n    <artifactId>jsoup</artifactId>\n    <version>1.10.2</version>\n</dependency>\n```\n\n#### 2.生成Document\n　　JSOUP通过不同方式生成Document，主要有以下三种：\n　　`a) 字符串`\n　　`b) 网页`\n　　`c) 本地文件`\n###### 2.1 从字符串生成Document\n　　关键方法： Jsoup.parse(String html)\n```\n\tpublic void fromString() {\n        String html = \"<html><head><title>First parse</title></head>\"\n                + \"<body><p>Parsed HTML into a doc.</p></body></html>\";\n        Document document = Jsoup.parse(html);\n    }\n```\n\n###### 2.2 从网页生成Document\n　　关键方法： Jsoup.connect()\n```\n    public void fromURL() {\n        Document document;\n        try {\n        \t//通过URL+访问的方法获取Document\n            document = Jsoup.connect(\"https://www.baidu.com/\").get();\n            // 从document中获取title值\n            String title = document.title();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n```\n###### 2.3 从本地文件生成Document\n　　关键方法： Jsoup.connect(File file,String charset)\n```\n    public void fromFile(){\n            File file = new File(\"filePath\");\n            try {\n                //通过文件+编码集来获取Document\n                Document document = Jsoup.parse(file,\"utf-8\");\n                System.out.println(document.title());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n```\n#### 3. 获取Element及节点属性、文本、html\n　　在上一节中已经生成Document，下面就可以对这个document进行操作，操作的主要单位是Element，下面介绍如何选取elment及获取elment的内容。\n###### 3.1 获取Element，获取的方式分为二种:\n　　`a) 通过DOM解析来获取;`\n```\n    public void extractDataByDOM() throws IOException{\n        Document doc = Jsoup.connect(\"https://www.baidu.com/\").get();\n        Element lg = doc.getElementById(\"lg\");\n        logger.info(\"getElementById lg = {}\", lg);\n        Elements links = doc.getElementsByTag(\"a\");\n        for (Element link : links) {\n          String linkHref = link.attr(\"href\");\n          String linkText = link.text();\n          logger.info(\"linkHref={}, linkText={}\",linkHref, linkText);\n        }\n    }\n```\n　　`b) 通过css或类似jquery的selector语法来获取；`\n```\n    public void select4J() throws IOException{\n        File input = new File(\"filePath\");\n        Document document = Jsoup.parse(input, \"UTF-8\", \"http://example.com/\");\n\n        // 获取所有的a节点\n        Elements links = document.select(\"a[href]\");\n        System.out.println(links);\n        // 获取img的src以.png结果结尾\n        Elements pngs = document.select(\"img[src$=.png]\");\n        System.out.println(pngs);\n        // 获取class=masthead的div节点\n        Element masthead = document.select(\"div.masthead\").first();\n        System.out.println(masthead);\n\n        // 获取class=r的h3节点下面的a节点\n        Elements resultLinks = document.select(\"h3.r > a\");\n        System.out.println(resultLinks);\n\n    }\n```\n###### 3.2 获取节点属性、文本、html\n###### 3.3 Select选择器\n#### 4. 设置节点值\n　　设置节点值，主要有在以下方式：\n　　`a) 设置节点HTML的值`\n　　`b) 设置节点内容的值`\n　　`c) 设置节点属性的值`\n###### 4.1 设置节点HTML的值\n　　1. Element.html：使用新的HTML替换旧的值\n　　2. Element.prepend：将新html添加到指定节点内部的最前面\n　　3. Element.append：将新html添加到指定节点内部的最后面\n　　4. Element.wrap:将指定节点封装到html最里面\n\n###### 4.2 设置节点内容的值\n　　1. Element.text: 完全替换内容\n　　2. Element.prepend:在节点的内容最前面加内容\n　　3. Element.append：在节点的内容最后面加内容\n\n###### 4.3 设置节点属性的值\n　　1. element.attr: 设置属性\n　　2. element.addClass: 设置class\n","source":"_posts/2018/jsoup.md","raw":"---\ntitle: Jsoup\ndete: 2018-08-19 14:09:25\ntop: 9\ntags:\n---\n　　对HTML页面的解析，之前我一般使用HTMLParser，详细见HTMLParser的学习系列 - 学习总结，但是这个项目已经停止更新。现在比较好的解析HTML的控件是Jsoup。本文对Jsoup的用法做个总结.\n<!-- more -->\n#### 1. 概述\n\n　　Jsoup的主要功能有三部分组成：\n　　`a) 从字符串，网页，本地文件等方式生成Documentn`\n　　`b) 在生成Doucment后，根据Dom和css或类似jquery的selector语法获取Element，然后再从Elements中获取节点属性、文本、html`\n　　`c) 对Element的进行操作，包括HTML的值、节点内容的值和设置节点属性的值\n下方每节对以上三点进行逐一演示。`\n\n###### POM.xml 配置\n\n```\n<dependency>\n    <groupId>org.jsoup</groupId>\n    <artifactId>jsoup</artifactId>\n    <version>1.10.2</version>\n</dependency>\n```\n\n#### 2.生成Document\n　　JSOUP通过不同方式生成Document，主要有以下三种：\n　　`a) 字符串`\n　　`b) 网页`\n　　`c) 本地文件`\n###### 2.1 从字符串生成Document\n　　关键方法： Jsoup.parse(String html)\n```\n\tpublic void fromString() {\n        String html = \"<html><head><title>First parse</title></head>\"\n                + \"<body><p>Parsed HTML into a doc.</p></body></html>\";\n        Document document = Jsoup.parse(html);\n    }\n```\n\n###### 2.2 从网页生成Document\n　　关键方法： Jsoup.connect()\n```\n    public void fromURL() {\n        Document document;\n        try {\n        \t//通过URL+访问的方法获取Document\n            document = Jsoup.connect(\"https://www.baidu.com/\").get();\n            // 从document中获取title值\n            String title = document.title();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n```\n###### 2.3 从本地文件生成Document\n　　关键方法： Jsoup.connect(File file,String charset)\n```\n    public void fromFile(){\n            File file = new File(\"filePath\");\n            try {\n                //通过文件+编码集来获取Document\n                Document document = Jsoup.parse(file,\"utf-8\");\n                System.out.println(document.title());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n```\n#### 3. 获取Element及节点属性、文本、html\n　　在上一节中已经生成Document，下面就可以对这个document进行操作，操作的主要单位是Element，下面介绍如何选取elment及获取elment的内容。\n###### 3.1 获取Element，获取的方式分为二种:\n　　`a) 通过DOM解析来获取;`\n```\n    public void extractDataByDOM() throws IOException{\n        Document doc = Jsoup.connect(\"https://www.baidu.com/\").get();\n        Element lg = doc.getElementById(\"lg\");\n        logger.info(\"getElementById lg = {}\", lg);\n        Elements links = doc.getElementsByTag(\"a\");\n        for (Element link : links) {\n          String linkHref = link.attr(\"href\");\n          String linkText = link.text();\n          logger.info(\"linkHref={}, linkText={}\",linkHref, linkText);\n        }\n    }\n```\n　　`b) 通过css或类似jquery的selector语法来获取；`\n```\n    public void select4J() throws IOException{\n        File input = new File(\"filePath\");\n        Document document = Jsoup.parse(input, \"UTF-8\", \"http://example.com/\");\n\n        // 获取所有的a节点\n        Elements links = document.select(\"a[href]\");\n        System.out.println(links);\n        // 获取img的src以.png结果结尾\n        Elements pngs = document.select(\"img[src$=.png]\");\n        System.out.println(pngs);\n        // 获取class=masthead的div节点\n        Element masthead = document.select(\"div.masthead\").first();\n        System.out.println(masthead);\n\n        // 获取class=r的h3节点下面的a节点\n        Elements resultLinks = document.select(\"h3.r > a\");\n        System.out.println(resultLinks);\n\n    }\n```\n###### 3.2 获取节点属性、文本、html\n###### 3.3 Select选择器\n#### 4. 设置节点值\n　　设置节点值，主要有在以下方式：\n　　`a) 设置节点HTML的值`\n　　`b) 设置节点内容的值`\n　　`c) 设置节点属性的值`\n###### 4.1 设置节点HTML的值\n　　1. Element.html：使用新的HTML替换旧的值\n　　2. Element.prepend：将新html添加到指定节点内部的最前面\n　　3. Element.append：将新html添加到指定节点内部的最后面\n　　4. Element.wrap:将指定节点封装到html最里面\n\n###### 4.2 设置节点内容的值\n　　1. Element.text: 完全替换内容\n　　2. Element.prepend:在节点的内容最前面加内容\n　　3. Element.append：在节点的内容最后面加内容\n\n###### 4.3 设置节点属性的值\n　　1. element.attr: 设置属性\n　　2. element.addClass: 设置class\n","slug":"2018/jsoup","published":1,"date":"2022-05-25T03:01:22.926Z","updated":"2018-09-13T06:07:14.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bn000l3wj46x1kbkzq","content":"<p>　　对HTML页面的解析，之前我一般使用HTMLParser，详细见HTMLParser的学习系列 - 学习总结，但是这个项目已经停止更新。现在比较好的解析HTML的控件是Jsoup。本文对Jsoup的用法做个总结.<br><a id=\"more\"></a></p>\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><p>　　Jsoup的主要功能有三部分组成：<br>　　<code>a) 从字符串，网页，本地文件等方式生成Documentn</code><br>　　<code>b) 在生成Doucment后，根据Dom和css或类似jquery的selector语法获取Element，然后再从Elements中获取节点属性、文本、html</code><br>　　<code>c) 对Element的进行操作，包括HTML的值、节点内容的值和设置节点属性的值\n下方每节对以上三点进行逐一演示。</code></p>\n<h6 id=\"POM-xml-配置\"><a href=\"#POM-xml-配置\" class=\"headerlink\" title=\"POM.xml 配置\"></a>POM.xml 配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.10.2&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-生成Document\"><a href=\"#2-生成Document\" class=\"headerlink\" title=\"2.生成Document\"></a>2.生成Document</h4><p>　　JSOUP通过不同方式生成Document，主要有以下三种：<br>　　<code>a) 字符串</code><br>　　<code>b) 网页</code><br>　　<code>c) 本地文件</code></p>\n<h6 id=\"2-1-从字符串生成Document\"><a href=\"#2-1-从字符串生成Document\" class=\"headerlink\" title=\"2.1 从字符串生成Document\"></a>2.1 从字符串生成Document</h6><p>　　关键方法： Jsoup.parse(String html)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromString() &#123;</span><br><span class=\"line\">       String html = &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/title&gt;&lt;/head&gt;&quot;</span><br><span class=\"line\">               + &quot;&lt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;;</span><br><span class=\"line\">       Document document = Jsoup.parse(html);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"2-2-从网页生成Document\"><a href=\"#2-2-从网页生成Document\" class=\"headerlink\" title=\"2.2 从网页生成Document\"></a>2.2 从网页生成Document</h6><p>　　关键方法： Jsoup.connect()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromURL() &#123;</span><br><span class=\"line\">    Document document;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">    \t//通过URL+访问的方法获取Document</span><br><span class=\"line\">        document = Jsoup.connect(&quot;https://www.baidu.com/&quot;).get();</span><br><span class=\"line\">        // 从document中获取title值</span><br><span class=\"line\">        String title = document.title();</span><br><span class=\"line\">    &#125; catch (IOException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"2-3-从本地文件生成Document\"><a href=\"#2-3-从本地文件生成Document\" class=\"headerlink\" title=\"2.3 从本地文件生成Document\"></a>2.3 从本地文件生成Document</h6><p>　　关键方法： Jsoup.connect(File file,String charset)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromFile()&#123;</span><br><span class=\"line\">        File file = new File(&quot;filePath&quot;);</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //通过文件+编码集来获取Document</span><br><span class=\"line\">            Document document = Jsoup.parse(file,&quot;utf-8&quot;);</span><br><span class=\"line\">            System.out.println(document.title());</span><br><span class=\"line\">        &#125; catch (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-获取Element及节点属性、文本、html\"><a href=\"#3-获取Element及节点属性、文本、html\" class=\"headerlink\" title=\"3. 获取Element及节点属性、文本、html\"></a>3. 获取Element及节点属性、文本、html</h4><p>　　在上一节中已经生成Document，下面就可以对这个document进行操作，操作的主要单位是Element，下面介绍如何选取elment及获取elment的内容。</p>\n<h6 id=\"3-1-获取Element，获取的方式分为二种\"><a href=\"#3-1-获取Element，获取的方式分为二种\" class=\"headerlink\" title=\"3.1 获取Element，获取的方式分为二种:\"></a>3.1 获取Element，获取的方式分为二种:</h6><p>　　<code>a) 通过DOM解析来获取;</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void extractDataByDOM() throws IOException&#123;</span><br><span class=\"line\">    Document doc = Jsoup.connect(&quot;https://www.baidu.com/&quot;).get();</span><br><span class=\"line\">    Element lg = doc.getElementById(&quot;lg&quot;);</span><br><span class=\"line\">    logger.info(&quot;getElementById lg = &#123;&#125;&quot;, lg);</span><br><span class=\"line\">    Elements links = doc.getElementsByTag(&quot;a&quot;);</span><br><span class=\"line\">    for (Element link : links) &#123;</span><br><span class=\"line\">      String linkHref = link.attr(&quot;href&quot;);</span><br><span class=\"line\">      String linkText = link.text();</span><br><span class=\"line\">      logger.info(&quot;linkHref=&#123;&#125;, linkText=&#123;&#125;&quot;,linkHref, linkText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>b) 通过css或类似jquery的selector语法来获取；</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void select4J() throws IOException&#123;</span><br><span class=\"line\">    File input = new File(&quot;filePath&quot;);</span><br><span class=\"line\">    Document document = Jsoup.parse(input, &quot;UTF-8&quot;, &quot;http://example.com/&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取所有的a节点</span><br><span class=\"line\">    Elements links = document.select(&quot;a[href]&quot;);</span><br><span class=\"line\">    System.out.println(links);</span><br><span class=\"line\">    // 获取img的src以.png结果结尾</span><br><span class=\"line\">    Elements pngs = document.select(&quot;img[src$=.png]&quot;);</span><br><span class=\"line\">    System.out.println(pngs);</span><br><span class=\"line\">    // 获取class=masthead的div节点</span><br><span class=\"line\">    Element masthead = document.select(&quot;div.masthead&quot;).first();</span><br><span class=\"line\">    System.out.println(masthead);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取class=r的h3节点下面的a节点</span><br><span class=\"line\">    Elements resultLinks = document.select(&quot;h3.r &gt; a&quot;);</span><br><span class=\"line\">    System.out.println(resultLinks);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-2-获取节点属性、文本、html\"><a href=\"#3-2-获取节点属性、文本、html\" class=\"headerlink\" title=\"3.2 获取节点属性、文本、html\"></a>3.2 获取节点属性、文本、html</h6><h6 id=\"3-3-Select选择器\"><a href=\"#3-3-Select选择器\" class=\"headerlink\" title=\"3.3 Select选择器\"></a>3.3 Select选择器</h6><h4 id=\"4-设置节点值\"><a href=\"#4-设置节点值\" class=\"headerlink\" title=\"4. 设置节点值\"></a>4. 设置节点值</h4><p>　　设置节点值，主要有在以下方式：<br>　　<code>a) 设置节点HTML的值</code><br>　　<code>b) 设置节点内容的值</code><br>　　<code>c) 设置节点属性的值</code></p>\n<h6 id=\"4-1-设置节点HTML的值\"><a href=\"#4-1-设置节点HTML的值\" class=\"headerlink\" title=\"4.1 设置节点HTML的值\"></a>4.1 设置节点HTML的值</h6><p>　　1. Element.html：使用新的HTML替换旧的值<br>　　2. Element.prepend：将新html添加到指定节点内部的最前面<br>　　3. Element.append：将新html添加到指定节点内部的最后面<br>　　4. Element.wrap:将指定节点封装到html最里面</p>\n<h6 id=\"4-2-设置节点内容的值\"><a href=\"#4-2-设置节点内容的值\" class=\"headerlink\" title=\"4.2 设置节点内容的值\"></a>4.2 设置节点内容的值</h6><p>　　1. Element.text: 完全替换内容<br>　　2. Element.prepend:在节点的内容最前面加内容<br>　　3. Element.append：在节点的内容最后面加内容</p>\n<h6 id=\"4-3-设置节点属性的值\"><a href=\"#4-3-设置节点属性的值\" class=\"headerlink\" title=\"4.3 设置节点属性的值\"></a>4.3 设置节点属性的值</h6><p>　　1. element.attr: 设置属性<br>　　2. element.addClass: 设置class</p>\n","site":{"data":{}},"excerpt":"<p>　　对HTML页面的解析，之前我一般使用HTMLParser，详细见HTMLParser的学习系列 - 学习总结，但是这个项目已经停止更新。现在比较好的解析HTML的控件是Jsoup。本文对Jsoup的用法做个总结.<br>","more":"</p>\n<h4 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h4><p>　　Jsoup的主要功能有三部分组成：<br>　　<code>a) 从字符串，网页，本地文件等方式生成Documentn</code><br>　　<code>b) 在生成Doucment后，根据Dom和css或类似jquery的selector语法获取Element，然后再从Elements中获取节点属性、文本、html</code><br>　　<code>c) 对Element的进行操作，包括HTML的值、节点内容的值和设置节点属性的值\n下方每节对以上三点进行逐一演示。</code></p>\n<h6 id=\"POM-xml-配置\"><a href=\"#POM-xml-配置\" class=\"headerlink\" title=\"POM.xml 配置\"></a>POM.xml 配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.10.2&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-生成Document\"><a href=\"#2-生成Document\" class=\"headerlink\" title=\"2.生成Document\"></a>2.生成Document</h4><p>　　JSOUP通过不同方式生成Document，主要有以下三种：<br>　　<code>a) 字符串</code><br>　　<code>b) 网页</code><br>　　<code>c) 本地文件</code></p>\n<h6 id=\"2-1-从字符串生成Document\"><a href=\"#2-1-从字符串生成Document\" class=\"headerlink\" title=\"2.1 从字符串生成Document\"></a>2.1 从字符串生成Document</h6><p>　　关键方法： Jsoup.parse(String html)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromString() &#123;</span><br><span class=\"line\">       String html = &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/title&gt;&lt;/head&gt;&quot;</span><br><span class=\"line\">               + &quot;&lt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;;</span><br><span class=\"line\">       Document document = Jsoup.parse(html);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"2-2-从网页生成Document\"><a href=\"#2-2-从网页生成Document\" class=\"headerlink\" title=\"2.2 从网页生成Document\"></a>2.2 从网页生成Document</h6><p>　　关键方法： Jsoup.connect()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromURL() &#123;</span><br><span class=\"line\">    Document document;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">    \t//通过URL+访问的方法获取Document</span><br><span class=\"line\">        document = Jsoup.connect(&quot;https://www.baidu.com/&quot;).get();</span><br><span class=\"line\">        // 从document中获取title值</span><br><span class=\"line\">        String title = document.title();</span><br><span class=\"line\">    &#125; catch (IOException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"2-3-从本地文件生成Document\"><a href=\"#2-3-从本地文件生成Document\" class=\"headerlink\" title=\"2.3 从本地文件生成Document\"></a>2.3 从本地文件生成Document</h6><p>　　关键方法： Jsoup.connect(File file,String charset)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void fromFile()&#123;</span><br><span class=\"line\">        File file = new File(&quot;filePath&quot;);</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //通过文件+编码集来获取Document</span><br><span class=\"line\">            Document document = Jsoup.parse(file,&quot;utf-8&quot;);</span><br><span class=\"line\">            System.out.println(document.title());</span><br><span class=\"line\">        &#125; catch (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-获取Element及节点属性、文本、html\"><a href=\"#3-获取Element及节点属性、文本、html\" class=\"headerlink\" title=\"3. 获取Element及节点属性、文本、html\"></a>3. 获取Element及节点属性、文本、html</h4><p>　　在上一节中已经生成Document，下面就可以对这个document进行操作，操作的主要单位是Element，下面介绍如何选取elment及获取elment的内容。</p>\n<h6 id=\"3-1-获取Element，获取的方式分为二种\"><a href=\"#3-1-获取Element，获取的方式分为二种\" class=\"headerlink\" title=\"3.1 获取Element，获取的方式分为二种:\"></a>3.1 获取Element，获取的方式分为二种:</h6><p>　　<code>a) 通过DOM解析来获取;</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void extractDataByDOM() throws IOException&#123;</span><br><span class=\"line\">    Document doc = Jsoup.connect(&quot;https://www.baidu.com/&quot;).get();</span><br><span class=\"line\">    Element lg = doc.getElementById(&quot;lg&quot;);</span><br><span class=\"line\">    logger.info(&quot;getElementById lg = &#123;&#125;&quot;, lg);</span><br><span class=\"line\">    Elements links = doc.getElementsByTag(&quot;a&quot;);</span><br><span class=\"line\">    for (Element link : links) &#123;</span><br><span class=\"line\">      String linkHref = link.attr(&quot;href&quot;);</span><br><span class=\"line\">      String linkText = link.text();</span><br><span class=\"line\">      logger.info(&quot;linkHref=&#123;&#125;, linkText=&#123;&#125;&quot;,linkHref, linkText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>b) 通过css或类似jquery的selector语法来获取；</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void select4J() throws IOException&#123;</span><br><span class=\"line\">    File input = new File(&quot;filePath&quot;);</span><br><span class=\"line\">    Document document = Jsoup.parse(input, &quot;UTF-8&quot;, &quot;http://example.com/&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取所有的a节点</span><br><span class=\"line\">    Elements links = document.select(&quot;a[href]&quot;);</span><br><span class=\"line\">    System.out.println(links);</span><br><span class=\"line\">    // 获取img的src以.png结果结尾</span><br><span class=\"line\">    Elements pngs = document.select(&quot;img[src$=.png]&quot;);</span><br><span class=\"line\">    System.out.println(pngs);</span><br><span class=\"line\">    // 获取class=masthead的div节点</span><br><span class=\"line\">    Element masthead = document.select(&quot;div.masthead&quot;).first();</span><br><span class=\"line\">    System.out.println(masthead);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取class=r的h3节点下面的a节点</span><br><span class=\"line\">    Elements resultLinks = document.select(&quot;h3.r &gt; a&quot;);</span><br><span class=\"line\">    System.out.println(resultLinks);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-2-获取节点属性、文本、html\"><a href=\"#3-2-获取节点属性、文本、html\" class=\"headerlink\" title=\"3.2 获取节点属性、文本、html\"></a>3.2 获取节点属性、文本、html</h6><h6 id=\"3-3-Select选择器\"><a href=\"#3-3-Select选择器\" class=\"headerlink\" title=\"3.3 Select选择器\"></a>3.3 Select选择器</h6><h4 id=\"4-设置节点值\"><a href=\"#4-设置节点值\" class=\"headerlink\" title=\"4. 设置节点值\"></a>4. 设置节点值</h4><p>　　设置节点值，主要有在以下方式：<br>　　<code>a) 设置节点HTML的值</code><br>　　<code>b) 设置节点内容的值</code><br>　　<code>c) 设置节点属性的值</code></p>\n<h6 id=\"4-1-设置节点HTML的值\"><a href=\"#4-1-设置节点HTML的值\" class=\"headerlink\" title=\"4.1 设置节点HTML的值\"></a>4.1 设置节点HTML的值</h6><p>　　1. Element.html：使用新的HTML替换旧的值<br>　　2. Element.prepend：将新html添加到指定节点内部的最前面<br>　　3. Element.append：将新html添加到指定节点内部的最后面<br>　　4. Element.wrap:将指定节点封装到html最里面</p>\n<h6 id=\"4-2-设置节点内容的值\"><a href=\"#4-2-设置节点内容的值\" class=\"headerlink\" title=\"4.2 设置节点内容的值\"></a>4.2 设置节点内容的值</h6><p>　　1. Element.text: 完全替换内容<br>　　2. Element.prepend:在节点的内容最前面加内容<br>　　3. Element.append：在节点的内容最后面加内容</p>\n<h6 id=\"4-3-设置节点属性的值\"><a href=\"#4-3-设置节点属性的值\" class=\"headerlink\" title=\"4.3 设置节点属性的值\"></a>4.3 设置节点属性的值</h6><p>　　1. element.attr: 设置属性<br>　　2. element.addClass: 设置class</p>"},{"title":"坤哥：相识度匹配","date":"2018-08-25T07:52:49.000Z","top":8,"_content":"　　应室友坤哥需要，做了一个字符串处理小Demo，主要匹配连个字符串的相似程度。\n<!-- more -->\n　　应坤哥要求做一个小功能要求如下：\n　　有两个酒店名列表:A、B,将俩个列表中的酒店两两进行匹配，从B酒店列表中找出对应A中酒店相似度最高的酒店，并两两一组进行展示。\n```\n    import org.junit.Test;\n    import java.util.HashMap;\n\n    public class Test4{\n        public int xsd(String s1 ,String s2){\n            char[] chars1 = s1.replace(\"(\",\"\").replace(\")\",\"\")\n                    .replace(\"酒店\",\"\").replace(\"店\",\"\")\n                    .toCharArray();\n            char[] chars2 = s2.replace(\"(\",\"\").replace(\")\",\"\")\n                    .replace(\"酒店\",\"\").replace(\"店\",\"\")\n                    .toCharArray();\n            int a = 0;\n            for (char c1:chars1) {\n                for (char c2: chars2 ) {\n                    if (c1==c2){\n                        a ++;\n                    }\n                }\n            }\n            return a;\n        }\n        @Test\n        public void test(){\n            String str1 = \"莫泰连锁酒店(孙权路店)，怡莱连锁酒店(杭州保俶精品店)，杭州米兰风尚酒店，浙江梅地亚宾馆(杭州)，杭州宏丽宾馆，怡莱连锁酒店(杭州解放路精品店)，浙江紫晶大酒店，杭州索菲特世外桃源度假酒店，杭州国际假日酒店，杭州开元名都大酒店，杭州瑞豪中心酒店，杭州新开元大酒店，杭州香格里拉饭店，杭州华辰银座酒店，杭州金马饭店，杭州海外海·西溪宾馆，杭州福朋喜来登酒店，杭州国大雷迪森广场酒店\";\n            String str2 = \"富阳国际贸易中心大酒店，富阳太阳城堡大酒店，富阳半岛会所酒店，怡莱连锁酒店(杭州保俶店)，莫泰连锁酒店(富阳孙权路店)，富春山居度假村，郑州悦莱酒店，郑州德盛易客酒店，郑州海天大酒店，米兰风尚大酒店，浙江梅地亚宾馆，宏丽宾馆，怡莱连锁酒店(解放路精品店)，浙江紫晶大酒店，索菲特世外桃源度假酒店，杭州国际假日酒店，开元名都酒店，杭州海外海西溪宾馆\";\n            String[] strings1 = str1.split(\"，\");\n            String[] strings2 = str2.split(\"，\");\n            int a = 0;\n            HashMap<String,String> map = new HashMap<>();\n            for (String s1:strings1) {\n                for (String s2:strings2) {\n                   int b = xsd(s1,s2);\n                   if (b>=3&&b>a){\n                       map.put(s1,s2);\n                       a = b;\n                   }else{\n                       map.put(s1,null);\n                   }\n                }\n                a = 0;\n            }\n            for (String s:map.toString().split(\", \")) {\n                System.out.println(s);\n            }\n        }\n    }\n```","source":"_posts/2018/坤哥：相识度匹配.md","raw":"---\ntitle: 坤哥：相识度匹配\ndate: 2018-08-25 15:52:49\ntop: 8\ntags:\n---\n　　应室友坤哥需要，做了一个字符串处理小Demo，主要匹配连个字符串的相似程度。\n<!-- more -->\n　　应坤哥要求做一个小功能要求如下：\n　　有两个酒店名列表:A、B,将俩个列表中的酒店两两进行匹配，从B酒店列表中找出对应A中酒店相似度最高的酒店，并两两一组进行展示。\n```\n    import org.junit.Test;\n    import java.util.HashMap;\n\n    public class Test4{\n        public int xsd(String s1 ,String s2){\n            char[] chars1 = s1.replace(\"(\",\"\").replace(\")\",\"\")\n                    .replace(\"酒店\",\"\").replace(\"店\",\"\")\n                    .toCharArray();\n            char[] chars2 = s2.replace(\"(\",\"\").replace(\")\",\"\")\n                    .replace(\"酒店\",\"\").replace(\"店\",\"\")\n                    .toCharArray();\n            int a = 0;\n            for (char c1:chars1) {\n                for (char c2: chars2 ) {\n                    if (c1==c2){\n                        a ++;\n                    }\n                }\n            }\n            return a;\n        }\n        @Test\n        public void test(){\n            String str1 = \"莫泰连锁酒店(孙权路店)，怡莱连锁酒店(杭州保俶精品店)，杭州米兰风尚酒店，浙江梅地亚宾馆(杭州)，杭州宏丽宾馆，怡莱连锁酒店(杭州解放路精品店)，浙江紫晶大酒店，杭州索菲特世外桃源度假酒店，杭州国际假日酒店，杭州开元名都大酒店，杭州瑞豪中心酒店，杭州新开元大酒店，杭州香格里拉饭店，杭州华辰银座酒店，杭州金马饭店，杭州海外海·西溪宾馆，杭州福朋喜来登酒店，杭州国大雷迪森广场酒店\";\n            String str2 = \"富阳国际贸易中心大酒店，富阳太阳城堡大酒店，富阳半岛会所酒店，怡莱连锁酒店(杭州保俶店)，莫泰连锁酒店(富阳孙权路店)，富春山居度假村，郑州悦莱酒店，郑州德盛易客酒店，郑州海天大酒店，米兰风尚大酒店，浙江梅地亚宾馆，宏丽宾馆，怡莱连锁酒店(解放路精品店)，浙江紫晶大酒店，索菲特世外桃源度假酒店，杭州国际假日酒店，开元名都酒店，杭州海外海西溪宾馆\";\n            String[] strings1 = str1.split(\"，\");\n            String[] strings2 = str2.split(\"，\");\n            int a = 0;\n            HashMap<String,String> map = new HashMap<>();\n            for (String s1:strings1) {\n                for (String s2:strings2) {\n                   int b = xsd(s1,s2);\n                   if (b>=3&&b>a){\n                       map.put(s1,s2);\n                       a = b;\n                   }else{\n                       map.put(s1,null);\n                   }\n                }\n                a = 0;\n            }\n            for (String s:map.toString().split(\", \")) {\n                System.out.println(s);\n            }\n        }\n    }\n```","slug":"2018/坤哥：相识度匹配","published":1,"updated":"2018-09-13T01:57:23.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bp000n3wj4mfxongj0","content":"<p>　　应室友坤哥需要，做了一个字符串处理小Demo，主要匹配连个字符串的相似程度。<br><a id=\"more\"></a><br>　　应坤哥要求做一个小功能要求如下：<br>　　有两个酒店名列表:A、B,将俩个列表中的酒店两两进行匹配，从B酒店列表中找出对应A中酒店相似度最高的酒店，并两两一组进行展示。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Test4&#123;</span><br><span class=\"line\">    public int xsd(String s1 ,String s2)&#123;</span><br><span class=\"line\">        char[] chars1 = s1.replace(&quot;(&quot;,&quot;&quot;).replace(&quot;)&quot;,&quot;&quot;)</span><br><span class=\"line\">                .replace(&quot;酒店&quot;,&quot;&quot;).replace(&quot;店&quot;,&quot;&quot;)</span><br><span class=\"line\">                .toCharArray();</span><br><span class=\"line\">        char[] chars2 = s2.replace(&quot;(&quot;,&quot;&quot;).replace(&quot;)&quot;,&quot;&quot;)</span><br><span class=\"line\">                .replace(&quot;酒店&quot;,&quot;&quot;).replace(&quot;店&quot;,&quot;&quot;)</span><br><span class=\"line\">                .toCharArray();</span><br><span class=\"line\">        int a = 0;</span><br><span class=\"line\">        for (char c1:chars1) &#123;</span><br><span class=\"line\">            for (char c2: chars2 ) &#123;</span><br><span class=\"line\">                if (c1==c2)&#123;</span><br><span class=\"line\">                    a ++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        String str1 = &quot;莫泰连锁酒店(孙权路店)，怡莱连锁酒店(杭州保俶精品店)，杭州米兰风尚酒店，浙江梅地亚宾馆(杭州)，杭州宏丽宾馆，怡莱连锁酒店(杭州解放路精品店)，浙江紫晶大酒店，杭州索菲特世外桃源度假酒店，杭州国际假日酒店，杭州开元名都大酒店，杭州瑞豪中心酒店，杭州新开元大酒店，杭州香格里拉饭店，杭州华辰银座酒店，杭州金马饭店，杭州海外海·西溪宾馆，杭州福朋喜来登酒店，杭州国大雷迪森广场酒店&quot;;</span><br><span class=\"line\">        String str2 = &quot;富阳国际贸易中心大酒店，富阳太阳城堡大酒店，富阳半岛会所酒店，怡莱连锁酒店(杭州保俶店)，莫泰连锁酒店(富阳孙权路店)，富春山居度假村，郑州悦莱酒店，郑州德盛易客酒店，郑州海天大酒店，米兰风尚大酒店，浙江梅地亚宾馆，宏丽宾馆，怡莱连锁酒店(解放路精品店)，浙江紫晶大酒店，索菲特世外桃源度假酒店，杭州国际假日酒店，开元名都酒店，杭州海外海西溪宾馆&quot;;</span><br><span class=\"line\">        String[] strings1 = str1.split(&quot;，&quot;);</span><br><span class=\"line\">        String[] strings2 = str2.split(&quot;，&quot;);</span><br><span class=\"line\">        int a = 0;</span><br><span class=\"line\">        HashMap&lt;String,String&gt; map = new HashMap&lt;&gt;();</span><br><span class=\"line\">        for (String s1:strings1) &#123;</span><br><span class=\"line\">            for (String s2:strings2) &#123;</span><br><span class=\"line\">               int b = xsd(s1,s2);</span><br><span class=\"line\">               if (b&gt;=3&amp;&amp;b&gt;a)&#123;</span><br><span class=\"line\">                   map.put(s1,s2);</span><br><span class=\"line\">                   a = b;</span><br><span class=\"line\">               &#125;else&#123;</span><br><span class=\"line\">                   map.put(s1,null);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            a = 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String s:map.toString().split(&quot;, &quot;)) &#123;</span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>　　应室友坤哥需要，做了一个字符串处理小Demo，主要匹配连个字符串的相似程度。<br>","more":"<br>　　应坤哥要求做一个小功能要求如下：<br>　　有两个酒店名列表:A、B,将俩个列表中的酒店两两进行匹配，从B酒店列表中找出对应A中酒店相似度最高的酒店，并两两一组进行展示。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Test4&#123;</span><br><span class=\"line\">    public int xsd(String s1 ,String s2)&#123;</span><br><span class=\"line\">        char[] chars1 = s1.replace(&quot;(&quot;,&quot;&quot;).replace(&quot;)&quot;,&quot;&quot;)</span><br><span class=\"line\">                .replace(&quot;酒店&quot;,&quot;&quot;).replace(&quot;店&quot;,&quot;&quot;)</span><br><span class=\"line\">                .toCharArray();</span><br><span class=\"line\">        char[] chars2 = s2.replace(&quot;(&quot;,&quot;&quot;).replace(&quot;)&quot;,&quot;&quot;)</span><br><span class=\"line\">                .replace(&quot;酒店&quot;,&quot;&quot;).replace(&quot;店&quot;,&quot;&quot;)</span><br><span class=\"line\">                .toCharArray();</span><br><span class=\"line\">        int a = 0;</span><br><span class=\"line\">        for (char c1:chars1) &#123;</span><br><span class=\"line\">            for (char c2: chars2 ) &#123;</span><br><span class=\"line\">                if (c1==c2)&#123;</span><br><span class=\"line\">                    a ++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        String str1 = &quot;莫泰连锁酒店(孙权路店)，怡莱连锁酒店(杭州保俶精品店)，杭州米兰风尚酒店，浙江梅地亚宾馆(杭州)，杭州宏丽宾馆，怡莱连锁酒店(杭州解放路精品店)，浙江紫晶大酒店，杭州索菲特世外桃源度假酒店，杭州国际假日酒店，杭州开元名都大酒店，杭州瑞豪中心酒店，杭州新开元大酒店，杭州香格里拉饭店，杭州华辰银座酒店，杭州金马饭店，杭州海外海·西溪宾馆，杭州福朋喜来登酒店，杭州国大雷迪森广场酒店&quot;;</span><br><span class=\"line\">        String str2 = &quot;富阳国际贸易中心大酒店，富阳太阳城堡大酒店，富阳半岛会所酒店，怡莱连锁酒店(杭州保俶店)，莫泰连锁酒店(富阳孙权路店)，富春山居度假村，郑州悦莱酒店，郑州德盛易客酒店，郑州海天大酒店，米兰风尚大酒店，浙江梅地亚宾馆，宏丽宾馆，怡莱连锁酒店(解放路精品店)，浙江紫晶大酒店，索菲特世外桃源度假酒店，杭州国际假日酒店，开元名都酒店，杭州海外海西溪宾馆&quot;;</span><br><span class=\"line\">        String[] strings1 = str1.split(&quot;，&quot;);</span><br><span class=\"line\">        String[] strings2 = str2.split(&quot;，&quot;);</span><br><span class=\"line\">        int a = 0;</span><br><span class=\"line\">        HashMap&lt;String,String&gt; map = new HashMap&lt;&gt;();</span><br><span class=\"line\">        for (String s1:strings1) &#123;</span><br><span class=\"line\">            for (String s2:strings2) &#123;</span><br><span class=\"line\">               int b = xsd(s1,s2);</span><br><span class=\"line\">               if (b&gt;=3&amp;&amp;b&gt;a)&#123;</span><br><span class=\"line\">                   map.put(s1,s2);</span><br><span class=\"line\">                   a = b;</span><br><span class=\"line\">               &#125;else&#123;</span><br><span class=\"line\">                   map.put(s1,null);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            a = 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String s:map.toString().split(&quot;, &quot;)) &#123;</span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"自定义注解@mytest","date":"2018-08-20T09:18:57.000Z","top":5,"_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->\n## 自定义注解\n#### 步骤分析\n　　`a) 创建自定义注解:MyTest.`\n　　`b) 定义核心运行类.CoreRunner.`\n　　`c) 在核心运行类中.获得测试类的Class.`\n　　`d) 获得Class中的所有方法.遍历得到每个方法.`\n　　`e) 判断方法上有MyTest注解,就执行该方法.`\n\n#### 1. 编写自定义注解类\n```\n@Retention(value=RetentionPolicy.RUNTIME)//元注解①\npublic @interface MyTest {\n}\n```\n###### 元注解:Java中用来修饰其他注释的注释\n　　`@Retention(value=RetentionPolicy.RUNTIME)`\n　　方法内传入一个枚举分别有三个值：\n```\nRetentionPolicy.SOURCE:源文件阶段\nvalue=RetentionPolicy.CLASS:字节码阶段\nRetentionPolicy.RUNTIME:运行阶段(创建对象阶段)\n```\n　　用与设置注解的存在阶段,默认的自定义注解存在与源码阶段 在生成class文件后以及创建对象阶段就不存在了,所以需要将注解存在阶段延长\n###### 补充:类的存在有三种阶段对应的也有三种获取的方式\n　　a) 源代码阶段:以.java结尾的文件的形式存在，通过Class.forName(\"类名\")方法获得。\n　　b) 字节码阶段:将字节码文件编译后以.class结尾的文件存在，通过类名.class方式获取。\n　　c) 创建对象阶段:JVM将字节码文件加载进内存的方法区内，通过对象.getClass方法获得。\n#### 2. 编写自定义注解核心运行类\n```\n    /**\n     * 获得测试类的Class.\n     * 获得Class中的所有的方法.\n     * 遍历每个方法,查看每个方法上是否有MyTest注解.\n     * 有MyTest注解,这个方法就执行\n     * boolean  isAnnotationPresent(Class<? extends Annotation> annotationClass)\n     * 判断指定类型的注释是否存在于此元素上 是则返回 true，否则返回 false。\n     */\npublic class CoreRunner {\n    public static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException {\n        // 1.获得测试类的Class:\n        Class clazz = AnnotationDemo1.class;\n        // 2.获得Class中的所有的方法: 规定了测试的方法必须是public.\n        Method[] methods = clazz.getMethods();\n        // 3.遍历每个方法:\n        for(Method method:methods){\n            boolean flag = method.isAnnotationPresent(MyTest.class);\n            if(flag){\n                // 说明方法上有MyTest注解:\n                method.invoke(clazz.newInstance(), null);\n            }\n        }\n    }\n}\n```\n#### 3. 编写测试类\n```\npublic class AnnotationDemo1 {\n\t@MyTest\n\tpublic void demo1(){\n\t\tSystem.out.println(\"demo1执行了...\");\n\t}\n\t@MyTest\n\tpublic void demo2(){\n\t\tSystem.out.println(\"demo2执行了...\");\n\t}\n\tpublic void demo3(){\n\t\tSystem.out.println(\"demo3执行了...\");\n\t}\n}\n```\n","source":"_posts/2018/自定义注解.md","raw":"---\ntitle: 自定义注解@mytest\ndate: 2018-08-20 17:18:57\ntop: 5\ntags:\n\tJava基础\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->\n## 自定义注解\n#### 步骤分析\n　　`a) 创建自定义注解:MyTest.`\n　　`b) 定义核心运行类.CoreRunner.`\n　　`c) 在核心运行类中.获得测试类的Class.`\n　　`d) 获得Class中的所有方法.遍历得到每个方法.`\n　　`e) 判断方法上有MyTest注解,就执行该方法.`\n\n#### 1. 编写自定义注解类\n```\n@Retention(value=RetentionPolicy.RUNTIME)//元注解①\npublic @interface MyTest {\n}\n```\n###### 元注解:Java中用来修饰其他注释的注释\n　　`@Retention(value=RetentionPolicy.RUNTIME)`\n　　方法内传入一个枚举分别有三个值：\n```\nRetentionPolicy.SOURCE:源文件阶段\nvalue=RetentionPolicy.CLASS:字节码阶段\nRetentionPolicy.RUNTIME:运行阶段(创建对象阶段)\n```\n　　用与设置注解的存在阶段,默认的自定义注解存在与源码阶段 在生成class文件后以及创建对象阶段就不存在了,所以需要将注解存在阶段延长\n###### 补充:类的存在有三种阶段对应的也有三种获取的方式\n　　a) 源代码阶段:以.java结尾的文件的形式存在，通过Class.forName(\"类名\")方法获得。\n　　b) 字节码阶段:将字节码文件编译后以.class结尾的文件存在，通过类名.class方式获取。\n　　c) 创建对象阶段:JVM将字节码文件加载进内存的方法区内，通过对象.getClass方法获得。\n#### 2. 编写自定义注解核心运行类\n```\n    /**\n     * 获得测试类的Class.\n     * 获得Class中的所有的方法.\n     * 遍历每个方法,查看每个方法上是否有MyTest注解.\n     * 有MyTest注解,这个方法就执行\n     * boolean  isAnnotationPresent(Class<? extends Annotation> annotationClass)\n     * 判断指定类型的注释是否存在于此元素上 是则返回 true，否则返回 false。\n     */\npublic class CoreRunner {\n    public static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException {\n        // 1.获得测试类的Class:\n        Class clazz = AnnotationDemo1.class;\n        // 2.获得Class中的所有的方法: 规定了测试的方法必须是public.\n        Method[] methods = clazz.getMethods();\n        // 3.遍历每个方法:\n        for(Method method:methods){\n            boolean flag = method.isAnnotationPresent(MyTest.class);\n            if(flag){\n                // 说明方法上有MyTest注解:\n                method.invoke(clazz.newInstance(), null);\n            }\n        }\n    }\n}\n```\n#### 3. 编写测试类\n```\npublic class AnnotationDemo1 {\n\t@MyTest\n\tpublic void demo1(){\n\t\tSystem.out.println(\"demo1执行了...\");\n\t}\n\t@MyTest\n\tpublic void demo2(){\n\t\tSystem.out.println(\"demo2执行了...\");\n\t}\n\tpublic void demo3(){\n\t\tSystem.out.println(\"demo3执行了...\");\n\t}\n}\n```\n","slug":"2018/自定义注解","published":1,"updated":"2018-09-13T01:26:01.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bq000p3wj4do5clxbz","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n<h2 id=\"自定义注解\"><a href=\"#自定义注解\" class=\"headerlink\" title=\"自定义注解\"></a>自定义注解</h2><h4 id=\"步骤分析\"><a href=\"#步骤分析\" class=\"headerlink\" title=\"步骤分析\"></a>步骤分析</h4><p>　　<code>a) 创建自定义注解:MyTest.</code><br>　　<code>b) 定义核心运行类.CoreRunner.</code><br>　　<code>c) 在核心运行类中.获得测试类的Class.</code><br>　　<code>d) 获得Class中的所有方法.遍历得到每个方法.</code><br>　　<code>e) 判断方法上有MyTest注解,就执行该方法.</code></p>\n<h4 id=\"1-编写自定义注解类\"><a href=\"#1-编写自定义注解类\" class=\"headerlink\" title=\"1. 编写自定义注解类\"></a>1. 编写自定义注解类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(value=RetentionPolicy.RUNTIME)//元注解①</span><br><span class=\"line\">public @interface MyTest &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"元注解-Java中用来修饰其他注释的注释\"><a href=\"#元注解-Java中用来修饰其他注释的注释\" class=\"headerlink\" title=\"元注解:Java中用来修饰其他注释的注释\"></a>元注解:Java中用来修饰其他注释的注释</h6><p>　　<code>@Retention(value=RetentionPolicy.RUNTIME)</code><br>　　方法内传入一个枚举分别有三个值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RetentionPolicy.SOURCE:源文件阶段</span><br><span class=\"line\">value=RetentionPolicy.CLASS:字节码阶段</span><br><span class=\"line\">RetentionPolicy.RUNTIME:运行阶段(创建对象阶段)</span><br></pre></td></tr></table></figure></p>\n<p>　　用与设置注解的存在阶段,默认的自定义注解存在与源码阶段 在生成class文件后以及创建对象阶段就不存在了,所以需要将注解存在阶段延长</p>\n<h6 id=\"补充-类的存在有三种阶段对应的也有三种获取的方式\"><a href=\"#补充-类的存在有三种阶段对应的也有三种获取的方式\" class=\"headerlink\" title=\"补充:类的存在有三种阶段对应的也有三种获取的方式\"></a>补充:类的存在有三种阶段对应的也有三种获取的方式</h6><p>　　a) 源代码阶段:以.java结尾的文件的形式存在，通过Class.forName(“类名”)方法获得。<br>　　b) 字节码阶段:将字节码文件编译后以.class结尾的文件存在，通过类名.class方式获取。<br>　　c) 创建对象阶段:JVM将字节码文件加载进内存的方法区内，通过对象.getClass方法获得。</p>\n<h4 id=\"2-编写自定义注解核心运行类\"><a href=\"#2-编写自定义注解核心运行类\" class=\"headerlink\" title=\"2. 编写自定义注解核心运行类\"></a>2. 编写自定义注解核心运行类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    /**</span><br><span class=\"line\">     * 获得测试类的Class.</span><br><span class=\"line\">     * 获得Class中的所有的方法.</span><br><span class=\"line\">     * 遍历每个方法,查看每个方法上是否有MyTest注解.</span><br><span class=\"line\">     * 有MyTest注解,这个方法就执行</span><br><span class=\"line\">     * boolean  isAnnotationPresent(Class&lt;? extends Annotation&gt; annotationClass)</span><br><span class=\"line\">     * 判断指定类型的注释是否存在于此元素上 是则返回 true，否则返回 false。</span><br><span class=\"line\">     */</span><br><span class=\"line\">public class CoreRunner &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException &#123;</span><br><span class=\"line\">        // 1.获得测试类的Class:</span><br><span class=\"line\">        Class clazz = AnnotationDemo1.class;</span><br><span class=\"line\">        // 2.获得Class中的所有的方法: 规定了测试的方法必须是public.</span><br><span class=\"line\">        Method[] methods = clazz.getMethods();</span><br><span class=\"line\">        // 3.遍历每个方法:</span><br><span class=\"line\">        for(Method method:methods)&#123;</span><br><span class=\"line\">            boolean flag = method.isAnnotationPresent(MyTest.class);</span><br><span class=\"line\">            if(flag)&#123;</span><br><span class=\"line\">                // 说明方法上有MyTest注解:</span><br><span class=\"line\">                method.invoke(clazz.newInstance(), null);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-编写测试类\"><a href=\"#3-编写测试类\" class=\"headerlink\" title=\"3. 编写测试类\"></a>3. 编写测试类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AnnotationDemo1 &#123;</span><br><span class=\"line\">\t@MyTest</span><br><span class=\"line\">\tpublic void demo1()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo1执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@MyTest</span><br><span class=\"line\">\tpublic void demo2()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo2执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void demo3()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo3执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>\n<h2 id=\"自定义注解\"><a href=\"#自定义注解\" class=\"headerlink\" title=\"自定义注解\"></a>自定义注解</h2><h4 id=\"步骤分析\"><a href=\"#步骤分析\" class=\"headerlink\" title=\"步骤分析\"></a>步骤分析</h4><p>　　<code>a) 创建自定义注解:MyTest.</code><br>　　<code>b) 定义核心运行类.CoreRunner.</code><br>　　<code>c) 在核心运行类中.获得测试类的Class.</code><br>　　<code>d) 获得Class中的所有方法.遍历得到每个方法.</code><br>　　<code>e) 判断方法上有MyTest注解,就执行该方法.</code></p>\n<h4 id=\"1-编写自定义注解类\"><a href=\"#1-编写自定义注解类\" class=\"headerlink\" title=\"1. 编写自定义注解类\"></a>1. 编写自定义注解类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(value=RetentionPolicy.RUNTIME)//元注解①</span><br><span class=\"line\">public @interface MyTest &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"元注解-Java中用来修饰其他注释的注释\"><a href=\"#元注解-Java中用来修饰其他注释的注释\" class=\"headerlink\" title=\"元注解:Java中用来修饰其他注释的注释\"></a>元注解:Java中用来修饰其他注释的注释</h6><p>　　<code>@Retention(value=RetentionPolicy.RUNTIME)</code><br>　　方法内传入一个枚举分别有三个值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RetentionPolicy.SOURCE:源文件阶段</span><br><span class=\"line\">value=RetentionPolicy.CLASS:字节码阶段</span><br><span class=\"line\">RetentionPolicy.RUNTIME:运行阶段(创建对象阶段)</span><br></pre></td></tr></table></figure></p>\n<p>　　用与设置注解的存在阶段,默认的自定义注解存在与源码阶段 在生成class文件后以及创建对象阶段就不存在了,所以需要将注解存在阶段延长</p>\n<h6 id=\"补充-类的存在有三种阶段对应的也有三种获取的方式\"><a href=\"#补充-类的存在有三种阶段对应的也有三种获取的方式\" class=\"headerlink\" title=\"补充:类的存在有三种阶段对应的也有三种获取的方式\"></a>补充:类的存在有三种阶段对应的也有三种获取的方式</h6><p>　　a) 源代码阶段:以.java结尾的文件的形式存在，通过Class.forName(“类名”)方法获得。<br>　　b) 字节码阶段:将字节码文件编译后以.class结尾的文件存在，通过类名.class方式获取。<br>　　c) 创建对象阶段:JVM将字节码文件加载进内存的方法区内，通过对象.getClass方法获得。</p>\n<h4 id=\"2-编写自定义注解核心运行类\"><a href=\"#2-编写自定义注解核心运行类\" class=\"headerlink\" title=\"2. 编写自定义注解核心运行类\"></a>2. 编写自定义注解核心运行类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    /**</span><br><span class=\"line\">     * 获得测试类的Class.</span><br><span class=\"line\">     * 获得Class中的所有的方法.</span><br><span class=\"line\">     * 遍历每个方法,查看每个方法上是否有MyTest注解.</span><br><span class=\"line\">     * 有MyTest注解,这个方法就执行</span><br><span class=\"line\">     * boolean  isAnnotationPresent(Class&lt;? extends Annotation&gt; annotationClass)</span><br><span class=\"line\">     * 判断指定类型的注释是否存在于此元素上 是则返回 true，否则返回 false。</span><br><span class=\"line\">     */</span><br><span class=\"line\">public class CoreRunner &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException &#123;</span><br><span class=\"line\">        // 1.获得测试类的Class:</span><br><span class=\"line\">        Class clazz = AnnotationDemo1.class;</span><br><span class=\"line\">        // 2.获得Class中的所有的方法: 规定了测试的方法必须是public.</span><br><span class=\"line\">        Method[] methods = clazz.getMethods();</span><br><span class=\"line\">        // 3.遍历每个方法:</span><br><span class=\"line\">        for(Method method:methods)&#123;</span><br><span class=\"line\">            boolean flag = method.isAnnotationPresent(MyTest.class);</span><br><span class=\"line\">            if(flag)&#123;</span><br><span class=\"line\">                // 说明方法上有MyTest注解:</span><br><span class=\"line\">                method.invoke(clazz.newInstance(), null);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-编写测试类\"><a href=\"#3-编写测试类\" class=\"headerlink\" title=\"3. 编写测试类\"></a>3. 编写测试类</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class AnnotationDemo1 &#123;</span><br><span class=\"line\">\t@MyTest</span><br><span class=\"line\">\tpublic void demo1()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo1执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t@MyTest</span><br><span class=\"line\">\tpublic void demo2()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo2执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic void demo3()&#123;</span><br><span class=\"line\">\t\tSystem.out.println(&quot;demo3执行了...&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"责任链设计模式","date":"2018-09-12T11:18:45.000Z","top":8,"_content":"　　责任链设计模式属于行为类设计模式，责任链设计模式顾名思义就好比链表一样，不同的是责任链是由多个处理不同任务的对象节点组成，每个对象节点包含着责任链上下一个对象节点的引用，这样请求就可以在这条链上进行传递，直到有一个对象节点可以处理请求，或者每个对象节点都可以处理请求，并传递给下家，直到链上的每个对象节点都处理完，这样就能在不影响客户端的前提下在责任链上任意的更改处理对象节点。\n<!-- more -->\n# 概述\n　　例如我们去政府部门去办事，有时候就会遇见官员责任踢球，这就是一个责任链，你的问题我能够解决我就解决，如果我不能解决就推卸给另一个部门，至于谁最后处理这个事情，政府部门为了将屁民的请求也官员耦合在一起，让多个（部门）都可以接受请求，将这些（部门）对象连接成一条链，并且沿着这条链传递请求，直到有（部门）对象处理它为止。\n# 优缺点\n* 降低客户段与处理节点的耦合度\n* 简化处理节点的相互连接\n* 增强了给处理节点指派职责的灵活性\n* 简化了如何增加一个处理节点\n* `缺点`：不能保证请求一定被接收；且对于比较长的职责链，请求的处理可能涉及到多个处理对象，系统性能将受到一定影响，而且在进行代码调试时不太方便；另外如果使用不恰当容易产生循环调用。\n\n# 结构\n![结构](/img/责任链设计模式1.jpg)\n　　一个典型的对象结构可能如下图所示：\n![结构](/img/责任链设计模式2.jpg)\n　　主要有以下三个对象组成：\n* Handler(抽象处理者)：定义一个处理请求的接口，和一个后继连接(可选)\n* ConcreteHandler(具体处理者)：处理它所负责的请求，可以访问后继者，如果可以处理请求则处理，否则将该请求转给他的后继者。\n* Client(客户类)：向一个链上的具体处理者ConcreteHandler对象提交请求。\n\n# 详解\n　　责任链按照处理对象处理的方法可以分为两种模式：\n　　a) 纯的责任链模式：一个具体处理者角色处理只能对请求作出两种行为中的一个：一个是自己处理（承担责任）；另一个是把责任推给下家。`不允许出现某一个具体处理者对象在承担了一部分责任后又将责任向下传`的情况。请求在责任链中必须被处理，`不能出现无果而终的结局`。\n　　b) 不纯的责任链模式：在一个纯的职责链模式里面，一个请求必须被某一个处理者对象所接收；在一个不纯的职责链模式里面，一个请求可以最终不被任何接收端对象所接收。\n# 使用场景\n　　a) 不纯的责任链模式：\n　　Servlet中的过滤器就采用了不纯的责任链模式，FIlter中的FilterChan对象保存了最终到Servlet对象的所有FIlter对象，这些对象存储在ApplicationFIlterChan对象的Fil数组中，在FilterChain链上没执行一个Filter对象，数组的当前计数就会增加1，直到计数等于数组的长度为止，当FilterChain上的所有Filte执行完毕后就会执行Servlet，所以ApplicationFilterChain中会持有Servlet对象的引用。\n　　b) 纯的责任链设计模式：","source":"_posts/2018/责任链设计模式.md","raw":"---\ntitle: 责任链设计模式\ndate: 2018-09-12 19:18:45\ntop: 8\ntags:\n\t设计模式\n---\n　　责任链设计模式属于行为类设计模式，责任链设计模式顾名思义就好比链表一样，不同的是责任链是由多个处理不同任务的对象节点组成，每个对象节点包含着责任链上下一个对象节点的引用，这样请求就可以在这条链上进行传递，直到有一个对象节点可以处理请求，或者每个对象节点都可以处理请求，并传递给下家，直到链上的每个对象节点都处理完，这样就能在不影响客户端的前提下在责任链上任意的更改处理对象节点。\n<!-- more -->\n# 概述\n　　例如我们去政府部门去办事，有时候就会遇见官员责任踢球，这就是一个责任链，你的问题我能够解决我就解决，如果我不能解决就推卸给另一个部门，至于谁最后处理这个事情，政府部门为了将屁民的请求也官员耦合在一起，让多个（部门）都可以接受请求，将这些（部门）对象连接成一条链，并且沿着这条链传递请求，直到有（部门）对象处理它为止。\n# 优缺点\n* 降低客户段与处理节点的耦合度\n* 简化处理节点的相互连接\n* 增强了给处理节点指派职责的灵活性\n* 简化了如何增加一个处理节点\n* `缺点`：不能保证请求一定被接收；且对于比较长的职责链，请求的处理可能涉及到多个处理对象，系统性能将受到一定影响，而且在进行代码调试时不太方便；另外如果使用不恰当容易产生循环调用。\n\n# 结构\n![结构](/img/责任链设计模式1.jpg)\n　　一个典型的对象结构可能如下图所示：\n![结构](/img/责任链设计模式2.jpg)\n　　主要有以下三个对象组成：\n* Handler(抽象处理者)：定义一个处理请求的接口，和一个后继连接(可选)\n* ConcreteHandler(具体处理者)：处理它所负责的请求，可以访问后继者，如果可以处理请求则处理，否则将该请求转给他的后继者。\n* Client(客户类)：向一个链上的具体处理者ConcreteHandler对象提交请求。\n\n# 详解\n　　责任链按照处理对象处理的方法可以分为两种模式：\n　　a) 纯的责任链模式：一个具体处理者角色处理只能对请求作出两种行为中的一个：一个是自己处理（承担责任）；另一个是把责任推给下家。`不允许出现某一个具体处理者对象在承担了一部分责任后又将责任向下传`的情况。请求在责任链中必须被处理，`不能出现无果而终的结局`。\n　　b) 不纯的责任链模式：在一个纯的职责链模式里面，一个请求必须被某一个处理者对象所接收；在一个不纯的职责链模式里面，一个请求可以最终不被任何接收端对象所接收。\n# 使用场景\n　　a) 不纯的责任链模式：\n　　Servlet中的过滤器就采用了不纯的责任链模式，FIlter中的FilterChan对象保存了最终到Servlet对象的所有FIlter对象，这些对象存储在ApplicationFIlterChan对象的Fil数组中，在FilterChain链上没执行一个Filter对象，数组的当前计数就会增加1，直到计数等于数组的长度为止，当FilterChain上的所有Filte执行完毕后就会执行Servlet，所以ApplicationFilterChain中会持有Servlet对象的引用。\n　　b) 纯的责任链设计模式：","slug":"2018/责任链设计模式","published":1,"updated":"2018-09-13T01:25:17.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1br000q3wj4vgf7jfl1","content":"<p>　　责任链设计模式属于行为类设计模式，责任链设计模式顾名思义就好比链表一样，不同的是责任链是由多个处理不同任务的对象节点组成，每个对象节点包含着责任链上下一个对象节点的引用，这样请求就可以在这条链上进行传递，直到有一个对象节点可以处理请求，或者每个对象节点都可以处理请求，并传递给下家，直到链上的每个对象节点都处理完，这样就能在不影响客户端的前提下在责任链上任意的更改处理对象节点。<br><a id=\"more\"></a></p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>　　例如我们去政府部门去办事，有时候就会遇见官员责任踢球，这就是一个责任链，你的问题我能够解决我就解决，如果我不能解决就推卸给另一个部门，至于谁最后处理这个事情，政府部门为了将屁民的请求也官员耦合在一起，让多个（部门）都可以接受请求，将这些（部门）对象连接成一条链，并且沿着这条链传递请求，直到有（部门）对象处理它为止。</p>\n<h1 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h1><ul>\n<li>降低客户段与处理节点的耦合度</li>\n<li>简化处理节点的相互连接</li>\n<li>增强了给处理节点指派职责的灵活性</li>\n<li>简化了如何增加一个处理节点</li>\n<li><code>缺点</code>：不能保证请求一定被接收；且对于比较长的职责链，请求的处理可能涉及到多个处理对象，系统性能将受到一定影响，而且在进行代码调试时不太方便；另外如果使用不恰当容易产生循环调用。</li>\n</ul>\n<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><p><img src=\"/img/责任链设计模式1.jpg\" alt=\"结构\"><br>　　一个典型的对象结构可能如下图所示：<br><img src=\"/img/责任链设计模式2.jpg\" alt=\"结构\"><br>　　主要有以下三个对象组成：</p>\n<ul>\n<li>Handler(抽象处理者)：定义一个处理请求的接口，和一个后继连接(可选)</li>\n<li>ConcreteHandler(具体处理者)：处理它所负责的请求，可以访问后继者，如果可以处理请求则处理，否则将该请求转给他的后继者。</li>\n<li>Client(客户类)：向一个链上的具体处理者ConcreteHandler对象提交请求。</li>\n</ul>\n<h1 id=\"详解\"><a href=\"#详解\" class=\"headerlink\" title=\"详解\"></a>详解</h1><p>　　责任链按照处理对象处理的方法可以分为两种模式：<br>　　a) 纯的责任链模式：一个具体处理者角色处理只能对请求作出两种行为中的一个：一个是自己处理（承担责任）；另一个是把责任推给下家。<code>不允许出现某一个具体处理者对象在承担了一部分责任后又将责任向下传</code>的情况。请求在责任链中必须被处理，<code>不能出现无果而终的结局</code>。<br>　　b) 不纯的责任链模式：在一个纯的职责链模式里面，一个请求必须被某一个处理者对象所接收；在一个不纯的职责链模式里面，一个请求可以最终不被任何接收端对象所接收。</p>\n<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><p>　　a) 不纯的责任链模式：<br>　　Servlet中的过滤器就采用了不纯的责任链模式，FIlter中的FilterChan对象保存了最终到Servlet对象的所有FIlter对象，这些对象存储在ApplicationFIlterChan对象的Fil数组中，在FilterChain链上没执行一个Filter对象，数组的当前计数就会增加1，直到计数等于数组的长度为止，当FilterChain上的所有Filte执行完毕后就会执行Servlet，所以ApplicationFilterChain中会持有Servlet对象的引用。<br>　　b) 纯的责任链设计模式：</p>\n","site":{"data":{}},"excerpt":"<p>　　责任链设计模式属于行为类设计模式，责任链设计模式顾名思义就好比链表一样，不同的是责任链是由多个处理不同任务的对象节点组成，每个对象节点包含着责任链上下一个对象节点的引用，这样请求就可以在这条链上进行传递，直到有一个对象节点可以处理请求，或者每个对象节点都可以处理请求，并传递给下家，直到链上的每个对象节点都处理完，这样就能在不影响客户端的前提下在责任链上任意的更改处理对象节点。<br>","more":"</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>　　例如我们去政府部门去办事，有时候就会遇见官员责任踢球，这就是一个责任链，你的问题我能够解决我就解决，如果我不能解决就推卸给另一个部门，至于谁最后处理这个事情，政府部门为了将屁民的请求也官员耦合在一起，让多个（部门）都可以接受请求，将这些（部门）对象连接成一条链，并且沿着这条链传递请求，直到有（部门）对象处理它为止。</p>\n<h1 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h1><ul>\n<li>降低客户段与处理节点的耦合度</li>\n<li>简化处理节点的相互连接</li>\n<li>增强了给处理节点指派职责的灵活性</li>\n<li>简化了如何增加一个处理节点</li>\n<li><code>缺点</code>：不能保证请求一定被接收；且对于比较长的职责链，请求的处理可能涉及到多个处理对象，系统性能将受到一定影响，而且在进行代码调试时不太方便；另外如果使用不恰当容易产生循环调用。</li>\n</ul>\n<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><p><img src=\"/img/责任链设计模式1.jpg\" alt=\"结构\"><br>　　一个典型的对象结构可能如下图所示：<br><img src=\"/img/责任链设计模式2.jpg\" alt=\"结构\"><br>　　主要有以下三个对象组成：</p>\n<ul>\n<li>Handler(抽象处理者)：定义一个处理请求的接口，和一个后继连接(可选)</li>\n<li>ConcreteHandler(具体处理者)：处理它所负责的请求，可以访问后继者，如果可以处理请求则处理，否则将该请求转给他的后继者。</li>\n<li>Client(客户类)：向一个链上的具体处理者ConcreteHandler对象提交请求。</li>\n</ul>\n<h1 id=\"详解\"><a href=\"#详解\" class=\"headerlink\" title=\"详解\"></a>详解</h1><p>　　责任链按照处理对象处理的方法可以分为两种模式：<br>　　a) 纯的责任链模式：一个具体处理者角色处理只能对请求作出两种行为中的一个：一个是自己处理（承担责任）；另一个是把责任推给下家。<code>不允许出现某一个具体处理者对象在承担了一部分责任后又将责任向下传</code>的情况。请求在责任链中必须被处理，<code>不能出现无果而终的结局</code>。<br>　　b) 不纯的责任链模式：在一个纯的职责链模式里面，一个请求必须被某一个处理者对象所接收；在一个不纯的职责链模式里面，一个请求可以最终不被任何接收端对象所接收。</p>\n<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><p>　　a) 不纯的责任链模式：<br>　　Servlet中的过滤器就采用了不纯的责任链模式，FIlter中的FilterChan对象保存了最终到Servlet对象的所有FIlter对象，这些对象存储在ApplicationFIlterChan对象的Fil数组中，在FilterChain链上没执行一个Filter对象，数组的当前计数就会增加1，直到计数等于数组的长度为止，当FilterChain上的所有Filte执行完毕后就会执行Servlet，所以ApplicationFilterChain中会持有Servlet对象的引用。<br>　　b) 纯的责任链设计模式：</p>"},{"title":"InnerClass","date":"2018-09-12T06:08:55.000Z","top":8,"_content":"　　`震惊！外部类竟可以访问内部类private变量！！！`\n<!-- more -->\n　　标题致敬著名的某头条，在最近的开发过程中写了一段类似与这样的代码，惊奇的发现外部类竟然能对内部类做这样的事情！！\n```\n    public class OuterClass {\n        private String outerStr;\n        public void test(){\n            new InnerClass().innerStr = \"外部类也可以修改内部类私有变量\" ;\n        }\n        public class InnerClass{\n            private String innerStr;\n            public void test1(){\n                outerStr = \"内部类可以直接修改外部类私有变量\";\n            }\n        }\n    }\n```\n　　以我的暴脾气，既然遇见了一个问题就要刨根问底然后我有写了如下的测试，分别测试了成员内部类和方法内部类的私有变量以及私有方法的，并且还特地的将成员内部类与方法内部类写成了一样的。发现并不会出现类冲突，但是在方法内方法内部类会覆盖掉成员内部类。\n```\n    public class OuterClass {\n        private String outerStr = \"外部类的私有变量\";\n        //成员内部类\n        private class InnerClass{\n            private InnerClass(){\n                System.out.println(\"外部类可以调用成员内部类的私有构造方法\");\n            }\n            private String innerStr = \"成员内部类的私有变量\";\n            private void test(){\n                System.out.println(\"成员内部类可以直接调用\"+outerStr);\n            }\n        }\n        @Test\n        public void test(){\n            System.out.println(\"外部类可以通过实例对象调用\"+new InnerClass().innerStr);\n            new InnerClass().test();\n            //方法内部类\n            class InnerClass{\n                private InnerClass(){\n                    System.out.println(\"外部类可以调用方法内部类的私有构造方法\");\n                }\n                private String innerStr = \"方法内部类的私有变量\";\n                private void test(){\n                    System.out.println(\"方法内部类可以直接调用\"+outerStr);\n                }\n            }\n            //注意要有先后顺序\n            System.out.println(\"外部类可以通过实例对象调用\"+new InnerClass().innerStr);\n            new InnerClass().test();\n        }\n    }\n\n```\n　　`运行结果：`\n```\n    外部类可以调用成员内部类的私有构造方法\n    外部类可以通过实例对象调用成员内部类的私有变量\n    外部类可以调用成员内部类的私有构造方法\n    成员内部类可以直接调用外部类的私有变量\n    外部类可以调用方法内部类的私有构造方法\n    外部类可以通过实例对象调用方法内部类的私有变量\n    外部类可以调用方法内部类的私有构造方法\n    方法内部类可以直接调用外部类的私有变量\n```\n　　言归正传，下面正式开始全面解析内部类。\n# 为什么使用内部类\n\n# 内部类与外部类的联系\n\n## 内部类访问外部类\n\n## 外部类访问内部类\n\n# 内部类的分类\n\n## 成员内部类\n\n## 方法内部类\n\n## 匿名内部类\n\n## 静态内部类\n\n\n\n","source":"_posts/2018/震惊！外部类可以访问内部类private变量.md","raw":"---\ntitle: InnerClass\ndate: 2018-09-12 14:08:55\ntop: 8\ntags:\n---\n　　`震惊！外部类竟可以访问内部类private变量！！！`\n<!-- more -->\n　　标题致敬著名的某头条，在最近的开发过程中写了一段类似与这样的代码，惊奇的发现外部类竟然能对内部类做这样的事情！！\n```\n    public class OuterClass {\n        private String outerStr;\n        public void test(){\n            new InnerClass().innerStr = \"外部类也可以修改内部类私有变量\" ;\n        }\n        public class InnerClass{\n            private String innerStr;\n            public void test1(){\n                outerStr = \"内部类可以直接修改外部类私有变量\";\n            }\n        }\n    }\n```\n　　以我的暴脾气，既然遇见了一个问题就要刨根问底然后我有写了如下的测试，分别测试了成员内部类和方法内部类的私有变量以及私有方法的，并且还特地的将成员内部类与方法内部类写成了一样的。发现并不会出现类冲突，但是在方法内方法内部类会覆盖掉成员内部类。\n```\n    public class OuterClass {\n        private String outerStr = \"外部类的私有变量\";\n        //成员内部类\n        private class InnerClass{\n            private InnerClass(){\n                System.out.println(\"外部类可以调用成员内部类的私有构造方法\");\n            }\n            private String innerStr = \"成员内部类的私有变量\";\n            private void test(){\n                System.out.println(\"成员内部类可以直接调用\"+outerStr);\n            }\n        }\n        @Test\n        public void test(){\n            System.out.println(\"外部类可以通过实例对象调用\"+new InnerClass().innerStr);\n            new InnerClass().test();\n            //方法内部类\n            class InnerClass{\n                private InnerClass(){\n                    System.out.println(\"外部类可以调用方法内部类的私有构造方法\");\n                }\n                private String innerStr = \"方法内部类的私有变量\";\n                private void test(){\n                    System.out.println(\"方法内部类可以直接调用\"+outerStr);\n                }\n            }\n            //注意要有先后顺序\n            System.out.println(\"外部类可以通过实例对象调用\"+new InnerClass().innerStr);\n            new InnerClass().test();\n        }\n    }\n\n```\n　　`运行结果：`\n```\n    外部类可以调用成员内部类的私有构造方法\n    外部类可以通过实例对象调用成员内部类的私有变量\n    外部类可以调用成员内部类的私有构造方法\n    成员内部类可以直接调用外部类的私有变量\n    外部类可以调用方法内部类的私有构造方法\n    外部类可以通过实例对象调用方法内部类的私有变量\n    外部类可以调用方法内部类的私有构造方法\n    方法内部类可以直接调用外部类的私有变量\n```\n　　言归正传，下面正式开始全面解析内部类。\n# 为什么使用内部类\n\n# 内部类与外部类的联系\n\n## 内部类访问外部类\n\n## 外部类访问内部类\n\n# 内部类的分类\n\n## 成员内部类\n\n## 方法内部类\n\n## 匿名内部类\n\n## 静态内部类\n\n\n\n","slug":"2018/震惊！外部类可以访问内部类private变量","published":1,"updated":"2018-09-13T06:44:13.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bs000s3wj4loebf7dr","content":"<p>　　<code>震惊！外部类竟可以访问内部类private变量！！！</code><br><a id=\"more\"></a><br>　　标题致敬著名的某头条，在最近的开发过程中写了一段类似与这样的代码，惊奇的发现外部类竟然能对内部类做这样的事情！！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class OuterClass &#123;</span><br><span class=\"line\">    private String outerStr;</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        new InnerClass().innerStr = &quot;外部类也可以修改内部类私有变量&quot; ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public class InnerClass&#123;</span><br><span class=\"line\">        private String innerStr;</span><br><span class=\"line\">        public void test1()&#123;</span><br><span class=\"line\">            outerStr = &quot;内部类可以直接修改外部类私有变量&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　以我的暴脾气，既然遇见了一个问题就要刨根问底然后我有写了如下的测试，分别测试了成员内部类和方法内部类的私有变量以及私有方法的，并且还特地的将成员内部类与方法内部类写成了一样的。发现并不会出现类冲突，但是在方法内方法内部类会覆盖掉成员内部类。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class OuterClass &#123;</span><br><span class=\"line\">    private String outerStr = &quot;外部类的私有变量&quot;;</span><br><span class=\"line\">    //成员内部类</span><br><span class=\"line\">    private class InnerClass&#123;</span><br><span class=\"line\">        private InnerClass()&#123;</span><br><span class=\"line\">            System.out.println(&quot;外部类可以调用成员内部类的私有构造方法&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        private String innerStr = &quot;成员内部类的私有变量&quot;;</span><br><span class=\"line\">        private void test()&#123;</span><br><span class=\"line\">            System.out.println(&quot;成员内部类可以直接调用&quot;+outerStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        System.out.println(&quot;外部类可以通过实例对象调用&quot;+new InnerClass().innerStr);</span><br><span class=\"line\">        new InnerClass().test();</span><br><span class=\"line\">        //方法内部类</span><br><span class=\"line\">        class InnerClass&#123;</span><br><span class=\"line\">            private InnerClass()&#123;</span><br><span class=\"line\">                System.out.println(&quot;外部类可以调用方法内部类的私有构造方法&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            private String innerStr = &quot;方法内部类的私有变量&quot;;</span><br><span class=\"line\">            private void test()&#123;</span><br><span class=\"line\">                System.out.println(&quot;方法内部类可以直接调用&quot;+outerStr);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //注意要有先后顺序</span><br><span class=\"line\">        System.out.println(&quot;外部类可以通过实例对象调用&quot;+new InnerClass().innerStr);</span><br><span class=\"line\">        new InnerClass().test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>运行结果：</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外部类可以调用成员内部类的私有构造方法</span><br><span class=\"line\">外部类可以通过实例对象调用成员内部类的私有变量</span><br><span class=\"line\">外部类可以调用成员内部类的私有构造方法</span><br><span class=\"line\">成员内部类可以直接调用外部类的私有变量</span><br><span class=\"line\">外部类可以调用方法内部类的私有构造方法</span><br><span class=\"line\">外部类可以通过实例对象调用方法内部类的私有变量</span><br><span class=\"line\">外部类可以调用方法内部类的私有构造方法</span><br><span class=\"line\">方法内部类可以直接调用外部类的私有变量</span><br></pre></td></tr></table></figure></p>\n<p>　　言归正传，下面正式开始全面解析内部类。</p>\n<h1 id=\"为什么使用内部类\"><a href=\"#为什么使用内部类\" class=\"headerlink\" title=\"为什么使用内部类\"></a>为什么使用内部类</h1><h1 id=\"内部类与外部类的联系\"><a href=\"#内部类与外部类的联系\" class=\"headerlink\" title=\"内部类与外部类的联系\"></a>内部类与外部类的联系</h1><h2 id=\"内部类访问外部类\"><a href=\"#内部类访问外部类\" class=\"headerlink\" title=\"内部类访问外部类\"></a>内部类访问外部类</h2><h2 id=\"外部类访问内部类\"><a href=\"#外部类访问内部类\" class=\"headerlink\" title=\"外部类访问内部类\"></a>外部类访问内部类</h2><h1 id=\"内部类的分类\"><a href=\"#内部类的分类\" class=\"headerlink\" title=\"内部类的分类\"></a>内部类的分类</h1><h2 id=\"成员内部类\"><a href=\"#成员内部类\" class=\"headerlink\" title=\"成员内部类\"></a>成员内部类</h2><h2 id=\"方法内部类\"><a href=\"#方法内部类\" class=\"headerlink\" title=\"方法内部类\"></a>方法内部类</h2><h2 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h2><h2 id=\"静态内部类\"><a href=\"#静态内部类\" class=\"headerlink\" title=\"静态内部类\"></a>静态内部类</h2>","site":{"data":{}},"excerpt":"<p>　　<code>震惊！外部类竟可以访问内部类private变量！！！</code><br>","more":"<br>　　标题致敬著名的某头条，在最近的开发过程中写了一段类似与这样的代码，惊奇的发现外部类竟然能对内部类做这样的事情！！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class OuterClass &#123;</span><br><span class=\"line\">    private String outerStr;</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        new InnerClass().innerStr = &quot;外部类也可以修改内部类私有变量&quot; ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public class InnerClass&#123;</span><br><span class=\"line\">        private String innerStr;</span><br><span class=\"line\">        public void test1()&#123;</span><br><span class=\"line\">            outerStr = &quot;内部类可以直接修改外部类私有变量&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　以我的暴脾气，既然遇见了一个问题就要刨根问底然后我有写了如下的测试，分别测试了成员内部类和方法内部类的私有变量以及私有方法的，并且还特地的将成员内部类与方法内部类写成了一样的。发现并不会出现类冲突，但是在方法内方法内部类会覆盖掉成员内部类。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class OuterClass &#123;</span><br><span class=\"line\">    private String outerStr = &quot;外部类的私有变量&quot;;</span><br><span class=\"line\">    //成员内部类</span><br><span class=\"line\">    private class InnerClass&#123;</span><br><span class=\"line\">        private InnerClass()&#123;</span><br><span class=\"line\">            System.out.println(&quot;外部类可以调用成员内部类的私有构造方法&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        private String innerStr = &quot;成员内部类的私有变量&quot;;</span><br><span class=\"line\">        private void test()&#123;</span><br><span class=\"line\">            System.out.println(&quot;成员内部类可以直接调用&quot;+outerStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void test()&#123;</span><br><span class=\"line\">        System.out.println(&quot;外部类可以通过实例对象调用&quot;+new InnerClass().innerStr);</span><br><span class=\"line\">        new InnerClass().test();</span><br><span class=\"line\">        //方法内部类</span><br><span class=\"line\">        class InnerClass&#123;</span><br><span class=\"line\">            private InnerClass()&#123;</span><br><span class=\"line\">                System.out.println(&quot;外部类可以调用方法内部类的私有构造方法&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            private String innerStr = &quot;方法内部类的私有变量&quot;;</span><br><span class=\"line\">            private void test()&#123;</span><br><span class=\"line\">                System.out.println(&quot;方法内部类可以直接调用&quot;+outerStr);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //注意要有先后顺序</span><br><span class=\"line\">        System.out.println(&quot;外部类可以通过实例对象调用&quot;+new InnerClass().innerStr);</span><br><span class=\"line\">        new InnerClass().test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>运行结果：</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外部类可以调用成员内部类的私有构造方法</span><br><span class=\"line\">外部类可以通过实例对象调用成员内部类的私有变量</span><br><span class=\"line\">外部类可以调用成员内部类的私有构造方法</span><br><span class=\"line\">成员内部类可以直接调用外部类的私有变量</span><br><span class=\"line\">外部类可以调用方法内部类的私有构造方法</span><br><span class=\"line\">外部类可以通过实例对象调用方法内部类的私有变量</span><br><span class=\"line\">外部类可以调用方法内部类的私有构造方法</span><br><span class=\"line\">方法内部类可以直接调用外部类的私有变量</span><br></pre></td></tr></table></figure></p>\n<p>　　言归正传，下面正式开始全面解析内部类。</p>\n<h1 id=\"为什么使用内部类\"><a href=\"#为什么使用内部类\" class=\"headerlink\" title=\"为什么使用内部类\"></a>为什么使用内部类</h1><h1 id=\"内部类与外部类的联系\"><a href=\"#内部类与外部类的联系\" class=\"headerlink\" title=\"内部类与外部类的联系\"></a>内部类与外部类的联系</h1><h2 id=\"内部类访问外部类\"><a href=\"#内部类访问外部类\" class=\"headerlink\" title=\"内部类访问外部类\"></a>内部类访问外部类</h2><h2 id=\"外部类访问内部类\"><a href=\"#外部类访问内部类\" class=\"headerlink\" title=\"外部类访问内部类\"></a>外部类访问内部类</h2><h1 id=\"内部类的分类\"><a href=\"#内部类的分类\" class=\"headerlink\" title=\"内部类的分类\"></a>内部类的分类</h1><h2 id=\"成员内部类\"><a href=\"#成员内部类\" class=\"headerlink\" title=\"成员内部类\"></a>成员内部类</h2><h2 id=\"方法内部类\"><a href=\"#方法内部类\" class=\"headerlink\" title=\"方法内部类\"></a>方法内部类</h2><h2 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h2><h2 id=\"静态内部类\"><a href=\"#静态内部类\" class=\"headerlink\" title=\"静态内部类\"></a>静态内部类</h2>"},{"title":"Docker基础;","date":"2018-09-06T08:54:28.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Docker基础.md","raw":"---\ntitle: Docker基础;\ndate: 2018-09-06 16:54:28\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Docker基础","published":1,"updated":"2018-09-06T08:54:28.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bt000v3wj4m5uurjn7","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Hibernate基础;","date":"2018-09-06T08:53:46.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Hibernate基础.md","raw":"---\ntitle: Hibernate基础;\ndate: 2018-09-06 16:53:46\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Hibernate基础","published":1,"updated":"2018-09-06T08:53:46.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bt000w3wj4dg5ab3nj","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Filter基础;","date":"2018-09-06T08:55:30.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Filter基础.md","raw":"---\ntitle: Filter基础;\ndate: 2018-09-06 16:55:30\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Filter基础","published":1,"updated":"2018-09-06T08:55:30.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bu000x3wj4o0w0iwgz","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Hibernate进阶;","date":"2018-09-06T08:54:04.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Hibernate进阶.md","raw":"---\ntitle: Hibernate进阶;\ndate: 2018-09-06 16:54:04\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Hibernate进阶","published":1,"updated":"2018-09-06T08:54:04.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bv000z3wj4fvjsrhg1","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Linux基础;","date":"2018-09-06T08:56:02.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Linux基础.md","raw":"---\ntitle: Linux基础;\ndate: 2018-09-06 16:56:02\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Linux基础","published":1,"updated":"2018-09-06T08:56:02.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bv00103wj41748w7k3","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"MQ基础;","date":"2018-09-06T08:54:20.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/MQ基础.md","raw":"---\ntitle: MQ基础;\ndate: 2018-09-06 16:54:20\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/MQ基础","published":1,"updated":"2018-09-06T08:54:20.120Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bw00113wj425wrfcfl","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"MyBatis基础;","date":"2018-09-06T08:52:55.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/MyBatis基础.md","raw":"---\ntitle: MyBatis基础;\ndate: 2018-09-06 16:52:55\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/MyBatis基础","published":1,"updated":"2018-09-06T08:52:55.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bw00123wj4zow9jwvt","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"MyBatis进阶;","date":"2018-09-06T08:53:12.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/MyBatis进阶.md","raw":"---\ntitle: MyBatis进阶;\ndate: 2018-09-06 16:53:12\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/MyBatis进阶","published":1,"updated":"2018-09-06T08:53:12.901Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bx00133wj48v3hvozx","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Redis基础;","date":"2018-09-06T08:54:55.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Redis基础.md","raw":"---\ntitle: Redis基础;\ndate: 2018-09-06 16:54:55\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Redis基础","published":1,"updated":"2018-09-06T08:54:55.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1by00143wj4uyey7v7y","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"SpringBoot基础","date":"2018-09-06T08:50:21.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/SpringBoot基础.md","raw":"---\ntitle: SpringBoot基础\ndate: 2018-09-06 16:50:21\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/SpringBoot基础","published":1,"updated":"2018-09-13T01:43:47.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1by00153wj4cs8dki5l","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"SpringBoot的Web开发;","date":"2018-09-06T08:51:07.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/SpringBoot的Web开发.md","raw":"---\ntitle: SpringBoot的Web开发;\ndate: 2018-09-06 16:51:07\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/SpringBoot的Web开发","published":1,"updated":"2018-09-06T08:51:07.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1bz00163wj4297rtjfo","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"SpringBoot核心;","date":"2018-09-06T08:50:33.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/SpringBoot核心.md","raw":"---\ntitle: SpringBoot核心;\ndate: 2018-09-06 16:50:33\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/SpringBoot核心","published":1,"updated":"2018-09-06T08:50:33.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1c000173wj4x4nzh7cj","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"SpringBoot的数据访问;","date":"2018-09-06T08:51:17.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/SpringBoot的数据访问.md","raw":"---\ntitle: SpringBoot的数据访问;\ndate: 2018-09-06 16:51:17\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/SpringBoot的数据访问","published":1,"updated":"2018-09-06T08:51:17.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1c200183wj46gp6sds9","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"SpringMVC基础;","date":"2018-09-06T08:50:03.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/SpringMVC基础.md","raw":"---\ntitle: SpringMVC基础;\ndate: 2018-09-06 16:50:03\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/SpringMVC基础","published":1,"updated":"2018-09-06T08:50:03.476Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1c300193wj4bhkgr2jv","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"Spring常用配置(二);","date":"2018-09-06T08:49:12.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->","source":"_posts/待完成/Spring常用配置.md","raw":"---\ntitle: Spring常用配置(二);\ndate: 2018-09-06 16:49:12\ntags:\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->","slug":"待完成/Spring常用配置","published":1,"updated":"2018-09-06T08:49:12.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1c3001a3wj4d0r963rp","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"},{"title":"设计模式（一）","date":"2018-08-20T07:41:24.000Z","_content":"<!-- more -->","source":"_posts/待完成/设计模式概述.md","raw":"---\ntitle: 设计模式（一）\ndate: 2018-08-20 15:41:24\ntags:\n\t设计模式\n---\n<!-- more -->","slug":"待完成/设计模式概述","published":1,"updated":"2018-08-21T05:28:26.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1c4001b3wj4if5b4jxe","content":"<a id=\"more\"></a>","site":{"data":{}},"excerpt":"","more":""},{"title":"随笔记","top":3,"date":"2018-09-25T01:16:19.000Z","_content":"　　这家伙很懒竟然没写摘要\n<!-- more -->\n","source":"_posts/待完成/随笔记.md","raw":"---\ntitle: 随笔记\ntop: 3\ndate: 2018-09-25 09:16:19\ntags:\n\t随笔记\n---\n　　这家伙很懒竟然没写摘要\n<!-- more -->\n","slug":"待完成/随笔记","published":1,"updated":"2018-09-25T01:19:18.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3lhi1dc001d3wj4j2fxbjrf","content":"<p>　　这家伙很懒竟然没写摘要<br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<p>　　这家伙很懒竟然没写摘要<br>","more":"</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl3lhi1b600073wj4rcgwsiy6","tag_id":"cl3lhi1be00093wj4ytf3x3nk","_id":"cl3lhi1bj000e3wj49uav8emu"},{"post_id":"cl3lhi1bj000f3wj4us30glh2","tag_id":"cl3lhi1be00093wj4ytf3x3nk","_id":"cl3lhi1bm000i3wj4dbisih8f"},{"post_id":"cl3lhi1bf000a3wj4htw9ff8r","tag_id":"cl3lhi1bi000d3wj4nl6wov8s","_id":"cl3lhi1bn000k3wj4y7h24tto"},{"post_id":"cl3lhi1bh000b3wj4x0b5m2tc","tag_id":"cl3lhi1bi000d3wj4nl6wov8s","_id":"cl3lhi1bq000o3wj44jqc0s92"},{"post_id":"cl3lhi1bi000c3wj4vj1pftyd","tag_id":"cl3lhi1bp000m3wj4uask1onz","_id":"cl3lhi1bs000r3wj41s0fki0k"},{"post_id":"cl3lhi1bq000p3wj4do5clxbz","tag_id":"cl3lhi1bp000m3wj4uask1onz","_id":"cl3lhi1bs000t3wj4i8cbpgh0"},{"post_id":"cl3lhi1br000q3wj4vgf7jfl1","tag_id":"cl3lhi1bs000u3wj4fxnlvgwz","_id":"cl3lhi1bu000y3wj4zrcccr7a"},{"post_id":"cl3lhi1c4001b3wj4if5b4jxe","tag_id":"cl3lhi1bs000u3wj4fxnlvgwz","_id":"cl3lhi1c5001c3wj4smrxqdd7"},{"post_id":"cl3lhi1dc001d3wj4j2fxbjrf","tag_id":"cl3lhi1dd001e3wj4kpwywut1","_id":"cl3lhi1de001f3wj4y7f7u7y8"}],"Tag":[{"name":"nodejs","_id":"cl3lhi1be00093wj4ytf3x3nk"},{"name":"spring","_id":"cl3lhi1bi000d3wj4nl6wov8s"},{"name":"Java基础","_id":"cl3lhi1bp000m3wj4uask1onz"},{"name":"设计模式","_id":"cl3lhi1bs000u3wj4fxnlvgwz"},{"name":"随笔记","_id":"cl3lhi1dd001e3wj4kpwywut1"}]}}